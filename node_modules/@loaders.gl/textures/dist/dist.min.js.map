{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///../worker-utils/src/lib/env-utils/globals.ts","webpack:///../images/src/lib/utils/globals.ts","webpack:///(webpack)/buildin/global.js","webpack:////home/user/apps/loaders.gl/node_modules/process/browser.js","webpack:///./src/lib/encoders/encode-texture.ts","webpack:///./src/bundle.ts","webpack:///../worker-utils/src/lib/library-utils/library-utils.ts","webpack:///../worker-utils/src/lib/env-utils/assert.ts","webpack:///./src/lib/parsers/basis-module-loader.ts","webpack:///./src/lib/gl-constants.ts","webpack:///./src/lib/parsers/parse-basis.js","webpack:///./src/basis-loader.ts","webpack:///./src/lib/utils/version.ts","webpack:////home/user/apps/loaders.gl/node_modules/ktx-parse/dist/ktx-parse.modern.js","webpack:///./src/lib/utils/extract-mipmap-images.ts","webpack:///./src/lib/utils/ktx-format-helper.ts","webpack:///./src/lib/parsers/parse-ktx.js","webpack:///../loader-utils/src/lib/env-utils/assert.ts","webpack:///./src/lib/parsers/parse-dds.ts","webpack:///./src/lib/parsers/parse-pvr.ts","webpack:///./src/lib/parsers/parse-compressed-texture.ts","webpack:///./src/compressed-texture-loader.ts","webpack:///./src/crunch-loader.ts","webpack:///./src/lib/parsers/parse-npy.js","webpack:///./src/npy-loader.ts","webpack:///./src/compressed-texture-writer.ts","webpack:///../images/src/lib/utils/assert.js","webpack:///../images/src/lib/category-api/image-type.ts","webpack:///../images/src/lib/category-api/parsed-image-api.ts","webpack:///../images/src/lib/parsers/svg-utils.ts","webpack:///../images/src/lib/parsers/parse-to-image.ts","webpack:///../images/src/lib/parsers/parse-to-image-bitmap.ts","webpack:///../images/src/lib/category-api/binary-image-api.ts","webpack:///../images/src/image-loader.ts","webpack:///../images/src/lib/utils/version.ts","webpack:///../images/src/lib/parsers/parse-image.ts","webpack:///../images/src/lib/parsers/parse-to-node-image.ts","webpack:///../loader-utils/src/lib/path-utils/file-aliases.ts","webpack:///./src/lib/texture-api/generate-url.ts","webpack:///./src/lib/texture-api/async-deep-map.ts","webpack:///./src/lib/texture-api/deep-load.ts","webpack:///./src/lib/texture-api/load-image.ts","webpack:///./src/lib/texture-api/load-image-array.ts","webpack:///./src/lib/texture-api/load-image-cube.ts","webpack:///./src/lib/utils/texture-formats.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","globals","self","global","document","global_","isBrowser","process","String","browser","isWorker","importScripts","matches","orientation","version","exec","parseFloat","g","this","Function","e","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","MODULE_ROOT","__dirname","async","encodeImageURLToCompressedTextureURL","inputUrl","outputUrl","childProcess","ChildProcessProxy","start","command","spawn","moduleExports","require","_global","loaders","assign","loadLibraryPromises","loadLibrary","libraryUrl","moduleName","options","library","startsWith","CDN","condition","message","assert","getLibraryUrl","endsWith","response","fetch","arrayBuffer","node","scriptSource","id","eval","script","createElement","appendChild","createTextNode","text","body","loadLibraryFromString","loadLibraryFromFile","loadBasisPromise","loadBasisModule","basis","BASIS","wasmBinary","Promise","all","globalThis","BasisModule","resolve","then","BasisFile","initializeBasis","initializeBasisModule","loadBasis","GL","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_R11_EAC","COMPRESSED_SIGNED_R11_EAC","COMPRESSED_RG11_EAC","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB_ATC_WEBGL","COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL","COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL","COMPRESSED_RGBA_ASTC_4X4_KHR","COMPRESSED_RGBA_ASTC_5X4_KHR","COMPRESSED_RGBA_ASTC_5X5_KHR","COMPRESSED_RGBA_ASTC_6X5_KHR","COMPRESSED_RGBA_ASTC_6X6_KHR","COMPRESSED_RGBA_ASTC_8X5_KHR","COMPRESSED_RGBA_ASTC_8X6_KHR","COMPRESSED_RGBA_ASTC_8X8_KHR","COMPRESSED_RGBA_ASTC_10X5_KHR","COMPRESSED_RGBA_ASTC_10X6_KHR","COMPRESSED_RGBA_ASTC_10X8_KHR","COMPRESSED_RGBA_ASTC_10X10_KHR","COMPRESSED_RGBA_ASTC_12X10_KHR","COMPRESSED_RGBA_ASTC_12X12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","OutputFormat","etc1","basisFormat","compressed","etc2","bc1","format","bc3","bc4","bc5","rgba32","rgb565","bgr565","rgba4444","transcodeImage","basisFile","imageIndex","levelIndex","width","getImageWidth","height","getImageHeight","hasAlpha","getHasAlpha","alpha","noAlpha","toLowerCase","getBasisOptions","decodedSize","getImageTranscodedSizeInBytes","decodedData","Uint8Array","data","BasisWorkerLoader","worker","extensions","mimeTypes","tests","binary","libraryPath","BasisLoader","parse","startTranscoding","imageCount","getNumImages","images","levelsCount","getNumLevels","levels","close","delete","f","NONE","BASISLZ","ZSTD","ZLIB","BASICFORMAT","UNSPECIFIED","ETC1S","UASTC","SRGB","LINEAR","ITU","NTSC","SLOG","SLOG2","ALPHA_STRAIGHT","ALPHA_PREMULTIPLIED","RGB","RRR","GGG","AAA","RGBA","RRRG","U","vkFormat","typeSize","pixelWidth","pixelHeight","pixelDepth","layerCount","faceCount","supercompressionScheme","dataFormatDescriptor","vendorId","descriptorType","versionNumber","descriptorBlockSize","colorModel","colorPrimaries","transferFunction","flags","texelBlockDimension","x","y","z","w","bytesPlane","samples","keyValue","globalData","_dataView","DataView","buffer","byteOffset","_littleEndian","_offset","getUint8","getUint16","getUint32","_","TextDecoder","decode","Buffer","from","toString","extractMipmapImages","mipMapLevels","levelWidth","levelHeight","offset","levelSize","getLevelSize","levelData","getLevelData","internalFormat","Math","max","index","isArray","sizeFunction","VULKAN_TO_WEBGL_FORMAT_MAP","131","132","133","134","135","136","137","138","139","140","141","142","147","148","149","150","151","152","153","154","155","156","157","COMPRESSED_RGBA_ASTC_4x4_KHR","158","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","159","COMPRESSED_RGBA_ASTC_5x4_KHR","160","161","COMPRESSED_RGBA_ASTC_5x5_KHR","162","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","163","COMPRESSED_RGBA_ASTC_6x5_KHR","164","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","165","COMPRESSED_RGBA_ASTC_6x6_KHR","166","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","167","COMPRESSED_RGBA_ASTC_8x5_KHR","168","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","169","COMPRESSED_RGBA_ASTC_8x6_KHR","170","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","171","COMPRESSED_RGBA_ASTC_8x8_KHR","172","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","173","COMPRESSED_RGBA_ASTC_10x5_KHR","174","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","175","COMPRESSED_RGBA_ASTC_10x6_KHR","176","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","177","COMPRESSED_RGBA_ASTC_10x8_KHR","178","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","179","COMPRESSED_RGBA_ASTC_10x10_KHR","180","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","181","COMPRESSED_RGBA_ASTC_12x10_KHR","182","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","183","COMPRESSED_RGBA_ASTC_12x12_KHR","184","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","1000054000","1000054001","1000066000","1000066001","1000066002","1000066003","1000066004","1000066005","1000066006","1000066007","1000066008","1000066009","1000066010","1000066011","1000066012","1000066013","KTX2_ID","parseKTX","ktx","Uint32Array","BYTES_PER_ELEMENT","_nextUint32","h","_nextUint64","uncompressedByteLength","u","_skip","_nextUint16","_nextUint8","D","bitOffset","bitLength","channelID","samplePosition","sampleLower","sampleUpper","b","_scan","byteLength","match","B","A","S","L","I","imageFlags","rgbSliceByteOffset","rgbSliceByteLength","alphaSliceByteOffset","alphaSliceByteLength","R","E","T","O","P","C","F","G","endpointCount","selectorCount","imageDescs","endpointsData","selectorsData","tablesData","extendedData","read","level","getATCLevelSize","getDxt1LevelSize","getATCALevelSize","getDxtXLevelSize","getATCILevelSize","DDS_CONSTANTS","MAGIC_NUMBER","HEADER_LENGTH","MAGIC_NUMBER_INDEX","HEADER_SIZE_INDEX","HEADER_FLAGS_INDEX","HEADER_HEIGHT_INDEX","HEADER_WIDTH_INDEX","MIPMAPCOUNT_INDEX","HEADER_PF_FLAGS_INDEX","HEADER_PF_FOURCC_INDEX","DDSD_MIPMAPCOUNT","DDPF_FOURCC","PIXEL_FORMATS","DXT1","DXT3","DXT5","ATCA","ATCI","SIZE_FUNCTIONS","parseDDS","header","Int32Array","pixelFormatNumber","Boolean","fourCC","fromCharCode","dataOffset","PVR_CONSTANTS","PVR_PIXEL_FORMATS","0","1","2","3","6","7","9","11","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","PVR_SIZE_FUNCTIONS","pvrtc2bppSize","pvrtc4bppSize","dxtEtcSmallSize","dxtEtcAstcBigSize","floor","parseCompressedTexture","isKTX","isDDS","isPVR","pvrFormat","colourSpace","pixelFormats","parsePVR","CompressedTextureWorkerLoader","CompressedTextureLoader","CrunchLoader","crunch","LITTLE_ENDIAN_OS","systemIsLittleEndian","DTYPES","u1","i1","Int8Array","u2","Uint16Array","i2","Int16Array","u4","i4","f4","Float32Array","f8","Float64Array","parseNPY","view","headerEndOffset","majorVersion","headerLength","decoder","headerArray","headerText","JSON","replace","parseHeader","numpyType","descr","ArrayType","slice","console","warn","arrayByteLength","shape","reduce","NPYWorkerLoader","npy","NPYLoader","parseSync","CompressedTextureWriter","texture","compression","quality","mipmap","flipY","toolFlags","encodeURLtoURL","_parseImageNode","IMAGE_SUPPORTED","Image","IMAGE_BITMAP_SUPPORTED","ImageBitmap","NODE_IMAGE_SUPPORTED","DATA_SUPPORTED","getImageType","image","getImageTypeOrNull","getImageData","canvas","context","getContext","drawImage","SVG_DATA_URL_PATTERN","SVG_URL_PATTERN","isSVG","url","test","getBlob","Blob","parseToImage","blobOrDataUrl","xmlText","unescape","encodeURIComponent","error","btoa","getBlobOrSVGDataUrl","URL","webkitURL","objectUrl","createObjectURL","src","reject","onload","onerror","err","loadToImage","revokeObjectURL","EMPTY_OBJECT","imagebitmapOptionsSupported","parseToImageBitmap","blob","imagebitmapOptions","imagebitmap","isEmptyObject","createImageBitmap","safeCreateImageBitmap","getBinaryImageMetadata","binaryData","dataView","toDataView","mimeType","getPngMetadata","tableMarkers","sofMarkers","Set","add","getJpegMarkers","has","getJpegMetadata","getGifMetadata","getBmpMetadata","ArrayBuffer","isView","ImageLoader","imageType","type","getDefaultImageType","isImageTypeSupported","getLoadableImageType","parseToNodeImage","pathPrefix","fileAliases","generateUrl","getUrl","urlOptions","baseUrl","filename","alias","replacement","resolvePath","mapSubtree","func","urlArray","promises","map","mapArray","values","promise","mapObject","deepLoad","urlTree","load","tree","asyncDeepMap","shallowLoad","loadImageTexture","imageUrls","getImageUrls","mipLevels","urls","lod","getImageSize","log2","getMipLevels","mipLevel","getMipmappedImageUrls","loadImageTextureArray","count","getImageArrayUrls","CUBE_FACES","face","direction","axis","sign","loadImageTextureCube","getImageCubeUrls","BROWSER_PREFIXES","WEBGL_EXTENSIONS","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_s3tc_srgb","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_atc","WEBGL_compressed_texture_astc","EXT_texture_compression_rgtc","formats","getSupportedGPUTextureFormats","gl","getWebGLContext","undefined","prefix","extension","getExtension","gpuTextureFormat"],"mappings":"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","file":"dist.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\nconst self_: {[key: string]: any} = globals.self || globals.window || globals.global || {};\nconst window_: {[key: string]: any} = globals.window || globals.self || globals.global || {};\nconst global_: {[key: string]: any} = globals.global || globals.self || globals.window || {};\nconst document_: {[key: string]: any} = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in the browser, false if running in Node.js */\nexport const isBrowser: boolean =\n  // @ts-ignore process.browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running on a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n/** true if running on a mobile device */\nexport const isMobile: boolean =\n  typeof window !== 'undefined' && typeof window.orientation !== 'undefined';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n\n/** Version of Node.js if running under Node, otherwise 0 */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\nconst self_ = globals.self || globals.window || globals.global;\nconst window_ = globals.window || globals.self || globals.global;\nconst global_ = globals.global || globals.self || globals.window;\nconst document_ = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\nexport const isBrowser =\n  // @ts-ignore\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\nexport const isWorker = typeof importScripts === 'function';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\nexport const nodeVersion = (matches && parseFloat(matches[1])) || 0;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import {ChildProcessProxy} from '@loaders.gl/worker-utils';\n\nconst MODULE_ROOT = `${__dirname}/../../..`;\n\n/*\n * @see https://github.com/TimvanScherpenzeel/texture-compressor\n */\nexport async function encodeImageURLToCompressedTextureURL(inputUrl, outputUrl) {\n  // prettier-ignore\n  const args = [\n    // Note: our actual executable is `npx`, so `texture-compressor` is an argument\n    'texture-compressor',\n    '--type', 's3tc',\n    '--compression', 'DXT1',\n    '--quality', 'normal',\n    '--input', inputUrl,\n    '--output', outputUrl\n  ];\n  const childProcess = new ChildProcessProxy();\n  await childProcess.start({\n    command: 'npx',\n    arguments: args,\n    spawn: {\n      cwd: MODULE_ROOT\n    }\n  });\n  return outputUrl;\n}\n","// @ts-nocheck\nconst moduleExports = require('./index');\nconst _global = typeof window === 'undefined' ? global : window;\n_global.loaders = _global.loaders || {};\nmodule.exports = Object.assign(_global.loaders, moduleExports);\n","/* global importScripts */\nimport {global, isBrowser, isWorker} from '../env-utils/globals';\nimport * as node from '../node/require-utils.node';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\n// TODO - unpkg.com doesn't seem to have a `latest` specifier for alpha releases...\nconst LATEST = 'beta';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : LATEST;\n\nconst loadLibraryPromises = {}; // promises\n\n/**\n * Dynamically loads a library (\"module\")\n *\n * - wasm library: Array buffer is returned\n * - js library: Parse JS is returned\n *\n * Method depends on environment\n * - browser - script element is created and installed on document\n * - worker - eval is called on global context\n * - node - file is required\n *\n * @param libraryUrl\n * @param moduleName\n * @param options\n */\nexport async function loadLibrary(\n  libraryUrl: string,\n  moduleName: string | null = null,\n  options: object = {}\n): Promise<any> {\n  if (moduleName) {\n    libraryUrl = getLibraryUrl(libraryUrl, moduleName, options);\n  }\n\n  // Ensure libraries are only loaded once\n  loadLibraryPromises[libraryUrl] =\n    loadLibraryPromises[libraryUrl] || loadLibraryFromFile(libraryUrl);\n  return await loadLibraryPromises[libraryUrl];\n}\n\n// TODO - sort out how to resolve paths for main/worker and dev/prod\nexport function getLibraryUrl(library, moduleName?: string, options?): string {\n  // Check if already a URL\n  if (library.startsWith('http')) {\n    return library;\n  }\n\n  // Allow application to import and supply libraries through `options.modules`\n  const modules = options.modules || {};\n  if (modules[library]) {\n    return modules[library];\n  }\n\n  // Load from local files, not from CDN scripts in Node.js\n  // TODO - needs to locate the modules directory when installed!\n  if (!isBrowser) {\n    return `modules/${moduleName}/dist/libs/${library}`;\n  }\n\n  // In browser, load from external scripts\n  if (options.CDN) {\n    assert(options.CDN.startsWith('http'));\n    return `${options.CDN}/${moduleName}@${VERSION}/dist/libs/${library}`;\n  }\n\n  // TODO - loading inside workers requires paths relative to worker script location...\n  if (isWorker) {\n    return `../src/libs/${library}`;\n  }\n\n  return `modules/${moduleName}/src/libs/${library}`;\n}\n\nasync function loadLibraryFromFile(libraryUrl) {\n  if (libraryUrl.endsWith('wasm')) {\n    const response = await fetch(libraryUrl);\n    return await response.arrayBuffer();\n  }\n\n  if (!isBrowser) {\n    return node.requireFromFile && (await node.requireFromFile(libraryUrl));\n  }\n  if (isWorker) {\n    return importScripts(libraryUrl);\n  }\n  // TODO - fix - should be more secure than string parsing since observes CORS\n  // if (isBrowser) {\n  //   return await loadScriptFromFile(libraryUrl);\n  // }\n\n  const response = await fetch(libraryUrl);\n  const scriptSource = await response.text();\n  return loadLibraryFromString(scriptSource, libraryUrl);\n}\n\n/*\nasync function loadScriptFromFile(libraryUrl) {\n  const script = document.createElement('script');\n  script.src = libraryUrl;\n  return await new Promise((resolve, reject) => {\n    script.onload = data => {\n      resolve(data);\n    };\n    script.onerror = reject;\n  });\n}\n*/\n\n// TODO - Needs security audit...\n//  - Raw eval call\n//  - Potentially bypasses CORS\n// Upside is that this separates fetching and parsing\n// we could create a`LibraryLoader` or`ModuleLoader`\nfunction loadLibraryFromString(scriptSource, id) {\n  if (!isBrowser) {\n    return node.requireFromString && node.requireFromString(scriptSource, id);\n  }\n\n  if (isWorker) {\n    // Use lvalue trick to make eval run in global scope\n    eval.call(global, scriptSource); // eslint-disable-line no-eval\n    // https://stackoverflow.com/questions/9107240/1-evalthis-vs-evalthis-in-javascript\n    // http://perfectionkills.com/global-eval-what-are-the-options/\n    return null;\n  }\n\n  const script = document.createElement('script');\n  script.id = id;\n  // most browsers like a separate text node but some throw an error. The second method covers those.\n  try {\n    script.appendChild(document.createTextNode(scriptSource));\n  } catch (e) {\n    script.text = scriptSource;\n  }\n  document.body.appendChild(script);\n  return null;\n}\n\n// TODO - technique for module injection into worker, from THREE.DracoLoader...\n/*\nfunction combineWorkerWithLibrary(worker, jsContent) {\n  var fn = wWorker.toString();\n  var body = [\n    '// injected',\n    jsContent,\n    '',\n    '// worker',\n    fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))\n  ].join('\\n');\n  this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n}\n*/\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\n\n/** Throws an `Error` with the optional `message` if `condition` is falsy */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loaders.gl assertion failed.');\n  }\n}\n","import {loadLibrary} from '@loaders.gl/worker-utils';\n\nlet loadBasisPromise;\n\nexport async function loadBasisModule(options) {\n  const modules = options.modules || {};\n  if (modules.basis) {\n    return modules.basis;\n  }\n\n  loadBasisPromise = loadBasisPromise || loadBasis(options);\n  return await loadBasisPromise;\n}\n\nasync function loadBasis(options) {\n  let BASIS = null;\n  let wasmBinary = null;\n\n  [BASIS, wasmBinary] = await Promise.all([\n    await loadLibrary('basis_transcoder.js', 'textures', options),\n    await loadLibrary('basis_transcoder.wasm', 'textures', options)\n  ]);\n\n  // Depends on how import happened...\n  // @ts-ignore TS2339: Property does not exist on type\n  BASIS = BASIS || globalThis.BASIS;\n  return await initializeBasisModule(BASIS, wasmBinary);\n}\n\nfunction initializeBasisModule(BasisModule, wasmBinary) {\n  const options: {wasmBinary?} = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    // if you try to return BasisModule the browser crashes!\n    BasisModule(options).then((module) => {\n      const {BasisFile, initializeBasis} = module;\n      initializeBasis();\n      resolve({BasisFile});\n    });\n  });\n}\n","/* eslint-disable camelcase */\nexport const GL = {\n  // WEBGL_compressed_texture_s3tc\n\n  COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83f0,\n  COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83f1,\n  COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83f2,\n  COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83f3,\n\n  // WEBGL_compressed_texture_es3\n\n  COMPRESSED_R11_EAC: 0x9270,\n  COMPRESSED_SIGNED_R11_EAC: 0x9271,\n  COMPRESSED_RG11_EAC: 0x9272,\n  COMPRESSED_SIGNED_RG11_EAC: 0x9273,\n  COMPRESSED_RGB8_ETC2: 0x9274,\n  COMPRESSED_RGBA8_ETC2_EAC: 0x9275,\n  COMPRESSED_SRGB8_ETC2: 0x9276,\n  COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9277,\n  COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9278,\n  COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9279,\n\n  // WEBGL_compressed_texture_pvrtc\n\n  COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8c00,\n  COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8c02,\n  COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8c01,\n  COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8c03,\n\n  // WEBGL_compressed_texture_etc1\n\n  COMPRESSED_RGB_ETC1_WEBGL: 0x8d64,\n\n  // WEBGL_compressed_texture_atc\n\n  COMPRESSED_RGB_ATC_WEBGL: 0x8c92,\n  COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL: 0x8c93,\n  COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL: 0x87ee,\n\n  // WEBGL_compressed_texture_astc\n\n  COMPRESSED_RGBA_ASTC_4X4_KHR: 0x93b0,\n  COMPRESSED_RGBA_ASTC_5X4_KHR: 0x93b1,\n  COMPRESSED_RGBA_ASTC_5X5_KHR: 0x93b2,\n  COMPRESSED_RGBA_ASTC_6X5_KHR: 0x93b3,\n  COMPRESSED_RGBA_ASTC_6X6_KHR: 0x93b4,\n  COMPRESSED_RGBA_ASTC_8X5_KHR: 0x93b5,\n  COMPRESSED_RGBA_ASTC_8X6_KHR: 0x93b6,\n  COMPRESSED_RGBA_ASTC_8X8_KHR: 0x93b7,\n  COMPRESSED_RGBA_ASTC_10X5_KHR: 0x93b8,\n  COMPRESSED_RGBA_ASTC_10X6_KHR: 0x93b9,\n  COMPRESSED_RGBA_ASTC_10X8_KHR: 0x93ba,\n  COMPRESSED_RGBA_ASTC_10X10_KHR: 0x93bb,\n  COMPRESSED_RGBA_ASTC_12X10_KHR: 0x93bc,\n  COMPRESSED_RGBA_ASTC_12X12_KHR: 0x93bd,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR: 0x93d0,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR: 0x93d1,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR: 0x93d2,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR: 0x93d3,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR: 0x93d4,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR: 0x93d5,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR: 0x93d6,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR: 0x93d7,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR: 0x93d8,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR: 0x93d9,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR: 0x93da,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR: 0x93db,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR: 0x93dc,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR: 0x93dd,\n\n  // EXT_texture_compression_rgtc\n\n  COMPRESSED_RED_RGTC1_EXT: 0x8dbb,\n  COMPRESSED_SIGNED_RED_RGTC1_EXT: 0x8dbc,\n  COMPRESSED_RED_GREEN_RGTC2_EXT: 0x8dbd,\n  COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: 0x8dbe,\n\n  // WEBGL_compressed_texture_s3tc_srgb\n\n  COMPRESSED_SRGB_S3TC_DXT1_EXT: 0x8c4c,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: 0x8c4d,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: 0x8c4e,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: 0x8c4f\n};\n","import {loadBasisModule} from './basis-module-loader';\nimport {GL} from '../gl-constants';\n\nconst OutputFormat = {\n  etc1: {basisFormat: 0, compressed: true},\n  etc2: {basisFormat: 1, compressed: true},\n  bc1: {basisFormat: 2, compressed: true, format: GL.COMPRESSED_RGB_S3TC_DXT1_EXT},\n  bc3: {basisFormat: 3, compressed: true, format: GL.COMPRESSED_RGBA_S3TC_DXT5_EXT},\n  bc4: {basisFormat: 4, compressed: true},\n  bc5: {basisFormat: 5, compressed: true},\n  'bc7-m6-opaque-only': {basisFormat: 6, compressed: true},\n  'bc7-m5': {basisFormat: 7, compressed: true},\n  'pvrtc1-4-rgb': {basisFormat: 8, compressed: true},\n  'pvrtc1-4-rgba': {basisFormat: 9, compressed: true},\n  'astc-4x4': {basisFormat: 10, compressed: true},\n  'atc-rgb': {basisFormat: 11, compressed: true},\n  'atc-rgba-interpolated-alpha': {basisFormat: 12, compressed: true},\n  rgba32: {basisFormat: 13, compressed: false},\n  rgb565: {basisFormat: 14, compressed: false},\n  bgr565: {basisFormat: 15, compressed: false},\n  rgba4444: {basisFormat: 16, compressed: false}\n};\n\nexport default async function parseBasis(data, options) {\n  const {BasisFile} = await loadBasisModule(options);\n  const basisFile = new BasisFile(new Uint8Array(data));\n\n  try {\n    if (!basisFile.startTranscoding()) {\n      return null;\n    }\n\n    const imageCount = basisFile.getNumImages();\n    const images = [];\n\n    for (let imageIndex = 0; imageIndex < imageCount; imageIndex++) {\n      const levelsCount = basisFile.getNumLevels(imageIndex);\n      const levels = [];\n\n      for (let levelIndex = 0; levelIndex < levelsCount; levelIndex++) {\n        levels.push(transcodeImage(basisFile, imageIndex, levelIndex, options));\n      }\n\n      images.push(levels);\n    }\n\n    return images;\n  } finally {\n    basisFile.close();\n    basisFile.delete();\n  }\n}\n\nfunction getBasisOptions(options, hasAlpha) {\n  let format = options && options.basis && options.basis.format;\n  if (typeof format === 'object') {\n    format = hasAlpha ? format.alpha : format.noAlpha;\n  }\n\n  format = format.toLowerCase();\n  return OutputFormat[format];\n}\n\nfunction transcodeImage(basisFile, imageIndex, levelIndex, options) {\n  const width = basisFile.getImageWidth(imageIndex, levelIndex);\n  const height = basisFile.getImageHeight(imageIndex, levelIndex);\n\n  // See https://github.com/BinomialLLC/basis_universal/pull/83\n  const hasAlpha = basisFile.getHasAlpha(/* imageIndex, levelIndex */);\n\n  // Check options for output format etc\n  const {compressed, format, basisFormat} = getBasisOptions(options, hasAlpha);\n\n  const decodedSize = basisFile.getImageTranscodedSizeInBytes(imageIndex, levelIndex, basisFormat);\n  const decodedData = new Uint8Array(decodedSize);\n\n  if (!basisFile.transcodeImage(decodedData, imageIndex, levelIndex, basisFormat, 0, 0)) {\n    return null;\n  }\n\n  return {\n    // standard loaders.gl image category payload\n    width,\n    height,\n    data: decodedData,\n    compressed,\n\n    // Additional fields\n    // Add levelSize field.\n    hasAlpha,\n    format\n  };\n}\n","import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport parseBasis from './lib/parsers/parse-basis';\n\n/**\n * Worker loader for Basis super compressed textures\n */\nexport const BasisWorkerLoader = {\n  name: 'Basis',\n  id: 'basis',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['basis'],\n  mimeTypes: ['application/octet-stream'],\n  tests: ['sB'],\n  binary: true,\n  options: {\n    basis: {\n      format: 'rgb565', // TODO: auto...\n      libraryPath: 'libs/'\n    }\n  }\n};\n\n/**\n * Loader for Basis super compressed textures\n */\nexport const BasisLoader = {\n  ...BasisWorkerLoader,\n  parse: parseBasis\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckBasisWorkerLoader: Loader = BasisWorkerLoader;\nexport const _TypecheckBasisLoader: LoaderWithParser = BasisLoader;\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// TODO: use 'latest' instead of 'beta' when 3.0.0 version is released as 'latest'\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'beta';\n","const t=new Uint8Array([0]),e=[171,75,84,88,32,50,48,187,13,10,26,10];var n,i,s,a,r,o,l,f;!function(t){t[t.NONE=0]=\"NONE\",t[t.BASISLZ=1]=\"BASISLZ\",t[t.ZSTD=2]=\"ZSTD\",t[t.ZLIB=3]=\"ZLIB\"}(n||(n={})),function(t){t[t.BASICFORMAT=0]=\"BASICFORMAT\"}(i||(i={})),function(t){t[t.UNSPECIFIED=0]=\"UNSPECIFIED\",t[t.ETC1S=163]=\"ETC1S\",t[t.UASTC=166]=\"UASTC\"}(s||(s={})),function(t){t[t.UNSPECIFIED=0]=\"UNSPECIFIED\",t[t.SRGB=1]=\"SRGB\"}(a||(a={})),function(t){t[t.UNSPECIFIED=0]=\"UNSPECIFIED\",t[t.LINEAR=1]=\"LINEAR\",t[t.SRGB=2]=\"SRGB\",t[t.ITU=3]=\"ITU\",t[t.NTSC=4]=\"NTSC\",t[t.SLOG=5]=\"SLOG\",t[t.SLOG2=6]=\"SLOG2\"}(r||(r={})),function(t){t[t.ALPHA_STRAIGHT=0]=\"ALPHA_STRAIGHT\",t[t.ALPHA_PREMULTIPLIED=1]=\"ALPHA_PREMULTIPLIED\"}(o||(o={})),function(t){t[t.RGB=0]=\"RGB\",t[t.RRR=3]=\"RRR\",t[t.GGG=4]=\"GGG\",t[t.AAA=15]=\"AAA\"}(l||(l={})),function(t){t[t.RGB=0]=\"RGB\",t[t.RGBA=3]=\"RGBA\",t[t.RRR=4]=\"RRR\",t[t.RRRG=5]=\"RRRG\"}(f||(f={}));class U{constructor(){this.vkFormat=0,this.typeSize=1,this.pixelWidth=0,this.pixelHeight=0,this.pixelDepth=0,this.layerCount=0,this.faceCount=1,this.supercompressionScheme=n.NONE,this.levels=[],this.dataFormatDescriptor=[{vendorId:0,descriptorType:i.BASICFORMAT,versionNumber:2,descriptorBlockSize:40,colorModel:s.UNSPECIFIED,colorPrimaries:a.SRGB,transferFunction:a.SRGB,flags:o.ALPHA_STRAIGHT,texelBlockDimension:{x:4,y:4,z:1,w:1},bytesPlane:[],samples:[]}],this.keyValue={},this.globalData=null}}class c{constructor(t,e,n,i){this._dataView=new DataView(t.buffer,t.byteOffset+e,n),this._littleEndian=i,this._offset=0}_nextUint8(){const t=this._dataView.getUint8(this._offset);return this._offset+=1,t}_nextUint16(){const t=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,t}_nextUint32(){const t=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint64(){const t=this._dataView.getUint32(this._offset,this._littleEndian)+2**32*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,t}_skip(t){return this._offset+=t,this}_scan(t,e=0){const n=this._offset;let i=0;for(;this._dataView.getUint8(this._offset)!==e&&i<t;)i++,this._offset++;return i<t&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+n,i)}}function h(t){return\"undefined\"!=typeof TextEncoder?(new TextEncoder).encode(t):Buffer.from(t)}function _(t){return\"undefined\"!=typeof TextDecoder?(new TextDecoder).decode(t):Buffer.from(t).toString(\"utf8\")}function g(t){let e=0;for(const n of t)e+=n.byteLength;const n=new Uint8Array(e);let i=0;for(const e of t)n.set(new Uint8Array(e),i),i+=e.byteLength;return n}function p(t){const n=new Uint8Array(t.buffer,t.byteOffset,e.length);if(n[0]!==e[0]||n[1]!==e[1]||n[2]!==e[2]||n[3]!==e[3]||n[4]!==e[4]||n[5]!==e[5]||n[6]!==e[6]||n[7]!==e[7]||n[8]!==e[8]||n[9]!==e[9]||n[10]!==e[10]||n[11]!==e[11])throw new Error(\"Missing KTX 2.0 identifier.\");const i=new U,s=17*Uint32Array.BYTES_PER_ELEMENT,a=new c(t,e.length,s,!0);i.vkFormat=a._nextUint32(),i.typeSize=a._nextUint32(),i.pixelWidth=a._nextUint32(),i.pixelHeight=a._nextUint32(),i.pixelDepth=a._nextUint32(),i.layerCount=a._nextUint32(),i.faceCount=a._nextUint32();const r=a._nextUint32();i.supercompressionScheme=a._nextUint32();const o=a._nextUint32(),l=a._nextUint32(),f=a._nextUint32(),h=a._nextUint32(),g=a._nextUint64(),p=a._nextUint64(),x=new c(t,e.length+s,3*r*8,!0);for(let e=0;e<r;e++)i.levels.push({levelData:new Uint8Array(t.buffer,t.byteOffset+x._nextUint64(),x._nextUint64()),uncompressedByteLength:x._nextUint64()});const u=new c(t,o,l,!0),y={vendorId:u._skip(4)._nextUint16(),descriptorType:u._nextUint16(),versionNumber:u._nextUint16(),descriptorBlockSize:u._nextUint16(),colorModel:u._nextUint8(),colorPrimaries:u._nextUint8(),transferFunction:u._nextUint8(),flags:u._nextUint8(),texelBlockDimension:{x:u._nextUint8()+1,y:u._nextUint8()+1,z:u._nextUint8()+1,w:u._nextUint8()+1},bytesPlane:[u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8()],samples:[]},D=(y.descriptorBlockSize/4-6)/4;for(let t=0;t<D;t++)y.samples[t]={bitOffset:u._nextUint16(),bitLength:u._nextUint8(),channelID:u._nextUint8(),samplePosition:[u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8()],sampleLower:u._nextUint32(),sampleUpper:u._nextUint32()};i.dataFormatDescriptor.length=0,i.dataFormatDescriptor.push(y);const b=new c(t,f,h,!0);for(;b._offset<h;){const t=b._nextUint32(),e=b._scan(t),n=_(e),s=b._scan(t-e.byteLength);i.keyValue[n]=n.match(/^ktx/i)?_(s):s,t%4&&b._skip(4-t%4)}if(p<=0)return i;const d=new c(t,g,p,!0),B=d._nextUint16(),w=d._nextUint16(),A=d._nextUint32(),S=d._nextUint32(),m=d._nextUint32(),L=d._nextUint32(),I=[];for(let t=0;t<r;t++)I.push({imageFlags:d._nextUint32(),rgbSliceByteOffset:d._nextUint32(),rgbSliceByteLength:d._nextUint32(),alphaSliceByteOffset:d._nextUint32(),alphaSliceByteLength:d._nextUint32()});const R=g+d._offset,E=R+A,T=E+S,O=T+m,P=new Uint8Array(t.buffer,t.byteOffset+R,A),C=new Uint8Array(t.buffer,t.byteOffset+E,S),F=new Uint8Array(t.buffer,t.byteOffset+T,m),G=new Uint8Array(t.buffer,t.byteOffset+O,L);return i.globalData={endpointCount:B,selectorCount:w,imageDescs:I,endpointsData:P,selectorsData:C,tablesData:F,extendedData:G},i}function x(){return(x=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}const u={keepWriter:!1};function y(n,s={}){s=x({},u,s);let a=new ArrayBuffer(0);if(n.globalData){const t=new ArrayBuffer(20+5*n.globalData.imageDescs.length*4),e=new DataView(t);e.setUint16(0,n.globalData.endpointCount,!0),e.setUint16(2,n.globalData.selectorCount,!0),e.setUint32(4,n.globalData.endpointsData.byteLength,!0),e.setUint32(8,n.globalData.selectorsData.byteLength,!0),e.setUint32(12,n.globalData.tablesData.byteLength,!0),e.setUint32(16,n.globalData.extendedData.byteLength,!0);for(let t=0;t<n.globalData.imageDescs.length;t++){const i=n.globalData.imageDescs[t];e.setUint32(20+5*t*4+0,i.imageFlags,!0),e.setUint32(20+5*t*4+4,i.rgbSliceByteOffset,!0),e.setUint32(20+5*t*4+8,i.rgbSliceByteLength,!0),e.setUint32(20+5*t*4+12,i.alphaSliceByteOffset,!0),e.setUint32(20+5*t*4+16,i.alphaSliceByteLength,!0)}a=g([t,n.globalData.endpointsData,n.globalData.selectorsData,n.globalData.tablesData,n.globalData.extendedData])}const r=[];let o=n.keyValue;s.keepWriter||(o=x({},n.keyValue,{KTXwriter:\"KTX-Parse v0.0.4\"}));for(const e in o){const n=o[e],i=h(e),s=\"string\"==typeof n?h(n):n,a=i.byteLength+1+s.byteLength+1,l=a%4?4-a%4:0;r.push(g([new Uint32Array([a]),i,t,s,t,new Uint8Array(l).fill(0)]))}const l=g(r),f=new ArrayBuffer(44),U=new DataView(f);if(1!==n.dataFormatDescriptor.length||n.dataFormatDescriptor[0].descriptorType!==i.BASICFORMAT)throw new Error(\"Only BASICFORMAT Data Format Descriptor output supported.\");const c=n.dataFormatDescriptor[0];U.setUint32(0,44,!0),U.setUint16(4,c.vendorId,!0),U.setUint16(6,c.descriptorType,!0),U.setUint16(8,c.versionNumber,!0),U.setUint16(10,c.descriptorBlockSize,!0),U.setUint8(12,c.colorModel),U.setUint8(13,c.colorPrimaries),U.setUint8(14,c.transferFunction),U.setUint8(15,c.flags),U.setUint8(16,c.texelBlockDimension.x-1),U.setUint8(17,c.texelBlockDimension.y-1),U.setUint8(18,c.texelBlockDimension.z-1),U.setUint8(19,c.texelBlockDimension.w-1);for(let t=0;t<8;t++)U.setUint8(20+t,c.bytesPlane[t]);for(let t=0;t<c.samples.length;t++){const e=c.samples[t],n=28+16*t;U.setUint16(n+0,e.bitOffset,!0),U.setUint8(n+2,e.bitLength),U.setUint8(n+3,e.channelID),U.setUint8(n+4,e.samplePosition[0]),U.setUint8(n+5,e.samplePosition[1]),U.setUint8(n+6,e.samplePosition[2]),U.setUint8(n+7,e.samplePosition[3]),U.setUint32(n+8,e.sampleLower,!0),U.setUint32(n+12,e.sampleUpper,!0)}const _=e.length+68+3*n.levels.length*8,p=_+f.byteLength;let y=p+l.byteLength;y%8&&(y+=8-y%8);const D=[],b=new DataView(new ArrayBuffer(3*n.levels.length*8));let d=y+a.byteLength;for(let t=0;t<n.levels.length;t++){const e=n.levels[t];D.push(e.levelData),b.setBigUint64(24*t+0,BigInt(d),!0),b.setBigUint64(24*t+8,BigInt(e.levelData.byteLength),!0),b.setBigUint64(24*t+16,BigInt(e.uncompressedByteLength),!0),d+=e.levelData.byteLength}const B=new ArrayBuffer(68),w=new DataView(B);return w.setUint32(0,n.vkFormat,!0),w.setUint32(4,n.typeSize,!0),w.setUint32(8,n.pixelWidth,!0),w.setUint32(12,n.pixelHeight,!0),w.setUint32(16,n.pixelDepth,!0),w.setUint32(20,n.layerCount,!0),w.setUint32(24,n.faceCount,!0),w.setUint32(28,n.levels.length,!0),w.setUint32(32,n.supercompressionScheme,!0),w.setUint32(36,_,!0),w.setUint32(40,f.byteLength,!0),w.setUint32(44,p,!0),w.setUint32(48,l.byteLength,!0),w.setBigUint64(52,BigInt(y),!0),w.setBigUint64(60,BigInt(a.byteLength),!0),new Uint8Array(g([new Uint8Array(e).buffer,B,b.buffer,f,l,new ArrayBuffer(y-(p+l.byteLength)),a,...D]))}export{U as KTX2Container,p as read,y as write};\n//# sourceMappingURL=ktx-parse.modern.js.map\n","import {CompressedTextureExtractOptions, TextureLevel} from '../../types';\n\n/**\n * Extract mipmap images from compressed texture buffer\n * @param data - binary data of compressed texture or Array of level objects\n * @param options.mipMapLevels - number of mipmap level inside image\n * @param options.width - width of 0 - level\n * @param options.height - height of 0 - level\n * @param options.sizeFunction - format-related function to calculate level size in bytes\n * @param options.internalFormat - WebGL compatible format code\n * @returns Array of the texture levels\n */\nexport function extractMipmapImages(\n  data: Uint8Array | Array<Object>,\n  options: CompressedTextureExtractOptions\n): TextureLevel[] {\n  const images = new Array(options.mipMapLevels);\n\n  let levelWidth = options.width;\n  let levelHeight = options.height;\n  let offset = 0;\n\n  for (let i = 0; i < options.mipMapLevels; ++i) {\n    const levelSize = getLevelSize(options, levelWidth, levelHeight, data, i);\n    const levelData = getLevelData(data, i, offset, levelSize);\n\n    images[i] = {\n      compressed: true,\n      format: options.internalFormat,\n      data: levelData,\n      width: levelWidth,\n      height: levelHeight,\n      levelSize\n    };\n\n    levelWidth = Math.max(1, levelWidth >> 1);\n    levelHeight = Math.max(1, levelHeight >> 1);\n\n    offset += levelSize;\n  }\n  return images;\n}\n\nfunction getLevelData(data, index, offset, levelSize) {\n  if (!Array.isArray(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset + offset, levelSize);\n  }\n\n  return data[index].levelData;\n}\n\nfunction getLevelSize(options, levelWidth, levelHeight, data, index) {\n  if (!Array.isArray(data)) {\n    return options.sizeFunction(levelWidth, levelHeight);\n  }\n  return options.sizeFunction(data[index]);\n}\n","import {GL} from '../gl-constants';\n\nconst VULKAN_TO_WEBGL_FORMAT_MAP = {\n  131: GL.COMPRESSED_RGB_S3TC_DXT1_EXT,\n  132: GL.COMPRESSED_SRGB_S3TC_DXT1_EXT,\n  133: GL.COMPRESSED_RGBA_S3TC_DXT1_EXT,\n  134: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,\n  135: GL.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n  136: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,\n  137: GL.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n  138: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,\n  139: GL.COMPRESSED_RED_RGTC1_EXT,\n  140: GL.COMPRESSED_SIGNED_RED_RGTC1_EXT,\n  141: GL.COMPRESSED_RED_GREEN_RGTC2_EXT,\n  142: GL.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT,\n  147: GL.COMPRESSED_RGB8_ETC2,\n  148: GL.COMPRESSED_SRGB8_ETC2,\n  149: GL.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n  150: GL.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n  151: GL.COMPRESSED_RGBA8_ETC2_EAC,\n  152: GL.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,\n  153: GL.COMPRESSED_R11_EAC,\n  154: GL.COMPRESSED_SIGNED_R11_EAC,\n  155: GL.COMPRESSED_RG11_EAC,\n  156: GL.COMPRESSED_SIGNED_RG11_EAC,\n  // @ts-ignore\n  157: GL.COMPRESSED_RGBA_ASTC_4x4_KHR,\n  // @ts-ignore\n  158: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR,\n  // @ts-ignore\n  159: GL.COMPRESSED_RGBA_ASTC_5x4_KHR,\n  // @ts-ignore\n  160: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR,\n  // @ts-ignore\n  161: GL.COMPRESSED_RGBA_ASTC_5x5_KHR,\n  // @ts-ignore\n  162: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR,\n  // @ts-ignore\n  163: GL.COMPRESSED_RGBA_ASTC_6x5_KHR,\n  // @ts-ignore\n  164: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR,\n  // @ts-ignore\n  165: GL.COMPRESSED_RGBA_ASTC_6x6_KHR,\n  // @ts-ignore\n  166: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR,\n  // @ts-ignore\n  167: GL.COMPRESSED_RGBA_ASTC_8x5_KHR,\n  // @ts-ignore\n  168: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR,\n  // @ts-ignore\n  169: GL.COMPRESSED_RGBA_ASTC_8x6_KHR,\n  // @ts-ignore\n  170: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR,\n  // @ts-ignore\n  171: GL.COMPRESSED_RGBA_ASTC_8x8_KHR,\n  // @ts-ignore\n  172: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR,\n  // @ts-ignore\n  173: GL.COMPRESSED_RGBA_ASTC_10x5_KHR,\n  // @ts-ignore\n  174: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR,\n  // @ts-ignore\n  175: GL.COMPRESSED_RGBA_ASTC_10x6_KHR,\n  // @ts-ignore\n  176: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR,\n  // @ts-ignore\n  177: GL.COMPRESSED_RGBA_ASTC_10x8_KHR,\n  // @ts-ignore\n  178: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR,\n  // @ts-ignore\n  179: GL.COMPRESSED_RGBA_ASTC_10x10_KHR,\n  // @ts-ignore\n  180: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,\n  // @ts-ignore\n  181: GL.COMPRESSED_RGBA_ASTC_12x10_KHR,\n  // @ts-ignore\n  182: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR,\n  // @ts-ignore\n  183: GL.COMPRESSED_RGBA_ASTC_12x12_KHR,\n  // @ts-ignore\n  184: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR,\n  1000054000: GL.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG,\n  1000054001: GL.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n  // @ts-ignore\n  1000066000: GL.COMPRESSED_RGBA_ASTC_4x4_KHR,\n  // @ts-ignore\n  1000066001: GL.COMPRESSED_RGBA_ASTC_5x4_KHR,\n  // @ts-ignore\n  1000066002: GL.COMPRESSED_RGBA_ASTC_5x5_KHR,\n  // @ts-ignore\n  1000066003: GL.COMPRESSED_RGBA_ASTC_6x5_KHR,\n  // @ts-ignore\n  1000066004: GL.COMPRESSED_RGBA_ASTC_6x6_KHR,\n  // @ts-ignore\n  1000066005: GL.COMPRESSED_RGBA_ASTC_8x5_KHR,\n  // @ts-ignore\n  1000066006: GL.COMPRESSED_RGBA_ASTC_8x6_KHR,\n  // @ts-ignore\n  1000066007: GL.COMPRESSED_RGBA_ASTC_8x8_KHR,\n  // @ts-ignore\n  1000066008: GL.COMPRESSED_RGBA_ASTC_10x5_KHR,\n  // @ts-ignore\n  1000066009: GL.COMPRESSED_RGBA_ASTC_10x6_KHR,\n  // @ts-ignore\n  1000066010: GL.COMPRESSED_RGBA_ASTC_10x8_KHR,\n  // @ts-ignore\n  1000066011: GL.COMPRESSED_RGBA_ASTC_10x10_KHR,\n  // @ts-ignore\n  1000066012: GL.COMPRESSED_RGBA_ASTC_12x10_KHR,\n  // @ts-ignore\n  1000066013: GL.COMPRESSED_RGBA_ASTC_12x12_KHR\n};\n\n/**\n * Returns WebGl format based on Vulkan format\n * Vulkan to WebGl format mapping provided here http://github.khronos.org/KTX-Specification/#formatMapping\n * Vulkan name to format number mapping provided here: https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkFormat.html\n * @param {Number} vkFormat\n * @returns {Number}\n */\nexport function mapVkFormatToWebGL(vkFormat) {\n  return VULKAN_TO_WEBGL_FORMAT_MAP[vkFormat];\n}\n","import {read} from 'ktx-parse';\nimport {extractMipmapImages} from '../utils/extract-mipmap-images';\nimport {mapVkFormatToWebGL} from '../utils/ktx-format-helper';\n\nconst KTX2_ID = [\n  // '´', 'K', 'T', 'X', '2', '0', 'ª', '\\r', '\\n', '\\x1A', '\\n'\n  0xab, 0x4b, 0x54, 0x58, 0x20, 0x32, 0x30, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a\n];\n\n// eslint-disable-next-line complexity\nexport function isKTX(data) {\n  const id = new Uint8Array(data.buffer || data, data.byteOffset || 0, KTX2_ID.length);\n  const notKTX =\n    id[0] !== KTX2_ID[0] || // '´'\n    id[1] !== KTX2_ID[1] || // 'K'\n    id[2] !== KTX2_ID[2] || // 'T'\n    id[3] !== KTX2_ID[3] || // 'X'\n    id[4] !== KTX2_ID[4] || // ' '\n    id[5] !== KTX2_ID[5] || // '2'\n    id[6] !== KTX2_ID[6] || // '0'\n    id[7] !== KTX2_ID[7] || // 'ª'\n    id[8] !== KTX2_ID[8] || // '\\r'\n    id[9] !== KTX2_ID[9] || // '\\n'\n    id[10] !== KTX2_ID[10] || // '\\x1A'\n    id[11] !== KTX2_ID[11]; // '\\n'\n\n  return !notKTX;\n}\n\nexport function parseKTX(arrayBuffer) {\n  const uint8Array = new Uint8Array(arrayBuffer);\n  const ktx = read(uint8Array);\n  const mipMapLevels = Math.max(1, ktx.levels.length);\n  const width = ktx.pixelWidth;\n  const height = ktx.pixelHeight;\n  const internalFormat = mapVkFormatToWebGL(ktx.vkFormat);\n\n  return extractMipmapImages(ktx.levels, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction: (level) => level.uncompressedByteLength,\n    internalFormat\n  });\n}\n","/**\n * Throws an `Error` with the optional `message` if `condition` is falsy\n * @note Replacement for the external assert method to reduce bundle size\n */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n","import type {TextureLevel} from '../../types';\nimport {assert} from '@loaders.gl/loader-utils';\nimport {GL} from '../gl-constants';\nimport {extractMipmapImages} from '../utils/extract-mipmap-images';\n\nconst getATCLevelSize = getDxt1LevelSize;\nconst getATCALevelSize = getDxtXLevelSize;\nconst getATCILevelSize = getDxtXLevelSize;\nconst DDS_CONSTANTS = {\n  MAGIC_NUMBER: 0x20534444,\n  HEADER_LENGTH: 31,\n  MAGIC_NUMBER_INDEX: 0,\n  HEADER_SIZE_INDEX: 1,\n  HEADER_FLAGS_INDEX: 2,\n  HEADER_HEIGHT_INDEX: 3,\n  HEADER_WIDTH_INDEX: 4,\n  MIPMAPCOUNT_INDEX: 7,\n  HEADER_PF_FLAGS_INDEX: 20,\n  HEADER_PF_FOURCC_INDEX: 21,\n  DDSD_MIPMAPCOUNT: 0x20000,\n  DDPF_FOURCC: 0x4,\n  PIXEL_FORMATS: {\n    DXT1: GL.COMPRESSED_RGB_S3TC_DXT1_EXT,\n    DXT3: GL.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n    DXT5: GL.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n    'ATC ': GL.COMPRESSED_RGB_ATC_WEBGL,\n    ATCA: GL.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,\n    ATCI: GL.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\n  },\n  SIZE_FUNCTIONS: {\n    DXT1: getDxt1LevelSize,\n    DXT3: getDxtXLevelSize,\n    DXT5: getDxtXLevelSize,\n    'ATC ': getATCLevelSize,\n    ATCA: getATCALevelSize,\n    ATCI: getATCILevelSize\n  }\n};\n\n/**\n * Check if data is in \"DDS\" format by its magic number\n * @param data - binary data of compressed texture\n * @returns true - data in \"DDS\" format, else - false\n */\nexport function isDDS(data: ArrayBuffer): boolean {\n  const header = new Uint32Array(data, 0, DDS_CONSTANTS.HEADER_LENGTH);\n  const magic = header[DDS_CONSTANTS.MAGIC_NUMBER_INDEX];\n  return magic === DDS_CONSTANTS.MAGIC_NUMBER;\n}\n\n/**\n * Parse texture data as \"DDS\" format\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n */\nexport function parseDDS(data: ArrayBuffer): TextureLevel[] {\n  const header = new Int32Array(data, 0, DDS_CONSTANTS.HEADER_LENGTH);\n  const pixelFormatNumber = header[DDS_CONSTANTS.HEADER_PF_FOURCC_INDEX];\n  assert(\n    Boolean(header[DDS_CONSTANTS.HEADER_PF_FLAGS_INDEX] & DDS_CONSTANTS.DDPF_FOURCC),\n    'DDS: Unsupported format, must contain a FourCC code'\n  );\n  const fourCC = int32ToFourCC(pixelFormatNumber);\n  const internalFormat = DDS_CONSTANTS.PIXEL_FORMATS[fourCC];\n  const sizeFunction = DDS_CONSTANTS.SIZE_FUNCTIONS[fourCC];\n  assert(internalFormat && sizeFunction, `DDS: Unknown pixel format ${pixelFormatNumber}`);\n\n  let mipMapLevels = 1;\n  if (header[DDS_CONSTANTS.HEADER_FLAGS_INDEX] & DDS_CONSTANTS.DDSD_MIPMAPCOUNT) {\n    mipMapLevels = Math.max(1, header[DDS_CONSTANTS.MIPMAPCOUNT_INDEX]);\n  }\n  const width = header[DDS_CONSTANTS.HEADER_WIDTH_INDEX];\n  const height = header[DDS_CONSTANTS.HEADER_HEIGHT_INDEX];\n  const dataOffset = header[DDS_CONSTANTS.HEADER_SIZE_INDEX] + 4;\n  const image = new Uint8Array(data, dataOffset);\n\n  return extractMipmapImages(image, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction,\n    internalFormat\n  });\n}\n\n/**\n * DXT1 applicable function to calculate level size\n * @param width - level width\n * @param height - level height\n * @returns level size in bytes\n */\nexport function getDxt1LevelSize(width: number, height: number): number {\n  return ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n}\n\n/**\n * DXT3 & DXT5 applicable function to calculate level size\n * @param width - level width\n * @param height - level height\n * @returns level size in bytes\n */\nexport function getDxtXLevelSize(width: number, height: number): number {\n  return ((width + 3) >> 2) * ((height + 3) >> 2) * 16;\n}\n\n/**\n * Convert every byte of Int32 value to char\n * @param {number} value - Int32 number\n * @returns {string} string of 4 characters\n */\nfunction int32ToFourCC(value) {\n  return String.fromCharCode(\n    value & 0xff,\n    (value >> 8) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 24) & 0xff\n  );\n}\n","import {TextureLevel} from '../../types';\n/* eslint-disable camelcase */\n// Forked from PicoGL: https://github.com/tsherif/picogl.js/blob/master/examples/utils/utils.js\n// Copyright (c) 2017 Tarek Sherif, The MIT License (MIT)\nimport {GL} from '../gl-constants';\nimport {extractMipmapImages} from '../utils/extract-mipmap-images';\n\nconst PVR_CONSTANTS = {\n  MAGIC_NUMBER: 0x03525650,\n  MAGIC_NUMBER_EXTRA: 0x50565203,\n  HEADER_LENGTH: 13,\n  HEADER_SIZE: 52,\n  MAGIC_NUMBER_INDEX: 0,\n  PIXEL_FORMAT_INDEX: 2,\n  COLOUR_SPACE_INDEX: 4,\n  HEIGHT_INDEX: 6,\n  WIDTH_INDEX: 7,\n  MIPMAPCOUNT_INDEX: 11,\n  METADATA_SIZE_INDEX: 12\n};\n\nconst PVR_PIXEL_FORMATS = {\n  0: [GL.COMPRESSED_RGB_PVRTC_2BPPV1_IMG],\n  1: [GL.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG],\n  2: [GL.COMPRESSED_RGB_PVRTC_4BPPV1_IMG],\n  3: [GL.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG],\n  6: [GL.COMPRESSED_RGB_ETC1_WEBGL],\n  7: [GL.COMPRESSED_RGB_S3TC_DXT1_EXT],\n  9: [GL.COMPRESSED_RGBA_S3TC_DXT3_EXT],\n  11: [GL.COMPRESSED_RGBA_S3TC_DXT5_EXT],\n  22: [GL.COMPRESSED_RGB8_ETC2],\n  23: [GL.COMPRESSED_RGBA8_ETC2_EAC],\n  24: [GL.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2],\n  25: [GL.COMPRESSED_R11_EAC],\n  26: [GL.COMPRESSED_RG11_EAC],\n  27: [GL.COMPRESSED_RGBA_ASTC_4X4_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR],\n  28: [GL.COMPRESSED_RGBA_ASTC_5X4_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR],\n  29: [GL.COMPRESSED_RGBA_ASTC_5X5_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR],\n  30: [GL.COMPRESSED_RGBA_ASTC_6X5_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR],\n  31: [GL.COMPRESSED_RGBA_ASTC_6X6_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR],\n  32: [GL.COMPRESSED_RGBA_ASTC_8X5_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR],\n  33: [GL.COMPRESSED_RGBA_ASTC_8X6_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR],\n  34: [GL.COMPRESSED_RGBA_ASTC_8X8_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR],\n  35: [GL.COMPRESSED_RGBA_ASTC_10X5_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR],\n  36: [GL.COMPRESSED_RGBA_ASTC_10X6_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR],\n  37: [GL.COMPRESSED_RGBA_ASTC_10X8_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR],\n  38: [GL.COMPRESSED_RGBA_ASTC_10X10_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR],\n  39: [GL.COMPRESSED_RGBA_ASTC_12X10_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR],\n  40: [GL.COMPRESSED_RGBA_ASTC_12X12_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR]\n};\n\nconst PVR_SIZE_FUNCTIONS = {\n  0: pvrtc2bppSize,\n  1: pvrtc2bppSize,\n  2: pvrtc4bppSize,\n  3: pvrtc4bppSize,\n  6: dxtEtcSmallSize,\n  7: dxtEtcSmallSize,\n  9: dxtEtcAstcBigSize,\n  11: dxtEtcAstcBigSize,\n  22: dxtEtcSmallSize,\n  23: dxtEtcAstcBigSize,\n  24: dxtEtcSmallSize,\n  25: dxtEtcSmallSize,\n  26: dxtEtcAstcBigSize,\n  27: dxtEtcAstcBigSize,\n  28: atc5x4Size,\n  29: atc5x5Size,\n  30: atc6x5Size,\n  31: atc6x6Size,\n  32: atc8x5Size,\n  33: atc8x6Size,\n  34: atc8x8Size,\n  35: atc10x5Size,\n  36: atc10x6Size,\n  37: atc10x8Size,\n  38: atc10x10Size,\n  39: atc12x10Size,\n  40: atc12x12Size\n};\n\n/**\n * Check if data is in \"PVR\" format by its magic number\n * @param data - binary data of compressed texture\n * @returns true - data in \"PVR\" format, else - false\n */\nexport function isPVR(data: ArrayBuffer): boolean {\n  const header = new Uint32Array(data, 0, PVR_CONSTANTS.HEADER_LENGTH);\n  const version = header[PVR_CONSTANTS.MAGIC_NUMBER_INDEX];\n\n  return version === PVR_CONSTANTS.MAGIC_NUMBER || version === PVR_CONSTANTS.MAGIC_NUMBER_EXTRA;\n}\n\n/**\n * Parse texture data as \"PVR\" format\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n * @see http://cdn.imgtec.com/sdk-documentation/PVR+File+Format.Specification.pdf\n */\nexport function parsePVR(data: ArrayBuffer): TextureLevel[] {\n  const header = new Uint32Array(data, 0, PVR_CONSTANTS.HEADER_LENGTH);\n\n  const pvrFormat = header[PVR_CONSTANTS.PIXEL_FORMAT_INDEX];\n  const colourSpace = header[PVR_CONSTANTS.COLOUR_SPACE_INDEX];\n  const pixelFormats = PVR_PIXEL_FORMATS[pvrFormat] || [];\n  const internalFormat = pixelFormats.length > 1 && colourSpace ? pixelFormats[1] : pixelFormats[0];\n\n  const sizeFunction = PVR_SIZE_FUNCTIONS[pvrFormat];\n\n  const mipMapLevels = header[PVR_CONSTANTS.MIPMAPCOUNT_INDEX];\n\n  const width = header[PVR_CONSTANTS.WIDTH_INDEX];\n  const height = header[PVR_CONSTANTS.HEIGHT_INDEX];\n\n  const dataOffset = PVR_CONSTANTS.HEADER_SIZE + header[PVR_CONSTANTS.METADATA_SIZE_INDEX];\n\n  const image = new Uint8Array(data, dataOffset);\n\n  return extractMipmapImages(image, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction,\n    internalFormat\n  });\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\nfunction pvrtc2bppSize(width, height) {\n  width = Math.max(width, 16);\n  height = Math.max(height, 8);\n\n  return (width * height) / 4;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\nfunction pvrtc4bppSize(width, height) {\n  width = Math.max(width, 8);\n  height = Math.max(height, 8);\n\n  return (width * height) / 2;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/\n// Size for:\n// COMPRESSED_RGB_S3TC_DXT1_EXT\n// COMPRESSED_R11_EAC\n// COMPRESSED_SIGNED_R11_EAC\n// COMPRESSED_RGB8_ETC2\n// COMPRESSED_SRGB8_ETC2\n// COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\n// COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\nfunction dxtEtcSmallSize(width, height) {\n  return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 8;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\n// Size for:\n// COMPRESSED_RGBA_S3TC_DXT3_EXT\n// COMPRESSED_RGBA_S3TC_DXT5_EXT\n// COMPRESSED_RG11_EAC\n// COMPRESSED_SIGNED_RG11_EAC\n// COMPRESSED_RGBA8_ETC2_EAC\n// COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\n// COMPRESSED_RGBA_ASTC_4x4_KHR\nfunction dxtEtcAstcBigSize(width, height) {\n  return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc5x4Size(width, height) {\n  return Math.floor((width + 4) / 5) * Math.floor((height + 3) / 4) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc5x5Size(width, height) {\n  return Math.floor((width + 4) / 5) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc6x5Size(width, height) {\n  return Math.floor((width + 5) / 6) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc6x6Size(width, height) {\n  return Math.floor((width + 5) / 6) * Math.floor((height + 5) / 6) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x5Size(width, height) {\n  return Math.floor((width + 7) / 8) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x6Size(width, height) {\n  return Math.floor((width + 7) / 8) * Math.floor((height + 5) / 6) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x8Size(width, height) {\n  return Math.floor((width + 7) / 8) * Math.floor((height + 7) / 8) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x5Size(width, height) {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x6Size(width, height) {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 5) / 6) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x8Size(width, height) {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 7) / 8) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x10Size(width, height) {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 9) / 10) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc12x10Size(width, height) {\n  return Math.floor((width + 11) / 12) * Math.floor((height + 9) / 10) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc12x12Size(width, height) {\n  return Math.floor((width + 11) / 12) * Math.floor((height + 11) / 12) * 16;\n}\n","import type {TextureLevel} from '../../types';\nimport {isKTX, parseKTX} from './parse-ktx';\nimport {isDDS, parseDDS} from './parse-dds';\nimport {isPVR, parsePVR} from './parse-pvr';\n\n/**\n * Deduces format and parses compressed texture loaded in ArrayBuffer\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n */\nexport function parseCompressedTexture(data: ArrayBuffer): TextureLevel[] {\n  if (isKTX(data)) {\n    // TODO: remove @ts-ignore when `parseKTX` output is normalized to loaders.gl texture format\n    // @ts-ignore\n    return parseKTX(data);\n  }\n  if (isDDS(data)) {\n    return parseDDS(data);\n  }\n  if (isPVR(data)) {\n    return parsePVR(data);\n  }\n  throw new Error('Texture container format not recognized');\n}\n","import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {parseCompressedTexture} from './lib/parsers/parse-compressed-texture';\n\n/**\n * Worker Loader for KTX, DDS, and PVR texture container formats\n */\nexport const CompressedTextureWorkerLoader = {\n  name: 'Texture Containers',\n  id: 'compressed-texture',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: [\n    'ktx',\n    'ktx2',\n    'dds', // WEBGL_compressed_texture_s3tc, WEBGL_compressed_texture_atc\n    'pvr' // WEBGL_compressed_texture_pvrtc\n  ],\n  mimeTypes: [\n    'image/ktx2',\n    'image/ktx',\n    'image/vnd-ms.dds',\n    'image/x-dds',\n    'application/octet-stream'\n  ],\n  binary: true,\n  options: {\n    'compressed-texture': {\n      libraryPath: 'libs/'\n    }\n  }\n};\n\n/**\n * Loader for KTX, DDS, and PVR texture container formats\n */\nexport const CompressedTextureLoader = {\n  ...CompressedTextureWorkerLoader,\n  parse: async (arrayBuffer) => parseCompressedTexture(arrayBuffer)\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckCompressedTextureWorkerLoader: Loader = CompressedTextureWorkerLoader;\nexport const _TypecheckCompressedTextureLoader: LoaderWithParser = CompressedTextureLoader;\n","import type {Loader} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\n\n/**\n * Worker loader for the Crunch compressed texture container format\n */\nexport const CrunchLoader = {\n  id: 'crunch',\n  name: 'Crunch',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['crn'],\n  mimeTypes: ['image/crn', 'image/x-crn', 'application/octet-stream'],\n  binary: true,\n  options: {\n    crunch: {\n      libraryPath: 'libs/'\n    }\n  }\n};\n\n// We avoid bundling crunch - rare format, only offer worker loader\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckCrunchLoader: Loader = CrunchLoader;\n","function systemIsLittleEndian() {\n  const a = new Uint32Array([0x12345678]);\n  const b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n  return !(b[0] === 0x12);\n}\n\nconst LITTLE_ENDIAN_OS = systemIsLittleEndian();\n\n// The basic string format consists of 3 characters:\n// 1. a character describing the byteorder of the data (<: little-endian, >: big-endian, |: not-relevant)\n// 2. a character code giving the basic type of the array\n// 3. an integer providing the number of bytes the type uses.\n// https://numpy.org/doc/stable/reference/arrays.interface.html\n//\n// Here I only include the second and third characters, and check endianness\n// separately\nconst DTYPES = {\n  u1: Uint8Array,\n  i1: Int8Array,\n  u2: Uint16Array,\n  i2: Int16Array,\n  u4: Uint32Array,\n  i4: Int32Array,\n  f4: Float32Array,\n  f8: Float64Array\n};\n\nexport function parseNPY(arrayBuffer, options) {\n  if (!arrayBuffer) {\n    return null;\n  }\n\n  const view = new DataView(arrayBuffer);\n  const {header, headerEndOffset} = parseHeader(view);\n\n  const numpyType = header.descr;\n  const ArrayType = DTYPES[numpyType.slice(1, 3)];\n  if (!ArrayType) {\n    // eslint-disable-next-line no-console, no-undef\n    console.warn(`Decoding of npy dtype not implemented: ${numpyType}`);\n    return null;\n  }\n\n  const nArrayElements = header.shape.reduce((a, b) => a * b);\n  const arrayByteLength = nArrayElements * ArrayType.BYTES_PER_ELEMENT;\n\n  const data = new ArrayType(arrayBuffer.slice(headerEndOffset, headerEndOffset + arrayByteLength));\n\n  // Swap endianness if needed\n  if ((numpyType[0] === '>' && LITTLE_ENDIAN_OS) || (numpyType[0] === '<' && !LITTLE_ENDIAN_OS)) {\n    // eslint-disable-next-line no-console, no-undef\n    console.warn('Data is wrong endianness, byte swapping not yet implemented.');\n  }\n\n  return {\n    data,\n    header\n  };\n}\n\n/**\n * Parse NPY header\n *\n * @param  {DataView} view\n * @return {Object}\n */\nfunction parseHeader(view) {\n  const majorVersion = view.getUint8(6);\n  // const minorVersion = view.getUint8(7);\n\n  let offset = 8;\n  let headerLength;\n  if (majorVersion >= 2) {\n    headerLength = view.getUint32(8, true);\n    offset += 4;\n  } else {\n    headerLength = view.getUint16(8, true);\n    offset += 2;\n  }\n\n  const encoding = majorVersion <= 2 ? 'latin1' : 'utf-8';\n  const decoder = new TextDecoder(encoding);\n  const headerArray = new Uint8Array(view.buffer, offset, headerLength);\n  const headerText = decoder.decode(headerArray);\n  offset += headerLength;\n\n  const header = JSON.parse(\n    headerText\n      .replace(/'/g, '\"')\n      .replace('False', 'false')\n      .replace('(', '[')\n      .replace(/,*\\),*/g, ']')\n  );\n\n  return {header, headerEndOffset: offset};\n}\n","import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {parseNPY} from './lib/parsers/parse-npy';\n\n// \\x93NUMPY\nconst NPY_MAGIC_NUMBER = new Uint8Array([147, 78, 85, 77, 80, 89]);\n\n/**\n * Worker loader for numpy \"tiles\"\n */\nexport const NPYWorkerLoader = {\n  name: 'NPY',\n  id: 'npy',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['npy'],\n  mimeTypes: [],\n  tests: [NPY_MAGIC_NUMBER.buffer],\n  options: {\n    npy: {}\n  }\n};\n\n/**\n * Loader for numpy \"tiles\"\n */\nexport const NPYLoader = {\n  ...NPYWorkerLoader,\n  parseSync: parseNPY,\n  parse: async (arrayBuffer, options) => parseNPY(arrayBuffer, options)\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckNPYWorkerLoader: Loader = NPYWorkerLoader;\nexport const _TypecheckNPYLoader: LoaderWithParser = NPYLoader;\n","import type {Writer} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {encodeImageURLToCompressedTextureURL} from './lib/encoders/encode-texture';\n\n/**\n * DDS Texture Container Exporter\n */\nexport const CompressedTextureWriter = {\n  name: 'DDS Texture Container',\n  id: 'dds',\n  module: 'textures',\n  version: VERSION,\n\n  extensions: ['dds'],\n\n  options: {\n    texture: {\n      format: 'auto',\n      compression: 'auto',\n      quality: 'auto',\n      mipmap: false,\n      flipY: false,\n      toolFlags: ''\n    }\n  },\n\n  encodeURLtoURL: encodeImageURLToCompressedTextureURL\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckCompressedTextureWriter: Writer = CompressedTextureWriter;\n","export function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n","import type {ImageTypeEnum} from '../../types';\nimport {global, isBrowser} from '../utils/globals';\n\n// @ts-ignore TS2339: Property does not exist on type\nconst {_parseImageNode} = global;\n\nconst IMAGE_SUPPORTED = typeof Image !== 'undefined'; // NOTE: \"false\" positives if jsdom is installed\nconst IMAGE_BITMAP_SUPPORTED = typeof ImageBitmap !== 'undefined';\nconst NODE_IMAGE_SUPPORTED = Boolean(_parseImageNode);\nconst DATA_SUPPORTED = isBrowser ? true : NODE_IMAGE_SUPPORTED;\n\n/**\n * Checks if a loaders.gl image type is supported\n * @param type image type string\n */\nexport function isImageTypeSupported(type: string): boolean {\n  switch (type) {\n    case 'auto':\n      // Should only ever be false in Node.js, if polyfills have not been installed...\n      return IMAGE_BITMAP_SUPPORTED || IMAGE_SUPPORTED || DATA_SUPPORTED;\n\n    case 'imagebitmap':\n      return IMAGE_BITMAP_SUPPORTED;\n    case 'image':\n      return IMAGE_SUPPORTED;\n    case 'data':\n      return DATA_SUPPORTED;\n\n    default:\n      throw new Error(`@loaders.gl/images: image ${type} not supported in this environment`);\n  }\n}\n\n/**\n * Returns the \"most performant\" supported image type on this platform\n * @returns image type string\n */\nexport function getDefaultImageType(): ImageTypeEnum {\n  if (IMAGE_BITMAP_SUPPORTED) {\n    return 'imagebitmap';\n  }\n  if (IMAGE_SUPPORTED) {\n    return 'image';\n  }\n  if (DATA_SUPPORTED) {\n    return 'data';\n  }\n\n  // This should only happen in Node.js\n  throw new Error('Install \\'@loaders.gl/polyfills\\' to parse images under Node.js');\n}\n","import type {ImageType, ImageTypeEnum, ImageDataType} from '../../types';\n\nexport function isImage(image: ImageType): boolean {\n  return Boolean(getImageTypeOrNull(image));\n}\n\nexport function deleteImage(image: ImageType): void {\n  switch (getImageType(image)) {\n    case 'imagebitmap':\n      (image as ImageBitmap).close();\n      break;\n    default:\n    // Nothing to do for images and image data objects\n  }\n}\n\nexport function getImageType(image: ImageType): ImageTypeEnum {\n  const format = getImageTypeOrNull(image);\n  if (!format) {\n    throw new Error('Not an image');\n  }\n  return format;\n}\n\nexport function getImageSize(image: ImageType): {width: number; height: number} {\n  return getImageData(image);\n}\n\nexport function getImageData(image: ImageType): ImageDataType | ImageData {\n  switch (getImageType(image)) {\n    case 'data':\n      return image as unknown as ImageData;\n\n    case 'image':\n    case 'imagebitmap':\n      // Extract the image data from the image via a canvas\n      const canvas = document.createElement('canvas');\n      // TODO - reuse the canvas?\n      const context = canvas.getContext('2d');\n      if (!context) {\n        throw new Error('getImageData');\n      }\n      // @ts-ignore\n      canvas.width = image.width;\n      // @ts-ignore\n      canvas.height = image.height;\n      // @ts-ignore\n      context.drawImage(image, 0, 0);\n      // @ts-ignore\n      return context.getImageData(0, 0, image.width, image.height);\n\n    default:\n      throw new Error('getImageData');\n  }\n}\n\n// PRIVATE\n\n// eslint-disable-next-line complexity\nfunction getImageTypeOrNull(image) {\n  if (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    return 'imagebitmap';\n  }\n  if (typeof Image !== 'undefined' && image instanceof Image) {\n    return 'image';\n  }\n  if (image && typeof image === 'object' && image.data && image.width && image.height) {\n    return 'data';\n  }\n  return null;\n}\n","// SVG parsing has limitations, e.g:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=606319\n\nconst SVG_DATA_URL_PATTERN = /^data:image\\/svg\\+xml/;\nconst SVG_URL_PATTERN = /\\.svg((\\?|#).*)?$/;\n\nexport function isSVG(url) {\n  return url && (SVG_DATA_URL_PATTERN.test(url) || SVG_URL_PATTERN.test(url));\n}\n\nexport function getBlobOrSVGDataUrl(arrayBuffer, url) {\n  if (isSVG(url)) {\n    // Prepare a properly tagged data URL, and load using normal mechanism\n    const textDecoder = new TextDecoder();\n    let xmlText = textDecoder.decode(arrayBuffer);\n    // TODO Escape in browser to support e.g. Chinese characters\n    try {\n      if (typeof unescape === 'function' && typeof encodeURIComponent === 'function') {\n        xmlText = unescape(encodeURIComponent(xmlText));\n      }\n    } catch (error) {\n      throw new Error((error as Error).message);\n    }\n    // base64 encoding is safer. utf-8 fails in some browsers\n    const src = `data:image/svg+xml;base64,${btoa(xmlText)}`;\n    return src;\n  }\n  return getBlob(arrayBuffer, url);\n}\n\nexport function getBlob(arrayBuffer, url) {\n  if (isSVG(url)) {\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=606319\n    // return new Blob([new Uint8Array(arrayBuffer)], {type: 'image/svg+xml'});\n    throw new Error('SVG cannot be parsed directly to imagebitmap');\n  }\n  // TODO - how to determine mime type? Param? Sniff here?\n  return new Blob([new Uint8Array(arrayBuffer)]); // MIME type not needed?\n}\n","import {getBlobOrSVGDataUrl} from './svg-utils';\n\n// Parses html image from array buffer\nexport default async function parseToImage(arrayBuffer, options, url) {\n  // Note: image parsing requires conversion to Blob (for createObjectURL).\n  // Potentially inefficient for not using `response.blob()` (and for File / Blob inputs)...\n  // But presumably not worth adding 'blob' flag to loader objects?\n\n  const blobOrDataUrl = getBlobOrSVGDataUrl(arrayBuffer, url);\n  const URL = self.URL || self.webkitURL;\n  const objectUrl = typeof blobOrDataUrl !== 'string' && URL.createObjectURL(blobOrDataUrl);\n  try {\n    return await loadToImage(objectUrl || blobOrDataUrl, options);\n  } finally {\n    if (objectUrl) {\n      URL.revokeObjectURL(objectUrl);\n    }\n  }\n}\n\nexport async function loadToImage(url, options) {\n  const image = new Image();\n  image.src = url;\n\n  // The `image.onload()` callback does not guarantee that the image has been decoded\n  // so a main thread \"freeze\" can be incurred when using the image for the first time.\n  // `Image.decode()` returns a promise that completes when image is decoded.\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decode\n  // Note: When calling `img.decode()`, we do not need to wait for `img.onload()`\n  // Note: `HTMLImageElement.decode()` is not available in Edge and IE11\n  if (options.image && options.image.decode && image.decode) {\n    await image.decode();\n    return image;\n  }\n\n  // Create a promise that tracks onload/onerror callbacks\n  return await new Promise((resolve, reject) => {\n    try {\n      image.onload = () => resolve(image);\n      image.onerror = (err) => reject(new Error(`Could not load image ${url}: ${err}`));\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n","import {isSVG, getBlob} from './svg-utils';\nimport parseToImage from './parse-to-image';\n\nconst EMPTY_OBJECT = {};\n\nlet imagebitmapOptionsSupported = true;\n\n/**\n * Asynchronously parses an array buffer into an ImageBitmap - this contains the decoded data\n * ImageBitmaps are supported on worker threads, but not supported on Edge, IE11 and Safari\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap#Browser_compatibility\n *\n * TODO - createImageBitmap supports source rect (5 param overload), pass through?\n */\nexport default async function parseToImageBitmap(arrayBuffer, options, url) {\n  let blob;\n\n  // Cannot parse SVG directly to ImageBitmap, parse to Image first\n  if (isSVG(url)) {\n    // Note: this only works on main thread\n    const image = await parseToImage(arrayBuffer, options, url);\n    blob = image;\n  } else {\n    // Create blob from the array buffer\n    blob = getBlob(arrayBuffer, url);\n  }\n\n  const imagebitmapOptions = options && options.imagebitmap;\n\n  return await safeCreateImageBitmap(blob, imagebitmapOptions);\n}\n\n/**\n * Safely creates an imageBitmap with options\n * *\n * Firefox crashes if imagebitmapOptions is supplied\n * Avoid supplying if not provided or supported, remember if not supported\n */\nasync function safeCreateImageBitmap(blob, imagebitmapOptions = null) {\n  if (isEmptyObject(imagebitmapOptions) || !imagebitmapOptionsSupported) {\n    imagebitmapOptions = null;\n  }\n\n  if (imagebitmapOptions) {\n    try {\n      // @ts-ignore Options\n      return await createImageBitmap(blob, imagebitmapOptions);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n      imagebitmapOptionsSupported = false;\n    }\n  }\n\n  return await createImageBitmap(blob);\n}\n\nfunction isEmptyObject(object) {\n  // @ts-ignore\n  for (const key in object || EMPTY_OBJECT) {\n    return false;\n  }\n  return true;\n}\n","// Attributions\n// * Based on binary-gltf-utils under MIT license: Copyright (c) 2016-17 Karl Cheng\n\n// TODO: make these functions work for Node.js buffers?\n// Quarantine references to Buffer to prevent bundler from adding big polyfills\n// import {bufferToArrayBuffer} from '../node/buffer-to-array-buffer';\n// TODO - this should be handled in @loaders.gl/polyfills\n\n/** MIME type, width and height extracted from binary compressed image data */\nexport type BinaryImageMetadata = {\n  mimeType: string;\n  width: number;\n  height: number;\n};\n\nconst BIG_ENDIAN = false;\nconst LITTLE_ENDIAN = true;\n\n/**\n * Extracts `{mimeType, width and height}` from a memory buffer containing a known image format\n * Currently supports `image/png`, `image/jpeg`, `image/bmp` and `image/gif`.\n * @param binaryData image file memory to parse\n * @returns metadata or null if memory is not a valid image file format layout.\n */\nexport function getBinaryImageMetadata(\n  binaryData: DataView | ArrayBuffer\n): BinaryImageMetadata | null {\n  const dataView = toDataView(binaryData);\n  return (\n    getPngMetadata(dataView) ||\n    getJpegMetadata(dataView) ||\n    getGifMetadata(dataView) ||\n    getBmpMetadata(dataView)\n  );\n}\n\n// PNG\n\nfunction getPngMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check file contains the first 4 bytes of the PNG signature.\n  const isPng = dataView.byteLength >= 24 && dataView.getUint32(0, BIG_ENDIAN) === 0x89504e47;\n  if (!isPng) {\n    return null;\n  }\n\n  // Extract size from a binary PNG file\n  return {\n    mimeType: 'image/png',\n    width: dataView.getUint32(16, BIG_ENDIAN),\n    height: dataView.getUint32(20, BIG_ENDIAN)\n  };\n}\n\n// GIF\n\n// Extract size from a binary GIF file\n// TODO: GIF is not this simple\nfunction getGifMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check first 4 bytes of the GIF signature (\"GIF8\").\n  const isGif = dataView.byteLength >= 10 && dataView.getUint32(0, BIG_ENDIAN) === 0x47494638;\n  if (!isGif) {\n    return null;\n  }\n\n  // GIF is little endian.\n  return {\n    mimeType: 'image/gif',\n    width: dataView.getUint16(6, LITTLE_ENDIAN),\n    height: dataView.getUint16(8, LITTLE_ENDIAN)\n  };\n}\n\n// BMP\n\n// TODO: BMP is not this simple\nexport function getBmpMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check magic number is valid (first 2 characters should be \"BM\").\n  // The mandatory bitmap file header is 14 bytes long.\n  const isBmp =\n    dataView.byteLength >= 14 &&\n    dataView.getUint16(0, BIG_ENDIAN) === 0x424d &&\n    dataView.getUint32(2, LITTLE_ENDIAN) === dataView.byteLength;\n\n  if (!isBmp) {\n    return null;\n  }\n\n  // BMP is little endian.\n  return {\n    mimeType: 'image/bmp',\n    width: dataView.getUint32(18, LITTLE_ENDIAN),\n    height: dataView.getUint32(22, LITTLE_ENDIAN)\n  };\n}\n\n// JPEG\n\n// Extract width and height from a binary JPEG file\nfunction getJpegMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check file contains the JPEG \"start of image\" (SOI) marker\n  // followed by another marker.\n  const isJpeg =\n    dataView.byteLength >= 3 &&\n    dataView.getUint16(0, BIG_ENDIAN) === 0xffd8 &&\n    dataView.getUint8(2) === 0xff;\n\n  if (!isJpeg) {\n    return null;\n  }\n\n  const {tableMarkers, sofMarkers} = getJpegMarkers();\n\n  // Exclude the two byte SOI marker.\n  let i = 2;\n  while (i + 9 < dataView.byteLength) {\n    const marker = dataView.getUint16(i, BIG_ENDIAN);\n\n    // The frame that contains the width and height of the JPEG image.\n    if (sofMarkers.has(marker)) {\n      return {\n        mimeType: 'image/jpeg',\n        height: dataView.getUint16(i + 5, BIG_ENDIAN), // Number of lines\n        width: dataView.getUint16(i + 7, BIG_ENDIAN) // Number of pixels per line\n      };\n    }\n\n    // Miscellaneous tables/data preceding the frame header.\n    if (!tableMarkers.has(marker)) {\n      return null;\n    }\n\n    // Length includes size of length parameter but not the two byte header.\n    i += 2;\n    i += dataView.getUint16(i, BIG_ENDIAN);\n  }\n\n  return null;\n}\n\nfunction getJpegMarkers() {\n  // Tables/misc header markers.\n  // DQT, DHT, DAC, DRI, COM, APP_n\n  const tableMarkers = new Set([0xffdb, 0xffc4, 0xffcc, 0xffdd, 0xfffe]);\n  for (let i = 0xffe0; i < 0xfff0; ++i) {\n    tableMarkers.add(i);\n  }\n\n  // SOF markers and DHP marker.\n  // These markers are after tables/misc data.\n  const sofMarkers = new Set([\n    0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc9, 0xffca, 0xffcb, 0xffcd, 0xffce,\n    0xffcf, 0xffde\n  ]);\n\n  return {tableMarkers, sofMarkers};\n}\n\n// TODO - move into image module?\nfunction toDataView(data) {\n  if (data instanceof DataView) {\n    return data;\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new DataView(data.buffer);\n  }\n\n  // TODO: make these functions work for Node.js buffers?\n  // if (bufferToArrayBuffer) {\n  //   data = bufferToArrayBuffer(data);\n  // }\n\n  // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n  if (data instanceof ArrayBuffer) {\n    return new DataView(data);\n  }\n  throw new Error('toDataView');\n}\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport parseImage from './lib/parsers/parse-image';\nimport {getBinaryImageMetadata} from './lib/category-api/binary-image-api';\n\nconst EXTENSIONS = ['png', 'jpg', 'jpeg', 'gif', 'webp', 'bmp', 'ico', 'svg'];\nconst MIME_TYPES = [\n  'image/png',\n  'image/jpeg',\n  'image/gif',\n  'image/webp',\n  'image/bmp',\n  'image/vnd.microsoft.icon',\n  'image/svg+xml'\n];\n\n/**\n * Loads a platform-specific image type\n * Note: This type can be used as input data to WebGL texture creation\n */\nexport const ImageLoader = {\n  id: 'image',\n  module: 'images',\n  name: 'Images',\n  version: VERSION,\n  mimeTypes: MIME_TYPES,\n  extensions: EXTENSIONS,\n  parse: parseImage,\n  // TODO: byteOffset, byteLength;\n  tests: [(arrayBuffer) => Boolean(getBinaryImageMetadata(new DataView(arrayBuffer)))],\n  options: {\n    image: {\n      type: 'auto',\n      decode: true // if format is HTML\n    }\n    // imagebitmap: {} - passes (platform dependent) parameters to ImageBitmap constructor\n  }\n};\n\nexport const _typecheckImageLoader: LoaderWithParser = ImageLoader;\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n","import {assert} from '../utils/assert';\nimport {isImageTypeSupported, getDefaultImageType} from '../category-api/image-type';\nimport {getImageData} from '../category-api/parsed-image-api';\nimport parseToImage from './parse-to-image';\nimport parseToImageBitmap from './parse-to-image-bitmap';\nimport parseToNodeImage from './parse-to-node-image';\n\n// Parse to platform defined image type (data on node, ImageBitmap or HTMLImage on browser)\n// eslint-disable-next-line complexity\nexport default async function parseImage(arrayBuffer, options, context) {\n  options = options || {};\n  const imageOptions = options.image || {};\n\n  // The user can request a specific output format via `options.image.type`\n  const imageType = imageOptions.type || 'auto';\n\n  const {url} = context || {};\n\n  // Note: For options.image.type === `data`, we may still need to load as `image` or `imagebitmap`\n  const loadType = getLoadableImageType(imageType);\n\n  let image;\n  switch (loadType) {\n    case 'imagebitmap':\n      image = await parseToImageBitmap(arrayBuffer, options, url);\n      break;\n    case 'image':\n      image = await parseToImage(arrayBuffer, options, url);\n      break;\n    case 'data':\n      // Node.js loads imagedata directly\n      image = await parseToNodeImage(arrayBuffer, options);\n      break;\n    default:\n      assert(false);\n  }\n\n  // Browser: if options.image.type === 'data', we can now extract data from the loaded image\n  if (imageType === 'data') {\n    image = getImageData(image);\n  }\n\n  return image;\n}\n\n// Get a loadable image type from image type\nfunction getLoadableImageType(type) {\n  switch (type) {\n    case 'auto':\n    case 'data':\n      // Browser: For image data we need still need to load using an image format\n      // Node: the default image type is `data`.\n      return getDefaultImageType();\n    default:\n      // Throw an error if not supported\n      isImageTypeSupported(type);\n      return type;\n  }\n}\n","import {global} from '../utils/globals';\nimport {assert} from '../utils/assert';\nimport {getBinaryImageMetadata} from '../category-api/binary-image-api';\n\n// Use polyfills if installed to p[arsed image using get-pixels\nexport default function parseToNodeImage(arrayBuffer, options) {\n  const {mimeType} = getBinaryImageMetadata(arrayBuffer) || {};\n\n  // @ts-ignore\n  const {_parseImageNode} = global;\n  assert(_parseImageNode); // '@loaders.gl/polyfills not installed'\n\n  return _parseImageNode(arrayBuffer, mimeType, options);\n}\n","// Simple file alias mechanisms for tests.\n\nlet pathPrefix = '';\nconst fileAliases: {[aliasPath: string]: string} = {};\n\n/*\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix: string): void {\n  pathPrefix = prefix;\n}\n\n/*\n * Get the relative path prefix\n */\nexport function getPathPrefix(): string {\n  return pathPrefix;\n}\n\n/**\n *\n * @param aliases\n *\n * Note: addAliases are an experimental export, they are only for testing of loaders.gl loaders\n * not intended as a generic aliasing mechanism\n */\nexport function addAliases(aliases: {[aliasPath: string]: string}): void {\n  Object.assign(fileAliases, aliases);\n}\n\n/**\n * Resolves aliases and adds path-prefix to paths\n */\nexport function resolvePath(filename: string): string {\n  for (const alias in fileAliases) {\n    if (filename.startsWith(alias)) {\n      const replacement = fileAliases[alias];\n      filename = filename.replace(alias, replacement);\n    }\n  }\n  if (!filename.startsWith('http://') && !filename.startsWith('https://')) {\n    filename = `${pathPrefix}${filename}`;\n  }\n  return filename;\n}\n","import {resolvePath, assert} from '@loaders.gl/loader-utils';\n\n// Generate a url by calling getUrl with mix of options, applying options.baseUrl\nexport function generateUrl(getUrl, options, urlOptions) {\n  // Get url\n  let url = getUrl;\n  if (typeof getUrl === 'function') {\n    url = getUrl({...options, ...urlOptions});\n  }\n  assert(typeof url === 'string');\n\n  // Apply options.baseUrl\n  const {baseUrl} = options;\n  if (baseUrl) {\n    url = baseUrl[baseUrl.length - 1] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n  }\n\n  return resolvePath(url);\n}\n","/*\nAsynchronously maps a deep structure of values (e.g. objects and arrays of urls).\n\nE.g. a mipmapped cubemap\n{\n  [CUBE_FACE_FRONT]: [\n    \"image-front-0.jpg\",\n    \"image-front-1.jpg\",\n    \"image-front-2.jpg\",\n  ],\n  [CUBE_MAP_BACK]: [\n    ...\n  ]\n}\n*/\n\nconst isObject = (value) => value && typeof value === 'object';\n\n// Loads a deep structure of urls (objects and arrays of urls)\n// Returns an object with six key-value pairs containing the images (or image mip arrays)\n// for each cube face\nexport async function asyncDeepMap(tree, func, options = {}) {\n  return await mapSubtree(tree, func, options);\n}\n\nexport async function mapSubtree(object, func, options) {\n  if (Array.isArray(object)) {\n    return await mapArray(object, func, options);\n  }\n\n  if (isObject(object)) {\n    return await mapObject(object, func, options);\n  }\n\n  // TODO - ignore non-urls, non-arraybuffers?\n  const url = object;\n  return await func(url, options);\n}\n\n// HELPERS\n\nasync function mapObject(object, func, options) {\n  const promises: Promise<any>[] = [];\n  const values = {};\n\n  for (const key in object) {\n    const url = object[key];\n    const promise = mapSubtree(url, func, options).then((value) => {\n      values[key] = value;\n    });\n    promises.push(promise);\n  }\n\n  await Promise.all(promises);\n\n  return values;\n}\n\nasync function mapArray(urlArray, func, options = {}) {\n  const promises = urlArray.map((url) => mapSubtree(url, func, options));\n  return await Promise.all(promises);\n}\n","import {asyncDeepMap} from './async-deep-map';\n\nexport async function deepLoad(urlTree, load, options) {\n  return await asyncDeepMap(urlTree, (url) => shallowLoad(url, load, options));\n}\n\nexport async function shallowLoad(url, load, options) {\n  // console.error('loading', url);\n  const response = await fetch(url, options.fetch);\n  const arrayBuffer = await response.arrayBuffer();\n  return await load(arrayBuffer, options);\n}\n","import {assert} from '@loaders.gl/loader-utils';\nimport {ImageLoader, getImageSize} from '@loaders.gl/images';\nimport {generateUrl} from './generate-url';\nimport {deepLoad, shallowLoad} from './deep-load';\n\nexport async function loadImageTexture(getUrl, options = {}) {\n  const imageUrls = await getImageUrls(getUrl, options);\n  return await deepLoad(imageUrls, ImageLoader.parse, options);\n}\n\nexport async function getImageUrls(getUrl, options, urlOptions = {}) {\n  const mipLevels = (options && options.image && options.image.mipLevels) || 0;\n  return mipLevels !== 0\n    ? await getMipmappedImageUrls(getUrl, mipLevels, options, urlOptions)\n    : generateUrl(getUrl, options, urlOptions);\n}\n\nasync function getMipmappedImageUrls(getUrl, mipLevels, options, urlOptions): Promise<string[]> {\n  const urls: string[] = [];\n\n  // If no mip levels supplied, we need to load the level 0 image and calculate based on size\n  if (mipLevels === 'auto') {\n    const url = generateUrl(getUrl, options, {...urlOptions, lod: 0});\n    const image = await shallowLoad(url, ImageLoader.parse, options);\n\n    const {width, height} = getImageSize(image);\n    mipLevels = getMipLevels({width, height});\n\n    // TODO - push image and make `deepLoad` pass through non-url values, avoid loading twice?\n    urls.push(url);\n  }\n\n  // We now know how many mipLevels we need, remaining image urls can now be constructed\n  assert(mipLevels > 0);\n\n  for (let mipLevel = urls.length; mipLevel < mipLevels; ++mipLevel) {\n    const url = generateUrl(getUrl, options, {...urlOptions, lod: mipLevel});\n    urls.push(url);\n  }\n\n  return urls;\n}\n\n// Calculates number of mipmaps based on texture size (log2)\nexport function getMipLevels({width, height}) {\n  return 1 + Math.floor(Math.log2(Math.max(width, height)));\n}\n","import {ImageLoader} from '@loaders.gl/images';\nimport {getImageUrls} from './load-image';\nimport {deepLoad} from './deep-load';\n\nexport async function loadImageTextureArray(count, getUrl, options = {}) {\n  const imageUrls = await getImageArrayUrls(count, getUrl, options);\n  return await deepLoad(imageUrls, ImageLoader.parse, options);\n}\n\nexport async function getImageArrayUrls(count, getUrl, options = {}) {\n  const promises: Promise<any>[] = [];\n  for (let index = 0; index < count; index++) {\n    const promise = getImageUrls(getUrl, options, {index});\n    promises.push(promise);\n  }\n  return await Promise.all(promises);\n}\n","import {ImageLoader} from '@loaders.gl/images';\nimport {getImageUrls} from './load-image';\nimport {deepLoad} from './deep-load';\n\n// Returned map will be have keys corresponding to GL cubemap constants\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851a;\n\nconst CUBE_FACES = [\n  {face: GL_TEXTURE_CUBE_MAP_POSITIVE_X, direction: 'right', axis: 'x', sign: 'positive'},\n  {face: GL_TEXTURE_CUBE_MAP_NEGATIVE_X, direction: 'left', axis: 'x', sign: 'negative'},\n  {face: GL_TEXTURE_CUBE_MAP_POSITIVE_Y, direction: 'top', axis: 'y', sign: 'positive'},\n  {face: GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, direction: 'bottom', axis: 'y', sign: 'negative'},\n  {face: GL_TEXTURE_CUBE_MAP_POSITIVE_Z, direction: 'front', axis: 'z', sign: 'positive'},\n  {face: GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, direction: 'back', axis: 'z', sign: 'negative'}\n];\n\n// Returns an object with six key-value pairs containing the urls (or url mip arrays)\n// for each cube face\nexport async function getImageCubeUrls(getUrl, options) {\n  // Calculate URLs\n  const urls = {};\n  const promises: Promise<any>[] = [];\n\n  let index = 0;\n  for (let i = 0; i < CUBE_FACES.length; ++i) {\n    const face = CUBE_FACES[index];\n    const promise = getImageUrls(getUrl, options, {...face, index: index++}).then((url) => {\n      urls[face.face] = url;\n    });\n    promises.push(promise);\n  }\n\n  await Promise.all(promises);\n\n  return urls;\n}\n\n// Returns an object with six key-value pairs containing the images (or image mip arrays)\n// for each cube face\nexport async function loadImageTextureCube(getUrl, options = {}) {\n  const urls = await getImageCubeUrls(getUrl, options);\n  return await deepLoad(urls, ImageLoader.parse, options);\n}\n","import type {GPUTextureFormat} from '../../types';\n\nconst BROWSER_PREFIXES = ['', 'WEBKIT_', 'MOZ_'];\n\nconst WEBGL_EXTENSIONS: {[key: string]: GPUTextureFormat} = {\n  /* eslint-disable camelcase */\n  WEBGL_compressed_texture_s3tc: 'dxt',\n  WEBGL_compressed_texture_s3tc_srgb: 'dxt-srgb',\n  WEBGL_compressed_texture_etc1: 'etc1',\n  WEBGL_compressed_texture_etc: 'etc2',\n  WEBGL_compressed_texture_pvrtc: 'pvrtc',\n  WEBGL_compressed_texture_atc: 'atc',\n  WEBGL_compressed_texture_astc: 'astc',\n  EXT_texture_compression_rgtc: 'rgtc'\n  /* eslint-enable camelcase */\n};\n\nlet formats: Set<GPUTextureFormat> | null = null;\n\n/**\n * Returns a list of formats.\n * Creates a temporary WebGLRenderingContext if none is provided.\n *\n * @param gl - Optional context.\n */\nexport function getSupportedGPUTextureFormats(gl?: WebGLRenderingContext): Set<string> {\n  if (!formats) {\n    gl = gl || getWebGLContext() || undefined;\n\n    formats = new Set<GPUTextureFormat>();\n\n    for (const prefix of BROWSER_PREFIXES) {\n      for (const extension in WEBGL_EXTENSIONS) {\n        // eslint-disable-next-line max-depth\n        if (gl && gl.getExtension(`${prefix}${extension}`)) {\n          const gpuTextureFormat = WEBGL_EXTENSIONS[extension];\n          formats.add(gpuTextureFormat);\n        }\n      }\n    }\n  }\n\n  return formats;\n}\n\n/**\n * @returns {WebGLRenderingContext?}\n */\nfunction getWebGLContext() {\n  try {\n    const canvas = document.createElement('canvas');\n    return canvas.getContext('webgl');\n  } catch (error) {\n    return null;\n  }\n}\n"],"sourceRoot":""}
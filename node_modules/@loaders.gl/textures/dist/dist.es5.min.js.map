{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../worker-utils/src/lib/env-utils/assert.ts","webpack:///./src/lib/utils/version.ts","webpack:///./src/lib/gl-constants.ts","webpack:////home/user/apps/loaders.gl/node_modules/@probe.gl/stats/dist/esm/utils/hi-res-timestamp.js","webpack:///(webpack)/buildin/global.js","webpack:///../worker-utils/src/index.ts","webpack:///../worker-utils/src/lib/env-utils/version.ts","webpack:////home/user/apps/loaders.gl/node_modules/process/browser.js","webpack:///../loader-utils/src/index.ts","webpack:///../images/src/lib/utils/assert.js","webpack:///../images/src/lib/category-api/parsed-image-api.ts","webpack:///../worker-utils/src/lib/env-utils/globals.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-thread.ts","webpack:///../worker-utils/src/lib/worker-utils/get-transfer-list.ts","webpack:///./src/lib/utils/extract-mipmap-images.ts","webpack:///./src/lib/texture-api/load-image.ts","webpack:///../images/src/index.ts","webpack:///../images/src/lib/utils/globals.ts","webpack:///../images/src/lib/category-api/binary-image-api.ts","webpack:///./src/lib/texture-api/deep-load.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-job.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-farm.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-pool.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-body.ts","webpack:///../worker-utils/src/lib/worker-api/get-worker-url.ts","webpack:///../worker-utils/src/lib/async-queue/async-queue.ts","webpack:///../loader-utils/src/lib/env-utils/assert.ts","webpack:///../loader-utils/src/lib/binary-utils/get-first-characters.ts","webpack:///../loader-utils/src/lib/binary-utils/array-buffer-utils.ts","webpack:///../loader-utils/src/lib/binary-utils/buffer-utils.ts","webpack:///../loader-utils/src/lib/binary-utils/memory-copy-utils.ts","webpack:///../images/src/lib/utils/version.ts","webpack:///../images/src/lib/parsers/parse-image.ts","webpack:///../images/src/lib/category-api/image-type.ts","webpack:///../images/src/lib/parsers/parse-to-image.ts","webpack:///../images/src/lib/parsers/svg-utils.ts","webpack:///./src/bundle.ts","webpack:///./src/index.ts","webpack:///./src/basis-loader.ts","webpack:///./src/lib/parsers/parse-basis.js","webpack:///./src/lib/parsers/basis-module-loader.ts","webpack:///../worker-utils/src/lib/worker-utils/get-loadable-worker-url.ts","webpack:///../worker-utils/src/lib/worker-api/process-on-worker.ts","webpack:///../worker-utils/src/lib/worker-utils/remove-nontransferable-options.ts","webpack:///../worker-utils/src/lib/worker-api/create-worker.ts","webpack:///../worker-utils/src/lib/worker-api/validate-worker-version.ts","webpack:///../worker-utils/src/lib/library-utils/library-utils.ts","webpack:///./src/compressed-texture-loader.ts","webpack:///./src/lib/parsers/parse-compressed-texture.ts","webpack:///./src/lib/parsers/parse-ktx.js","webpack:////home/user/apps/loaders.gl/node_modules/ktx-parse/dist/ktx-parse.modern.js","webpack:///./src/lib/utils/ktx-format-helper.ts","webpack:///./src/lib/parsers/parse-dds.ts","webpack:///../loader-utils/src/lib/env-utils/globals.ts","webpack:///../loader-utils/src/lib/worker-loader-utils/create-loader-worker.ts","webpack:///../loader-utils/src/lib/worker-loader-utils/parse-with-worker.ts","webpack:///../loader-utils/src/lib/parser-utils/parse-json.ts","webpack:///../loader-utils/src/lib/binary-utils/binary-copy-utils.ts","webpack:///../loader-utils/src/lib/binary-utils/encode-utils.ts","webpack:///../loader-utils/src/lib/iterators/text-iterators.ts","webpack:///../loader-utils/src/lib/iterators/async-iteration.ts","webpack:///../loader-utils/src/lib/request-utils/request-scheduler.ts","webpack:///../loader-utils/src/lib/path-utils/file-aliases.ts","webpack:///../loader-utils/src/json-loader.ts","webpack:///../loader-utils/src/lib/path-utils/path.ts","webpack:///../loader-utils/src/lib/filesystems/node-filesystem.ts","webpack:///./src/lib/parsers/parse-pvr.ts","webpack:///./src/crunch-loader.ts","webpack:///./src/npy-loader.ts","webpack:///./src/lib/parsers/parse-npy.js","webpack:///./src/compressed-texture-writer.ts","webpack:///./src/lib/encoders/encode-texture.ts","webpack:///../images/src/image-loader.ts","webpack:///../images/src/lib/parsers/parse-to-image-bitmap.ts","webpack:///../images/src/lib/parsers/parse-to-node-image.ts","webpack:///../images/src/image-writer.ts","webpack:///../images/src/lib/encoders/encode-image.ts","webpack:///../images/src/lib/texture-api/load-image.ts","webpack:///../images/src/lib/texture-api/generate-url.ts","webpack:///../images/src/lib/texture-api/deep-load.ts","webpack:///../images/src/lib/texture-api/async-deep-map.ts","webpack:///./src/lib/texture-api/generate-url.ts","webpack:///./src/lib/texture-api/async-deep-map.ts","webpack:///./src/lib/texture-api/load-image-array.ts","webpack:///./src/lib/texture-api/load-image-cube.ts","webpack:///./src/lib/utils/texture-formats.ts","webpack:////home/user/apps/loaders.gl/node_modules/@probe.gl/stats/dist/esm/lib/stat.js","webpack:////home/user/apps/loaders.gl/node_modules/@probe.gl/stats/dist/esm/lib/stats.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","condition","message","Error","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_R11_EAC","COMPRESSED_SIGNED_R11_EAC","COMPRESSED_RG11_EAC","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB_ATC_WEBGL","COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL","COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL","COMPRESSED_RGBA_ASTC_4X4_KHR","COMPRESSED_RGBA_ASTC_5X4_KHR","COMPRESSED_RGBA_ASTC_5X5_KHR","COMPRESSED_RGBA_ASTC_6X5_KHR","COMPRESSED_RGBA_ASTC_6X6_KHR","COMPRESSED_RGBA_ASTC_8X5_KHR","COMPRESSED_RGBA_ASTC_8X6_KHR","COMPRESSED_RGBA_ASTC_8X8_KHR","COMPRESSED_RGBA_ASTC_10X5_KHR","COMPRESSED_RGBA_ASTC_10X6_KHR","COMPRESSED_RGBA_ASTC_10X8_KHR","COMPRESSED_RGBA_ASTC_10X10_KHR","COMPRESSED_RGBA_ASTC_12X10_KHR","COMPRESSED_RGBA_ASTC_12X12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","getHiResTimestamp","timestamp","window","performance","now","process","hrtime","timeParts","Date","g","this","Function","e","NullWorker","id","version","VERSION","options","null","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","getImageType","image","format","getImageTypeOrNull","getImageData","canvas","document","createElement","context","getContext","width","height","drawImage","ImageBitmap","Image","data","Boolean","close","globals","self","global","self_","window_","global_","document_","isBrowser","String","isWorker","importScripts","isMobile","orientation","matches","exec","nodeVersion","parseFloat","NOOP","WorkerThread","props","source","url","assert","onMessage","onError","error","console","log","worker","_createBrowserWorker","Worker","terminate","terminated","transferList","getTransferList","postMessage","event","lineno","colno","_loadableURL","getLoadableWorkerURL","onmessage","onerror","_getErrorFromErrorEvent","onmessageerror","isTransferable","ArrayBuffer","MessagePort","OffscreenCanvas","recursive","transfers","transfersSet","Set","add","buffer","isView","undefined","from","getLevelData","index","offset","levelSize","isArray","levelData","Uint8Array","byteOffset","getLevelSize","levelWidth","levelHeight","sizeFunction","images","mipMapLevels","compressed","internalFormat","Math","max","getUrl","getImageUrls","imageUrls","deepLoad","ImageLoader","parse","urlOptions","mipLevels","getMipmappedImageUrls","generateUrl","urls","lod","shallowLoad","getImageSize","getMipLevels","mipLevel","floor","log2","binaryData","dataView","toDataView","byteLength","getUint32","mimeType","getPngMetadata","getUint16","getUint8","tableMarkers","sofMarkers","getJpegMarkers","has","getJpegMetadata","getGifMetadata","getBmpMetadata","DataView","urlTree","load","asyncDeepMap","fetch","response","arrayBuffer","WorkerJob","jobName","workerThread","isRunning","_resolve","_reject","result","Promise","resolve","reject","type","payload","DEFAULT_PROPS","maxConcurrency","maxMobileConcurrency","onDebug","reuseWorkers","WorkerFarm","Map","setProps","workerPools","isSupported","_workerFarm","values","destroy","_getWorkerPoolProps","workerPool","WorkerPool","set","idleQueue","forEach","isDestroyed","job","done","startPromise","onStart","jobQueue","_startQueuedJob","_getAvailableWorker","queuedJob","shift","backlog","returnWorkerToQueue","count","_getMaxConcurrency","toLowerCase","onMessageWrapperMap","WorkerBody","isKnownMessage","onMessageWrapper","addEventListener","removeEventListener","startsWith","warning","workerOptions","workerFile","workerUrl","_workerType","versionTag","asyncIterator","AsyncQueue","_values","_settlers","_closed","enqueue","settler","getMagicString","magic","fromCharCode","slice","node","isBuffer","bufferToArrayBuffer","text","TextEncoder","encode","_toArrayBuffer","arrayBuffer1","arrayBuffer2","array1","array2","sources","sourceArrays","map","source2","reduce","typedArray","sourceArray","typedArrays","arrays","TypedArrayConstructor","constructor","sumLength","acc","subArray","subarray","toBuffer","toArrayBuffer","targetBuffer","sourceBuffer","targetArray","target","targetOffset","srcByteOffset","srcByteLength","padToNBytes","padding","imageOptions","imageType","loadType","getLoadableImageType","getDefaultImageType","isImageTypeSupported","IMAGE_BITMAP_SUPPORTED","IMAGE_SUPPORTED","DATA_SUPPORTED","_parseImageNode","NODE_IMAGE_SUPPORTED","blobOrDataUrl","getBlobOrSVGDataUrl","URL","webkitURL","objectUrl","createObjectURL","loadToImage","revokeObjectURL","src","decode","onload","err","isSVG","xmlText","TextDecoder","unescape","encodeURIComponent","btoa","getBlob","SVG_DATA_URL_PATTERN","SVG_URL_PATTERN","test","Blob","moduleExports","require","_global","loaders","assign","BasisWorkerLoader","extensions","mimeTypes","tests","binary","basis","libraryPath","BasisLoader","parseBasis","_TypecheckBasisWorkerLoader","_TypecheckBasisLoader","OutputFormat","etc1","basisFormat","etc2","bc1","GL","bc3","bc4","bc5","rgba32","rgb565","bgr565","rgba4444","loadBasisModule","BasisFile","basisFile","startTranscoding","imageCount","getNumImages","imageIndex","levelsCount","getNumLevels","levels","levelIndex","transcodeImage","getImageWidth","getImageHeight","hasAlpha","getHasAlpha","alpha","noAlpha","getBasisOptions","decodedSize","getImageTranscodedSizeInBytes","decodedData","loadBasisPromise","loadBasis","BASIS","wasmBinary","loadLibrary","all","globalThis","initializeBasisModule","BasisModule","then","initializeBasis","workerURL","workerURLCache","getLoadableWorkerURLFromSource","getLoadableWorkerURLFromURL","workerSource","blob","getWorkerName","getWorkerURL","workerFarm","getWorkerFarm","getWorkerPool","startJob","transferableOptions","removeNontransferableOptions","input","warn","JSON","v","cache","stringify","processInBatches","processOnMainThread","inputBatches","resultIterator","batch","requestId","coreVersion","workerVersion","loadLibraryPromises","libraryUrl","moduleName","getLibraryUrl","loadLibraryFromFile","library","CDN","endsWith","requireFromFile","scriptSource","loadLibraryFromString","requireFromString","eval","script","appendChild","createTextNode","body","CompressedTextureWorkerLoader","CompressedTextureLoader","parseCompressedTexture","_TypecheckCompressedTextureWorkerLoader","_TypecheckCompressedTextureLoader","isKTX","parseKTX","isDDS","parseDDS","isPVR","parsePVR","KTX2_ID","uint8Array","ktx","read","pixelWidth","pixelHeight","mapVkFormatToWebGL","vkFormat","extractMipmapImages","level","uncompressedByteLength","a","f","NONE","BASISLZ","ZSTD","ZLIB","BASICFORMAT","UNSPECIFIED","ETC1S","UASTC","SRGB","LINEAR","ITU","NTSC","SLOG","SLOG2","ALPHA_STRAIGHT","ALPHA_PREMULTIPLIED","RGB","RRR","GGG","AAA","RGBA","RRRG","U","typeSize","pixelDepth","layerCount","faceCount","supercompressionScheme","dataFormatDescriptor","vendorId","descriptorType","versionNumber","descriptorBlockSize","colorModel","colorPrimaries","transferFunction","flags","texelBlockDimension","x","y","z","w","bytesPlane","samples","keyValue","globalData","_dataView","_littleEndian","_offset","h","Buffer","_","toString","Uint32Array","BYTES_PER_ELEMENT","_nextUint32","_nextUint64","u","_skip","_nextUint16","_nextUint8","D","bitOffset","bitLength","channelID","samplePosition","sampleLower","sampleUpper","b","_scan","match","B","A","S","L","I","imageFlags","rgbSliceByteOffset","rgbSliceByteLength","alphaSliceByteOffset","alphaSliceByteLength","R","E","T","O","P","C","F","G","endpointCount","selectorCount","imageDescs","endpointsData","selectorsData","tablesData","extendedData","keepWriter","setUint16","setUint32","KTXwriter","fill","setUint8","setBigUint64","BigInt","VULKAN_TO_WEBGL_FORMAT_MAP","131","132","133","134","135","136","137","138","139","140","141","142","147","148","149","150","151","152","153","154","155","156","157","COMPRESSED_RGBA_ASTC_4x4_KHR","158","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","159","COMPRESSED_RGBA_ASTC_5x4_KHR","160","161","COMPRESSED_RGBA_ASTC_5x5_KHR","162","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","163","COMPRESSED_RGBA_ASTC_6x5_KHR","164","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","165","COMPRESSED_RGBA_ASTC_6x6_KHR","166","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","167","COMPRESSED_RGBA_ASTC_8x5_KHR","168","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","169","COMPRESSED_RGBA_ASTC_8x6_KHR","170","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","171","COMPRESSED_RGBA_ASTC_8x8_KHR","172","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","173","COMPRESSED_RGBA_ASTC_10x5_KHR","174","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","175","COMPRESSED_RGBA_ASTC_10x6_KHR","176","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","177","COMPRESSED_RGBA_ASTC_10x8_KHR","178","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","179","COMPRESSED_RGBA_ASTC_10x10_KHR","180","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","181","COMPRESSED_RGBA_ASTC_12x10_KHR","182","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","183","COMPRESSED_RGBA_ASTC_12x12_KHR","184","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","1000054000","1000054001","1000066000","1000066001","1000066002","1000066003","1000066004","1000066005","1000066006","1000066007","1000066008","1000066009","1000066010","1000066011","1000066012","1000066013","DDS_CONSTANTS","HEADER_LENGTH","MAGIC_NUMBER_INDEX","MAGIC_NUMBER","header","Int32Array","pixelFormatNumber","HEADER_PF_FOURCC_INDEX","HEADER_PF_FLAGS_INDEX","DDPF_FOURCC","fourCC","PIXEL_FORMATS","SIZE_FUNCTIONS","HEADER_FLAGS_INDEX","DDSD_MIPMAPCOUNT","MIPMAPCOUNT_INDEX","HEADER_WIDTH_INDEX","HEADER_HEIGHT_INDEX","dataOffset","HEADER_SIZE_INDEX","getATCLevelSize","getDxt1LevelSize","getATCALevelSize","getDxtXLevelSize","getATCILevelSize","DXT1","DXT3","DXT5","ATCA","ATCI","loader","parseData","parseOnMainThread","parseSync","parser","parseTextSync","textDecoder","string","getFirstCharacters","stringBuffer","copyPaddedArrayBufferToDataView","paddedLength","padLength","byteAlignment","ceil","whitespace","charCodeAt","arrayBufferIterator","stream","textIterator","textEncoder","previous","eolIndex","indexOf","line","lineIterator","counter","iterator","visitor","next","arrayBuffers","chunk","concatenateArrayBuffers","strings","join","throttleRequests","maxRequests","RequestScheduler","stats","Stats","handle","getPriority","requestMap","request","priority","promise","requestQueue","_issueNewRequests","isDone","activeRequestCount","deferredUpdate","_issueNewRequestsAsync","freeSlots","_updateAllRequests","_issueRequest","_updateRequest","splice","sort","prefix","pathPrefix","aliases","fileAliases","filename","alias","replacement","replace","JSONLoader","category","_typecheckJSONLoader","slashIndex","lastIndexOf","substr","parts","separator","part","RegExp","NodeFileSystem","_fetch","dirname","fs","readdir","path","stat","info","size","Number","isDirectory","fallbackFetch","open","fd","fstat","position","totalBytesRead","bytesRead","PVR_CONSTANTS","pvrFormat","colourSpace","pixelFormats","PVR_PIXEL_FORMATS","PVR_SIZE_FUNCTIONS","0","1","2","3","6","7","9","11","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","pvrtc2bppSize","pvrtc4bppSize","dxtEtcSmallSize","dxtEtcAstcBigSize","CrunchLoader","crunch","_TypecheckCrunchLoader","NPY_MAGIC_NUMBER","NPYWorkerLoader","npy","NPYLoader","parseNPY","_TypecheckNPYWorkerLoader","_TypecheckNPYLoader","view","headerLength","majorVersion","decoder","headerArray","headerText","headerEndOffset","parseHeader","numpyType","descr","ArrayType","DTYPES","arrayByteLength","shape","LITTLE_ENDIAN_OS","u1","i1","Int8Array","u2","Uint16Array","i2","Int16Array","u4","i4","f4","Float32Array","f8","Float64Array","CompressedTextureWriter","texture","compression","quality","mipmap","flipY","toolFlags","encodeURLtoURL","encodeImageURLToCompressedTextureURL","_TypecheckCompressedTextureWriter","MODULE_ROOT","__dirname","inputUrl","outputUrl","childProcess","ChildProcessProxy","start","command","spawn","parseImage","getBinaryImageMetadata","_typecheckImageLoader","EMPTY_OBJECT","imagebitmapOptionsSupported","imagebitmapOptions","imagebitmap","safeCreateImageBitmap","isEmptyObject","createImageBitmap","ImageWriter","jpegQuality","encodeImage","_encodeImageNode","encodeImageInBrowser","qualityParamSupported","drawImageToCanvas","toBlob","transferFromImageBitmap","clampedArray","Uint8ClampedArray","imageData","ImageData","putImageData","baseUrl","resolvePath","isObject","tree","func","mapSubtree","mapArray","mapObject","promises","urlArray","getImageArrayUrls","CUBE_FACES","face","direction","axis","sign","getImageCubeUrls","gl","formats","getWebGLContext","BROWSER_PREFIXES","extension","WEBGL_EXTENSIONS","getExtension","gpuTextureFormat","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_s3tc_srgb","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_atc","WEBGL_compressed_texture_astc","EXT_texture_compression_rgtc","sampleSize","reset","addCount","subtractCount","_count","_samples","_checkSampling","time","_time","lastTiming","_startTime","_timerPending","addTime","lastSampleCount","lastSampleTime","_initializeStats","seal","_getOrCreate","keys","fn","table","average","getAverageTime","hz","getHz"],"mappings":"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","file":"dist.es5.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 36);\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\n\n/** Throws an `Error` with the optional `message` if `condition` is falsy */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loaders.gl assertion failed.');\n  }\n}\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// TODO: use 'latest' instead of 'beta' when 3.0.0 version is released as 'latest'\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'beta';\n","/* eslint-disable camelcase */\nexport const GL = {\n  // WEBGL_compressed_texture_s3tc\n\n  COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83f0,\n  COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83f1,\n  COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83f2,\n  COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83f3,\n\n  // WEBGL_compressed_texture_es3\n\n  COMPRESSED_R11_EAC: 0x9270,\n  COMPRESSED_SIGNED_R11_EAC: 0x9271,\n  COMPRESSED_RG11_EAC: 0x9272,\n  COMPRESSED_SIGNED_RG11_EAC: 0x9273,\n  COMPRESSED_RGB8_ETC2: 0x9274,\n  COMPRESSED_RGBA8_ETC2_EAC: 0x9275,\n  COMPRESSED_SRGB8_ETC2: 0x9276,\n  COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9277,\n  COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9278,\n  COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9279,\n\n  // WEBGL_compressed_texture_pvrtc\n\n  COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8c00,\n  COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8c02,\n  COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8c01,\n  COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8c03,\n\n  // WEBGL_compressed_texture_etc1\n\n  COMPRESSED_RGB_ETC1_WEBGL: 0x8d64,\n\n  // WEBGL_compressed_texture_atc\n\n  COMPRESSED_RGB_ATC_WEBGL: 0x8c92,\n  COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL: 0x8c93,\n  COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL: 0x87ee,\n\n  // WEBGL_compressed_texture_astc\n\n  COMPRESSED_RGBA_ASTC_4X4_KHR: 0x93b0,\n  COMPRESSED_RGBA_ASTC_5X4_KHR: 0x93b1,\n  COMPRESSED_RGBA_ASTC_5X5_KHR: 0x93b2,\n  COMPRESSED_RGBA_ASTC_6X5_KHR: 0x93b3,\n  COMPRESSED_RGBA_ASTC_6X6_KHR: 0x93b4,\n  COMPRESSED_RGBA_ASTC_8X5_KHR: 0x93b5,\n  COMPRESSED_RGBA_ASTC_8X6_KHR: 0x93b6,\n  COMPRESSED_RGBA_ASTC_8X8_KHR: 0x93b7,\n  COMPRESSED_RGBA_ASTC_10X5_KHR: 0x93b8,\n  COMPRESSED_RGBA_ASTC_10X6_KHR: 0x93b9,\n  COMPRESSED_RGBA_ASTC_10X8_KHR: 0x93ba,\n  COMPRESSED_RGBA_ASTC_10X10_KHR: 0x93bb,\n  COMPRESSED_RGBA_ASTC_12X10_KHR: 0x93bc,\n  COMPRESSED_RGBA_ASTC_12X12_KHR: 0x93bd,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR: 0x93d0,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR: 0x93d1,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR: 0x93d2,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR: 0x93d3,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR: 0x93d4,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR: 0x93d5,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR: 0x93d6,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR: 0x93d7,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR: 0x93d8,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR: 0x93d9,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR: 0x93da,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR: 0x93db,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR: 0x93dc,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR: 0x93dd,\n\n  // EXT_texture_compression_rgtc\n\n  COMPRESSED_RED_RGTC1_EXT: 0x8dbb,\n  COMPRESSED_SIGNED_RED_RGTC1_EXT: 0x8dbc,\n  COMPRESSED_RED_GREEN_RGTC2_EXT: 0x8dbd,\n  COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: 0x8dbe,\n\n  // WEBGL_compressed_texture_s3tc_srgb\n\n  COMPRESSED_SRGB_S3TC_DXT1_EXT: 0x8c4c,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: 0x8c4d,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: 0x8c4e,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: 0x8c4f\n};\n","export default function getHiResTimestamp() {\n  let timestamp;\n\n  if (typeof window !== 'undefined' && window.performance) {\n    timestamp = window.performance.now();\n  } else if (typeof process !== 'undefined' && process.hrtime) {\n    const timeParts = process.hrtime();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n//# sourceMappingURL=hi-res-timestamp.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import type {WorkerObject} from './types';\nimport {VERSION} from './lib/env-utils/version';\n\n// TYPES\nexport type {\n  WorkerObject,\n  WorkerOptions,\n  // Protocol\n  WorkerMessage,\n  WorkerMessageType,\n  WorkerMessageData,\n  WorkerMessagePayload\n} from './types';\n\n// GENERAL UTILS\nexport {assert} from './lib/env-utils/assert';\nexport {isBrowser, isWorker} from './lib/env-utils/globals';\n\n// WORKER UTILS - TYPES\nexport {default as WorkerJob} from './lib/worker-farm/worker-job';\nexport {default as WorkerThread} from './lib/worker-farm/worker-thread';\n\n// WORKER FARMS\nexport {default as WorkerFarm} from './lib/worker-farm/worker-farm';\nexport {default as WorkerPool} from './lib/worker-farm/worker-pool';\nexport {default as WorkerBody} from './lib/worker-farm/worker-body';\n\nexport {processOnWorker, canProcessOnWorker} from './lib/worker-api/process-on-worker';\nexport {createWorker} from './lib/worker-api/create-worker';\n\n// WORKER UTILS - EXPORTS\nexport {getWorkerURL} from './lib/worker-api/get-worker-url';\nexport {validateWorkerVersion} from './lib/worker-api/validate-worker-version';\nexport {getTransferList} from './lib/worker-utils/get-transfer-list';\n\n// LIBRARY UTILS\nexport {getLibraryUrl, loadLibrary} from './lib/library-utils/library-utils';\n\n// PARSER UTILS\nexport {default as AsyncQueue} from './lib/async-queue/async-queue';\n\n// PROCESS UTILS\nexport {default as ChildProcessProxy} from './lib/process-utils/child-process-proxy';\n\n// WORKER OBJECTS\n\n/** A null worker to test that worker processing is functional */\nexport const NullWorker: WorkerObject = {\n  id: 'null',\n  name: 'null',\n  module: 'worker-utils',\n  version: VERSION,\n  options: {\n    null: {}\n  }\n};\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n\n// Change to `latest` on production branches\nconst DEFAULT_VERSION = 'beta';\ndeclare let __VERSION__;\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : DEFAULT_VERSION;\nif (typeof __VERSION__ === 'undefined') {\n  // eslint-disable-next-line\n  console.error(\n    'loaders.gl: The __VERSION__ variable is not injected using babel plugin. Latest unstable workers would be fetched from the CDN.'\n  );\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// TYPES\nexport type {\n  Loader,\n  LoaderWithParser,\n  LoaderContext,\n  LoaderOptions,\n  Writer,\n  WriterOptions,\n  DataType,\n  SyncDataType,\n  BatchableDataType,\n  IFileSystem,\n  IRandomAccessReadFileSystem\n} from './types';\n\n// GENERAL UTILS\nexport {assert} from './lib/env-utils/assert';\nexport {\n  isBrowser,\n  isWorker,\n  nodeVersion,\n  self,\n  window,\n  global,\n  document\n} from './lib/env-utils/globals';\n\n// LOADERS.GL-SPECIFIC WORKER UTILS\nexport {createLoaderWorker} from './lib/worker-loader-utils/create-loader-worker';\nexport {parseWithWorker, canParseWithWorker} from './lib/worker-loader-utils/parse-with-worker';\n\n// PARSER UTILS\nexport {parseJSON} from './lib/parser-utils/parse-json';\n\n// MEMORY COPY UTILS\nexport {\n  toArrayBuffer,\n  sliceArrayBuffer,\n  concatenateArrayBuffers,\n  concatenateTypedArrays,\n  compareArrayBuffers\n} from './lib/binary-utils/array-buffer-utils';\nexport {padToNBytes, copyToArray, copyArrayBuffer} from './lib/binary-utils/memory-copy-utils';\nexport {\n  copyPaddedArrayBufferToDataView,\n  copyPaddedStringToDataView\n} from './lib/binary-utils/binary-copy-utils';\nexport {\n  padStringToByteAlignment,\n  copyStringToDataView,\n  copyBinaryToDataView\n} from './lib/binary-utils/encode-utils';\nexport {getFirstCharacters, getMagicString} from './lib/binary-utils/get-first-characters';\n\n// ITERATOR UTILS\nexport {\n  makeTextEncoderIterator,\n  makeTextDecoderIterator,\n  makeLineIterator,\n  makeNumberedLineIterator\n} from './lib/iterators/text-iterators';\nexport {forEach, concatenateArrayBuffersAsync} from './lib/iterators/async-iteration';\n\n// REQUEST UTILS\nexport {default as RequestScheduler} from './lib/request-utils/request-scheduler';\n\n// PATH HELPERS\nexport {setPathPrefix, getPathPrefix, resolvePath} from './lib/path-utils/file-aliases';\nexport {addAliases as _addAliases} from './lib/path-utils/file-aliases';\n\n// MICRO LOADERS\nexport {JSONLoader} from './json-loader';\n\n// NODE support\n\n// Node.js emulation (can be used in browser)\n\n// `path` replacement (avoids bundling big path polyfill)\nimport * as path from './lib/path-utils/path';\nexport {path};\n\n// Avoid direct use of `Buffer` which pulls in 50KB polyfill\nexport {isBuffer, toBuffer, bufferToArrayBuffer} from './lib/binary-utils/buffer-utils';\n\n// Note.js wrappers (can be safely imported, but not used in browser)\n\n// Use instead of importing 'util'\nimport * as util from './lib/node/util';\nexport {util};\n// TODO - remove\nexport {promisify} from './lib/node/util';\n\n// Use instead of importing 'fs';`\nimport * as fs from './lib/node/fs';\nexport {fs};\n\n// EXPERIMENTAL\nexport {default as _NodeFileSystem} from './lib/filesystems/node-filesystem';\n","export function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n","import type {ImageType, ImageTypeEnum, ImageDataType} from '../../types';\n\nexport function isImage(image: ImageType): boolean {\n  return Boolean(getImageTypeOrNull(image));\n}\n\nexport function deleteImage(image: ImageType): void {\n  switch (getImageType(image)) {\n    case 'imagebitmap':\n      (image as ImageBitmap).close();\n      break;\n    default:\n    // Nothing to do for images and image data objects\n  }\n}\n\nexport function getImageType(image: ImageType): ImageTypeEnum {\n  const format = getImageTypeOrNull(image);\n  if (!format) {\n    throw new Error('Not an image');\n  }\n  return format;\n}\n\nexport function getImageSize(image: ImageType): {width: number; height: number} {\n  return getImageData(image);\n}\n\nexport function getImageData(image: ImageType): ImageDataType | ImageData {\n  switch (getImageType(image)) {\n    case 'data':\n      return image as unknown as ImageData;\n\n    case 'image':\n    case 'imagebitmap':\n      // Extract the image data from the image via a canvas\n      const canvas = document.createElement('canvas');\n      // TODO - reuse the canvas?\n      const context = canvas.getContext('2d');\n      if (!context) {\n        throw new Error('getImageData');\n      }\n      // @ts-ignore\n      canvas.width = image.width;\n      // @ts-ignore\n      canvas.height = image.height;\n      // @ts-ignore\n      context.drawImage(image, 0, 0);\n      // @ts-ignore\n      return context.getImageData(0, 0, image.width, image.height);\n\n    default:\n      throw new Error('getImageData');\n  }\n}\n\n// PRIVATE\n\n// eslint-disable-next-line complexity\nfunction getImageTypeOrNull(image) {\n  if (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    return 'imagebitmap';\n  }\n  if (typeof Image !== 'undefined' && image instanceof Image) {\n    return 'image';\n  }\n  if (image && typeof image === 'object' && image.data && image.width && image.height) {\n    return 'data';\n  }\n  return null;\n}\n","// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\nconst self_: {[key: string]: any} = globals.self || globals.window || globals.global || {};\nconst window_: {[key: string]: any} = globals.window || globals.self || globals.global || {};\nconst global_: {[key: string]: any} = globals.global || globals.self || globals.window || {};\nconst document_: {[key: string]: any} = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in the browser, false if running in Node.js */\nexport const isBrowser: boolean =\n  // @ts-ignore process.browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running on a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n/** true if running on a mobile device */\nexport const isMobile: boolean =\n  typeof window !== 'undefined' && typeof window.orientation !== 'undefined';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n\n/** Version of Node.js if running under Node, otherwise 0 */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n","import {assert} from '../env-utils/assert';\nimport {getLoadableWorkerURL} from '../worker-utils/get-loadable-worker-url';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst NOOP = () => {};\n\nexport type WorkerThreadProps = {\n  name: string;\n  source?: string;\n  url?: string;\n};\n\n/**\n * Represents one worker thread\n */\nexport default class WorkerThread {\n  readonly name: string;\n  readonly source: string | undefined;\n  readonly url: string | undefined;\n  terminated: boolean = false;\n  worker: Worker;\n  onMessage: (message: any) => void;\n  onError: (error: Error) => void;\n\n  private _loadableURL: string = '';\n\n  static isSupported(): boolean {\n    return typeof Worker !== 'undefined';\n  }\n\n  constructor(props: WorkerThreadProps) {\n    const {name, source, url} = props;\n    assert(source || url); // Either source or url must be defined\n    this.name = name;\n    this.source = source;\n    this.url = url;\n    this.onMessage = NOOP;\n    this.onError = (error) => console.log(error); // eslint-disable-line\n\n    this.worker = this._createBrowserWorker();\n  }\n\n  /**\n   * Terminate this worker thread\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    this.onMessage = NOOP;\n    this.onError = NOOP;\n    // @ts-ignore\n    this.worker.terminate();\n    this.terminated = true;\n  }\n\n  get isRunning() {\n    return Boolean(this.onMessage);\n  }\n\n  /**\n   * Send a message to this worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   * @param transferList If not supplied, calculated automatically by traversing data\n   */\n  postMessage(data: any, transferList?: any[]): void {\n    transferList = transferList || getTransferList(data);\n    // @ts-ignore\n    this.worker.postMessage(data, transferList);\n  }\n\n  // PRIVATE\n\n  /**\n   * Generate a standard Error from an ErrorEvent\n   * @param {ErrorEvent} event\n   */\n  _getErrorFromErrorEvent(event) {\n    // Note Error object does not have the expected fields if loading failed completely\n    // https://developer.mozilla.org/en-US/docs/Web/API/Worker#Event_handlers\n    // https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n    let message = 'Failed to load ';\n    message += `worker ${this.name}. `;\n    if (event.message) {\n      message += `${event.message} in `;\n    }\n    // const hasFilename = event.filename && !event.filename.startsWith('blob:');\n    // message += hasFilename ? event.filename : this.source.slice(0, 100);\n    if (event.lineno) {\n      message += `:${event.lineno}:${event.colno}`;\n    }\n    return new Error(message);\n  }\n\n  /**\n   * Creates a worker thread on the browser\n   */\n  _createBrowserWorker() {\n    this._loadableURL = getLoadableWorkerURL({source: this.source, url: this.url});\n    const worker = new Worker(this._loadableURL, {name: this.name});\n\n    worker.onmessage = (event) => {\n      if (!event.data) {\n        this.onError(new Error('No data received'));\n      } else {\n        this.onMessage(event.data);\n      }\n    };\n    // This callback represents an uncaught exception in the worker thread\n    worker.onerror = (error) => {\n      this.onError(this._getErrorFromErrorEvent(error));\n      this.terminated = true;\n    };\n    // TODO - not clear when this would be called, for now just log in case it happens\n    worker.onmessageerror = (event) => console.error(event); // eslint-disable-line\n\n    return worker;\n  }\n}\n","// NOTE - there is a copy of this function is both in core and loader-utils\n// core does not need all the utils in loader-utils, just this one.\n\n/**\n * Returns an array of Transferrable objects that can be used with postMessage\n * https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n * @param object data to be sent via postMessage\n * @param recursive - not for application use\n * @param transfers - not for application use\n * @returns a transfer list that can be passed to postMessage\n */\nexport function getTransferList(\n  object: any,\n  recursive: boolean = true,\n  transfers?: Set<any>\n): Transferable[] {\n  // Make sure that items in the transfer list is unique\n  const transfersSet = transfers || new Set();\n\n  if (!object) {\n    // ignore\n  } else if (isTransferable(object)) {\n    transfersSet.add(object);\n  } else if (isTransferable(object.buffer)) {\n    // Typed array\n    transfersSet.add(object.buffer);\n  } else if (ArrayBuffer.isView(object)) {\n    // object is a TypeArray viewing into a SharedArrayBuffer (not transferable)\n    // Do not iterate through the content in this case\n  } else if (recursive && typeof object === 'object') {\n    for (const key in object) {\n      // Avoid perf hit - only go one level deep\n      getTransferList(object[key], recursive, transfersSet);\n    }\n  }\n\n  // If transfers is defined, is internal recursive call\n  // Otherwise it's called by the user\n  return transfers === undefined ? Array.from(transfersSet) : [];\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Transferable\nfunction isTransferable(object) {\n  if (!object) {\n    return false;\n  }\n  if (object instanceof ArrayBuffer) {\n    return true;\n  }\n  if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n    return true;\n  }\n  if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n    return true;\n  }\n  // @ts-ignore\n  if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n    return true;\n  }\n  return false;\n}\n","import {CompressedTextureExtractOptions, TextureLevel} from '../../types';\n\n/**\n * Extract mipmap images from compressed texture buffer\n * @param data - binary data of compressed texture or Array of level objects\n * @param options.mipMapLevels - number of mipmap level inside image\n * @param options.width - width of 0 - level\n * @param options.height - height of 0 - level\n * @param options.sizeFunction - format-related function to calculate level size in bytes\n * @param options.internalFormat - WebGL compatible format code\n * @returns Array of the texture levels\n */\nexport function extractMipmapImages(\n  data: Uint8Array | Array<Object>,\n  options: CompressedTextureExtractOptions\n): TextureLevel[] {\n  const images = new Array(options.mipMapLevels);\n\n  let levelWidth = options.width;\n  let levelHeight = options.height;\n  let offset = 0;\n\n  for (let i = 0; i < options.mipMapLevels; ++i) {\n    const levelSize = getLevelSize(options, levelWidth, levelHeight, data, i);\n    const levelData = getLevelData(data, i, offset, levelSize);\n\n    images[i] = {\n      compressed: true,\n      format: options.internalFormat,\n      data: levelData,\n      width: levelWidth,\n      height: levelHeight,\n      levelSize\n    };\n\n    levelWidth = Math.max(1, levelWidth >> 1);\n    levelHeight = Math.max(1, levelHeight >> 1);\n\n    offset += levelSize;\n  }\n  return images;\n}\n\nfunction getLevelData(data, index, offset, levelSize) {\n  if (!Array.isArray(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset + offset, levelSize);\n  }\n\n  return data[index].levelData;\n}\n\nfunction getLevelSize(options, levelWidth, levelHeight, data, index) {\n  if (!Array.isArray(data)) {\n    return options.sizeFunction(levelWidth, levelHeight);\n  }\n  return options.sizeFunction(data[index]);\n}\n","import {assert} from '@loaders.gl/loader-utils';\nimport {ImageLoader, getImageSize} from '@loaders.gl/images';\nimport {generateUrl} from './generate-url';\nimport {deepLoad, shallowLoad} from './deep-load';\n\nexport async function loadImageTexture(getUrl, options = {}) {\n  const imageUrls = await getImageUrls(getUrl, options);\n  return await deepLoad(imageUrls, ImageLoader.parse, options);\n}\n\nexport async function getImageUrls(getUrl, options, urlOptions = {}) {\n  const mipLevels = (options && options.image && options.image.mipLevels) || 0;\n  return mipLevels !== 0\n    ? await getMipmappedImageUrls(getUrl, mipLevels, options, urlOptions)\n    : generateUrl(getUrl, options, urlOptions);\n}\n\nasync function getMipmappedImageUrls(getUrl, mipLevels, options, urlOptions): Promise<string[]> {\n  const urls: string[] = [];\n\n  // If no mip levels supplied, we need to load the level 0 image and calculate based on size\n  if (mipLevels === 'auto') {\n    const url = generateUrl(getUrl, options, {...urlOptions, lod: 0});\n    const image = await shallowLoad(url, ImageLoader.parse, options);\n\n    const {width, height} = getImageSize(image);\n    mipLevels = getMipLevels({width, height});\n\n    // TODO - push image and make `deepLoad` pass through non-url values, avoid loading twice?\n    urls.push(url);\n  }\n\n  // We now know how many mipLevels we need, remaining image urls can now be constructed\n  assert(mipLevels > 0);\n\n  for (let mipLevel = urls.length; mipLevel < mipLevels; ++mipLevel) {\n    const url = generateUrl(getUrl, options, {...urlOptions, lod: mipLevel});\n    urls.push(url);\n  }\n\n  return urls;\n}\n\n// Calculates number of mipmaps based on texture size (log2)\nexport function getMipLevels({width, height}) {\n  return 1 + Math.floor(Math.log2(Math.max(width, height)));\n}\n","// TYPES\nexport type {ImageDataType, ImageType, ImageTypeEnum} from './types';\n\n// LOADERS AND WRITERS\nexport {ImageLoader} from './image-loader';\nexport {ImageWriter} from './image-writer';\n\n// IMAGE CATEGORY API\n\n// Binary Image API\nexport {getBinaryImageMetadata} from './lib/category-api/binary-image-api';\n\n// Parsed Image API\nexport {isImageTypeSupported, getDefaultImageType} from './lib/category-api/image-type';\n\nexport {\n  isImage,\n  getImageType,\n  getImageSize,\n  getImageData\n} from './lib/category-api/parsed-image-api';\n\n// DEPRECATED - Remove in V3 (fix dependency in luma.gl)\nexport {loadImage} from './lib/texture-api/load-image';\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\nconst self_ = globals.self || globals.window || globals.global;\nconst window_ = globals.window || globals.self || globals.global;\nconst global_ = globals.global || globals.self || globals.window;\nconst document_ = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\nexport const isBrowser =\n  // @ts-ignore\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\nexport const isWorker = typeof importScripts === 'function';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\nexport const nodeVersion = (matches && parseFloat(matches[1])) || 0;\n","// Attributions\n// * Based on binary-gltf-utils under MIT license: Copyright (c) 2016-17 Karl Cheng\n\n// TODO: make these functions work for Node.js buffers?\n// Quarantine references to Buffer to prevent bundler from adding big polyfills\n// import {bufferToArrayBuffer} from '../node/buffer-to-array-buffer';\n// TODO - this should be handled in @loaders.gl/polyfills\n\n/** MIME type, width and height extracted from binary compressed image data */\nexport type BinaryImageMetadata = {\n  mimeType: string;\n  width: number;\n  height: number;\n};\n\nconst BIG_ENDIAN = false;\nconst LITTLE_ENDIAN = true;\n\n/**\n * Extracts `{mimeType, width and height}` from a memory buffer containing a known image format\n * Currently supports `image/png`, `image/jpeg`, `image/bmp` and `image/gif`.\n * @param binaryData image file memory to parse\n * @returns metadata or null if memory is not a valid image file format layout.\n */\nexport function getBinaryImageMetadata(\n  binaryData: DataView | ArrayBuffer\n): BinaryImageMetadata | null {\n  const dataView = toDataView(binaryData);\n  return (\n    getPngMetadata(dataView) ||\n    getJpegMetadata(dataView) ||\n    getGifMetadata(dataView) ||\n    getBmpMetadata(dataView)\n  );\n}\n\n// PNG\n\nfunction getPngMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check file contains the first 4 bytes of the PNG signature.\n  const isPng = dataView.byteLength >= 24 && dataView.getUint32(0, BIG_ENDIAN) === 0x89504e47;\n  if (!isPng) {\n    return null;\n  }\n\n  // Extract size from a binary PNG file\n  return {\n    mimeType: 'image/png',\n    width: dataView.getUint32(16, BIG_ENDIAN),\n    height: dataView.getUint32(20, BIG_ENDIAN)\n  };\n}\n\n// GIF\n\n// Extract size from a binary GIF file\n// TODO: GIF is not this simple\nfunction getGifMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check first 4 bytes of the GIF signature (\"GIF8\").\n  const isGif = dataView.byteLength >= 10 && dataView.getUint32(0, BIG_ENDIAN) === 0x47494638;\n  if (!isGif) {\n    return null;\n  }\n\n  // GIF is little endian.\n  return {\n    mimeType: 'image/gif',\n    width: dataView.getUint16(6, LITTLE_ENDIAN),\n    height: dataView.getUint16(8, LITTLE_ENDIAN)\n  };\n}\n\n// BMP\n\n// TODO: BMP is not this simple\nexport function getBmpMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check magic number is valid (first 2 characters should be \"BM\").\n  // The mandatory bitmap file header is 14 bytes long.\n  const isBmp =\n    dataView.byteLength >= 14 &&\n    dataView.getUint16(0, BIG_ENDIAN) === 0x424d &&\n    dataView.getUint32(2, LITTLE_ENDIAN) === dataView.byteLength;\n\n  if (!isBmp) {\n    return null;\n  }\n\n  // BMP is little endian.\n  return {\n    mimeType: 'image/bmp',\n    width: dataView.getUint32(18, LITTLE_ENDIAN),\n    height: dataView.getUint32(22, LITTLE_ENDIAN)\n  };\n}\n\n// JPEG\n\n// Extract width and height from a binary JPEG file\nfunction getJpegMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check file contains the JPEG \"start of image\" (SOI) marker\n  // followed by another marker.\n  const isJpeg =\n    dataView.byteLength >= 3 &&\n    dataView.getUint16(0, BIG_ENDIAN) === 0xffd8 &&\n    dataView.getUint8(2) === 0xff;\n\n  if (!isJpeg) {\n    return null;\n  }\n\n  const {tableMarkers, sofMarkers} = getJpegMarkers();\n\n  // Exclude the two byte SOI marker.\n  let i = 2;\n  while (i + 9 < dataView.byteLength) {\n    const marker = dataView.getUint16(i, BIG_ENDIAN);\n\n    // The frame that contains the width and height of the JPEG image.\n    if (sofMarkers.has(marker)) {\n      return {\n        mimeType: 'image/jpeg',\n        height: dataView.getUint16(i + 5, BIG_ENDIAN), // Number of lines\n        width: dataView.getUint16(i + 7, BIG_ENDIAN) // Number of pixels per line\n      };\n    }\n\n    // Miscellaneous tables/data preceding the frame header.\n    if (!tableMarkers.has(marker)) {\n      return null;\n    }\n\n    // Length includes size of length parameter but not the two byte header.\n    i += 2;\n    i += dataView.getUint16(i, BIG_ENDIAN);\n  }\n\n  return null;\n}\n\nfunction getJpegMarkers() {\n  // Tables/misc header markers.\n  // DQT, DHT, DAC, DRI, COM, APP_n\n  const tableMarkers = new Set([0xffdb, 0xffc4, 0xffcc, 0xffdd, 0xfffe]);\n  for (let i = 0xffe0; i < 0xfff0; ++i) {\n    tableMarkers.add(i);\n  }\n\n  // SOF markers and DHP marker.\n  // These markers are after tables/misc data.\n  const sofMarkers = new Set([\n    0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc9, 0xffca, 0xffcb, 0xffcd, 0xffce,\n    0xffcf, 0xffde\n  ]);\n\n  return {tableMarkers, sofMarkers};\n}\n\n// TODO - move into image module?\nfunction toDataView(data) {\n  if (data instanceof DataView) {\n    return data;\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new DataView(data.buffer);\n  }\n\n  // TODO: make these functions work for Node.js buffers?\n  // if (bufferToArrayBuffer) {\n  //   data = bufferToArrayBuffer(data);\n  // }\n\n  // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n  if (data instanceof ArrayBuffer) {\n    return new DataView(data);\n  }\n  throw new Error('toDataView');\n}\n","import {asyncDeepMap} from './async-deep-map';\n\nexport async function deepLoad(urlTree, load, options) {\n  return await asyncDeepMap(urlTree, (url) => shallowLoad(url, load, options));\n}\n\nexport async function shallowLoad(url, load, options) {\n  // console.error('loading', url);\n  const response = await fetch(url, options.fetch);\n  const arrayBuffer = await response.arrayBuffer();\n  return await load(arrayBuffer, options);\n}\n","import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport WorkerThread from './worker-thread';\nimport {assert} from '../env-utils/assert';\n\n/**\n * Represents one Job handled by a WorkerPool or WorkerFarm\n */\nexport default class WorkerJob {\n  readonly name: string;\n  readonly workerThread: WorkerThread;\n  isRunning: boolean;\n  /** Promise that resolves when Job is done */\n  readonly result: Promise<any>;\n\n  private _resolve: (value: any) => void;\n  private _reject: (reason?: any) => void;\n\n  constructor(jobName: string, workerThread: WorkerThread) {\n    this.name = jobName;\n    this.workerThread = workerThread;\n    this.isRunning = true;\n    this._resolve = () => {};\n    this._reject = () => {};\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  /**\n   * Send a message to the job's worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   */\n  postMessage(type: WorkerMessageType, payload: WorkerMessagePayload): void {\n    this.workerThread.postMessage({\n      source: 'loaders.gl', // Lets worker ignore unrelated messages\n      type,\n      payload\n    });\n  }\n\n  /**\n   * Call to resolve the `result` Promise with the supplied value\n   */\n  done(value): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._resolve(value);\n  }\n\n  /**\n   * Call to reject the `result` Promise with the supplied error\n   */\n  error(error): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._reject(error);\n  }\n}\n","import WorkerPool from './worker-pool';\nimport WorkerThread from './worker-thread';\n\n/**\n * @param maxConcurrency {number} - max count of workers\n */\nexport type WorkerFarmProps = {\n  maxConcurrency?: number;\n  maxMobileConcurrency?: number;\n  reuseWorkers?: boolean;\n  onDebug?: () => void;\n};\n\nconst DEFAULT_PROPS: WorkerFarmProps = {\n  maxConcurrency: 3,\n  maxMobileConcurrency: 1,\n  onDebug: () => {},\n  reuseWorkers: true\n};\n\n/**\n * Process multiple jobs with a \"farm\" of different workers in worker pools.\n */\nexport default class WorkerFarm {\n  private props: WorkerFarmProps;\n  private workerPools = new Map<string, WorkerPool>();\n  // singleton\n  private static _workerFarm?: WorkerFarm;\n\n  /** Check if Workers are supported */\n  static isSupported(): boolean {\n    return WorkerThread.isSupported();\n  }\n\n  /** Get the singleton instance of the global worker farm */\n  static getWorkerFarm(props: WorkerFarmProps = {}): WorkerFarm {\n    WorkerFarm._workerFarm = WorkerFarm._workerFarm || new WorkerFarm({});\n    WorkerFarm._workerFarm.setProps(props);\n    return WorkerFarm._workerFarm;\n  }\n\n  /** get global instance with WorkerFarm.getWorkerFarm() */\n  private constructor(props: WorkerFarmProps) {\n    this.props = {...DEFAULT_PROPS};\n    this.setProps(props);\n    /** @type Map<string, WorkerPool>} */\n    this.workerPools = new Map();\n  }\n\n  /**\n   * Terminate all workers in the farm\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    for (const workerPool of this.workerPools.values()) {\n      workerPool.destroy();\n    }\n  }\n\n  /**\n   * Set props used when initializing worker pools\n   * @param props\n   */\n  setProps(props: WorkerFarmProps): void {\n    this.props = {...this.props, ...props};\n    // Update worker pool props\n    for (const workerPool of this.workerPools.values()) {\n      workerPool.setProps(this._getWorkerPoolProps());\n    }\n  }\n\n  /**\n   * Returns a worker pool for the specified worker\n   * @param options - only used first time for a specific worker name\n   * @param options.name - the name of the worker - used to identify worker pool\n   * @param options.url -\n   * @param options.source -\n   * @example\n   *   const job = WorkerFarm.getWorkerFarm().getWorkerPool({name, url}).startJob(...);\n   */\n  getWorkerPool(options: {name: string; source?: string; url?: string}): WorkerPool {\n    const {name, source, url} = options;\n    let workerPool = this.workerPools.get(name);\n    if (!workerPool) {\n      workerPool = new WorkerPool({\n        name,\n        source,\n        url\n      });\n      workerPool.setProps(this._getWorkerPoolProps());\n      this.workerPools.set(name, workerPool);\n    }\n    return workerPool;\n  }\n\n  _getWorkerPoolProps() {\n    return {\n      maxConcurrency: this.props.maxConcurrency,\n      maxMobileConcurrency: this.props.maxMobileConcurrency,\n      reuseWorkers: this.props.reuseWorkers,\n      onDebug: this.props.onDebug\n    };\n  }\n}\n","import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport {isMobile} from '../env-utils/globals';\nimport WorkerThread from './worker-thread';\nimport WorkerJob from './worker-job';\n\n/** WorkerPool onDebug Callback Parameters */\ntype OnDebugParameters = {\n  message: string;\n  worker: string;\n  name: string;\n  job: string;\n  backlog: number;\n  workerThread: WorkerThread;\n};\n\n/** WorkerPool Properties */\nexport type WorkerPoolProps = {\n  name?: string;\n  source?: string; // | Function;\n  url?: string;\n  maxConcurrency?: number;\n  maxMobileConcurrency?: number;\n  onDebug?: (options: OnDebugParameters) => any;\n  reuseWorkers?: boolean;\n};\n\n/** Private helper types */\ntype OnMessage = (job: WorkerJob, type: WorkerMessageType, payload: WorkerMessagePayload) => void;\ntype OnError = (job: WorkerJob, error: Error) => void;\n\ntype QueuedJob = {\n  name: string;\n  onMessage: OnMessage;\n  onError: OnError;\n  onStart: (value: any) => void; // Resolve job start promise\n};\n\n/**\n * Process multiple data messages with small pool of identical workers\n */\nexport default class WorkerPool {\n  name: string = 'unnamed';\n  source?: string; // | Function;\n  url?: string;\n  maxConcurrency: number = 1;\n  maxMobileConcurrency: number = 1;\n  onDebug: (options: OnDebugParameters) => any = () => {};\n  reuseWorkers: boolean = true;\n\n  private props: WorkerPoolProps = {};\n  private jobQueue: QueuedJob[] = [];\n  private idleQueue: WorkerThread[] = [];\n  private count = 0;\n  private isDestroyed = false;\n\n  /**\n   * @param processor - worker function\n   * @param maxConcurrency - max count of workers\n   */\n  constructor(props: WorkerPoolProps) {\n    this.source = props.source;\n    this.url = props.url;\n    this.setProps(props);\n  }\n\n  /**\n   * Terminates all workers in the pool\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    // Destroy idle workers, active Workers will be destroyed on completion\n    this.idleQueue.forEach((worker) => worker.destroy());\n    this.isDestroyed = true;\n  }\n\n  setProps(props: WorkerPoolProps) {\n    this.props = {...this.props, ...props};\n\n    if (props.name !== undefined) {\n      this.name = props.name;\n    }\n    if (props.maxConcurrency !== undefined) {\n      this.maxConcurrency = props.maxConcurrency;\n    }\n    if (props.maxMobileConcurrency !== undefined) {\n      this.maxMobileConcurrency = props.maxMobileConcurrency;\n    }\n    if (props.reuseWorkers !== undefined) {\n      this.reuseWorkers = props.reuseWorkers;\n    }\n    if (props.onDebug !== undefined) {\n      this.onDebug = props.onDebug;\n    }\n  }\n\n  async startJob(\n    name: string,\n    onMessage: OnMessage = (job, type, data) => job.done(data),\n    onError: OnError = (job, error) => job.error(error)\n  ): Promise<WorkerJob> {\n    // Promise resolves when thread starts working on this job\n    const startPromise = new Promise<WorkerJob>((onStart) => {\n      // Promise resolves when thread completes or fails working on this job\n      this.jobQueue.push({name, onMessage, onError, onStart});\n      return this;\n    });\n    this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    return await startPromise;\n  }\n\n  // PRIVATE\n\n  /**\n   * Starts first queued job if worker is available or can be created\n   * Called when job is started and whenever a worker returns to the idleQueue\n   */\n  async _startQueuedJob(): Promise<void> {\n    if (!this.jobQueue.length) {\n      return;\n    }\n\n    const workerThread = this._getAvailableWorker();\n    if (!workerThread) {\n      return;\n    }\n\n    // We have a worker, dequeue and start the job\n    const queuedJob = this.jobQueue.shift();\n    if (queuedJob) {\n      // Emit a debug event\n      // @ts-ignore\n      this.onDebug({\n        message: 'Starting job',\n        name: queuedJob.name,\n        workerThread,\n        backlog: this.jobQueue.length\n      });\n\n      // Create a worker job to let the app access thread and manage job completion\n      const job = new WorkerJob(queuedJob.name, workerThread);\n\n      // Set the worker thread's message handlers\n      workerThread.onMessage = (data) => queuedJob.onMessage(job, data.type, data.payload);\n      workerThread.onError = (error) => queuedJob.onError(job, error);\n\n      // Resolve the start promise so that the app can start sending messages to worker\n      queuedJob.onStart(job);\n\n      // Wait for the app to signal that the job is complete, then return worker to queue\n      try {\n        await job.result;\n      } finally {\n        this.returnWorkerToQueue(workerThread);\n      }\n    }\n  }\n\n  /**\n   * Returns a worker to the idle queue\n   * Destroys the worker if\n   *  - pool is destroyed\n   *  - if this pool doesn't reuse workers\n   *  - if maxConcurrency has been lowered\n   * @param worker\n   */\n  returnWorkerToQueue(worker: WorkerThread) {\n    const shouldDestroyWorker =\n      this.isDestroyed || !this.reuseWorkers || this.count > this._getMaxConcurrency();\n\n    if (shouldDestroyWorker) {\n      worker.destroy();\n      this.count--;\n    } else {\n      this.idleQueue.push(worker);\n    }\n\n    if (!this.isDestroyed) {\n      this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    }\n  }\n\n  /**\n   * Returns idle worker or creates new worker if maxConcurrency has not been reached\n   */\n  _getAvailableWorker(): WorkerThread | null {\n    // If a worker has completed and returned to the queue, it can be used\n    if (this.idleQueue.length > 0) {\n      return this.idleQueue.shift() || null;\n    }\n\n    // Create fresh worker if we haven't yet created the max amount of worker threads for this worker source\n    if (this.count < this._getMaxConcurrency()) {\n      this.count++;\n      const name = `${this.name.toLowerCase()} (#${this.count} of ${this.maxConcurrency})`;\n      return new WorkerThread({name, source: this.source, url: this.url});\n    }\n\n    // No worker available, have to wait\n    return null;\n  }\n\n  _getMaxConcurrency() {\n    return isMobile ? this.maxMobileConcurrency : this.maxConcurrency;\n  }\n}\n","import type {WorkerMessageData, WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst onMessageWrapperMap = new Map();\n\n/**\n * Type safe wrapper for worker code\n */\nexport default class WorkerBody {\n  /*\n   * (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n   */\n  static set onmessage(onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any) {\n    // eslint-disable-next-line no-restricted-globals\n    self.onmessage = (message) => {\n      if (!isKnownMessage(message)) {\n        return;\n      }\n\n      // Confusingly the message itself also has a 'type' field which is always set to 'message'\n      const {type, payload} = message.data;\n      onMessage(type, payload);\n    };\n  }\n\n  static addEventListener(\n    onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n  ) {\n    let onMessageWrapper = onMessageWrapperMap.get(onMessage);\n\n    if (!onMessageWrapper) {\n      onMessageWrapper = (message) => {\n        if (!isKnownMessage(message)) {\n          return;\n        }\n\n        // Confusingly the message itself also has a 'type' field which is always set to 'message'\n        const {type, payload} = message.data;\n        onMessage(type, payload);\n      };\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    self.addEventListener('message', onMessageWrapper);\n  }\n\n  static removeEventListener(\n    onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n  ) {\n    const onMessageWrapper = onMessageWrapperMap.get(onMessage);\n    onMessageWrapperMap.delete(onMessage);\n    // eslint-disable-next-line no-restricted-globals\n    self.removeEventListener('message', onMessageWrapper);\n  }\n\n  /**\n   * Send a message from a worker to creating thread (main thread)\n   * @param type\n   * @param payload\n   */\n  static postMessage(type: WorkerMessageType, payload: WorkerMessagePayload): void {\n    if (self) {\n      const data: WorkerMessageData = {source: 'loaders.gl', type, payload};\n      const transferList = getTransferList(payload);\n      // eslint-disable-next-line no-restricted-globals\n      // @ts-ignore\n      self.postMessage(data, transferList);\n    }\n  }\n}\n\n// Filter out noise messages sent to workers\nfunction isKnownMessage(message) {\n  const {type, data} = message;\n  return (\n    type === 'message' &&\n    data &&\n    typeof data.source === 'string' &&\n    data.source.startsWith('loaders.gl')\n  );\n}\n","import type {WorkerObject, WorkerOptions} from '../../types';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\nconst NPM_TAG = 'latest';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : NPM_TAG;\n\n/**\n * Gets worker object's name (for debugging in Chrome thread inspector window)\n */\nexport function getWorkerName(worker: WorkerObject): string {\n  const warning = worker.version !== VERSION ? ` (worker-utils@${VERSION})` : '';\n  return `${worker.name}@${worker.version}${warning}`;\n}\n\n/**\n * Generate a worker URL based on worker object and options\n * @returns A URL to one of the following:\n * - a published worker on unpkg CDN\n * - a local test worker\n * - a URL provided by the user in options\n */\nexport function getWorkerURL(worker: WorkerObject, options: WorkerOptions = {}): string {\n  const workerOptions = options[worker.id] || {};\n\n  const workerFile = `${worker.id}-worker.js`;\n\n  let url = workerOptions.workerUrl;\n\n  // If URL is test, generate local loaders.gl url\n  // @ts-ignore _workerType\n  if (options._workerType === 'test') {\n    url = `modules/${worker.module}/dist/${workerFile}`;\n  }\n\n  // If url override is not provided, generate a URL to published version on npm CDN unpkg.com\n  if (!url) {\n    // GENERATE\n    let version = worker.version;\n    // On master we need to load npm alpha releases published with the `beta` tag\n    if (version === 'latest') {\n      // throw new Error('latest worker version specified');\n      version = NPM_TAG;\n    }\n    const versionTag = version ? `@${version}` : '';\n    url = `https://unpkg.com/@loaders.gl/${worker.module}${versionTag}/dist/${workerFile}`;\n  }\n\n  assert(url);\n\n  // Allow user to override location\n  return url;\n}\n","// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\n/**\n * Async Queue\n * - AsyncIterable: An async iterator can be\n * - Values can be pushed onto the queue\n * @example\n *   const asyncQueue = new AsyncQueue();\n *   setTimeout(() => asyncQueue.enqueue('tick'), 1000);\n *   setTimeout(() => asyncQueue.enqueue(new Error('done')), 10000);\n *   for await (const value of asyncQueue) {\n *     console.log(value); // tick\n *   }\n */\nexport default class AsyncQueue<T> {\n  private _values: any[];\n  private _settlers: any[];\n  private _closed: boolean;\n\n  constructor() {\n    this._values = []; // enqueues > dequeues\n    this._settlers = []; // dequeues > enqueues\n    this._closed = false;\n  }\n\n  /** Return an async iterator for this queue */\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  /** Push a new value - the async iterator will yield a promise resolved to this value */\n  push(value: T): void {\n    return this.enqueue(value);\n  }\n\n  /**\n   * Push a new value - the async iterator will yield a promise resolved to this value\n   * Add an error - the async iterator will yield a promise rejected with this value\n   */\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.shift();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.push(value);\n    }\n  }\n\n  /** Indicate that we not waiting for more values - The async iterator will be done */\n  close(): void {\n    while (this._settlers.length > 0) {\n      const settler = this._settlers.shift();\n      settler.resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  // ITERATOR IMPLEMENTATION\n\n  /** @returns a Promise for an IteratorResult */\n  next(): Promise<IteratorResult<T, any>> {\n    // If values in queue, yield the first value\n    if (this._values.length > 0) {\n      const value = this._values.shift();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({done: false, value});\n    }\n\n    // If queue is closed, the iterator is done\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true, value: undefined});\n    }\n\n    // Yield a promise that waits for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.push({resolve, reject});\n    });\n  }\n}\n","/**\n * Throws an `Error` with the optional `message` if `condition` is falsy\n * @note Replacement for the external assert method to reduce bundle size\n */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n","export function getFirstCharacters(data, length = 5): string {\n  if (typeof data === 'string') {\n    return data.slice(0, length);\n  } else if (ArrayBuffer.isView(data)) {\n    // Typed Arrays can have offsets into underlying buffer\n    return getMagicString(data.buffer, data.byteOffset, length);\n  } else if (data instanceof ArrayBuffer) {\n    const byteOffset = 0;\n    return getMagicString(data, byteOffset, length);\n  }\n  return '';\n}\n\nexport function getMagicString(\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number,\n  length: number\n): string {\n  if (arrayBuffer.byteLength <= byteOffset + length) {\n    return '';\n  }\n  const dataView = new DataView(arrayBuffer);\n  let magic = '';\n  for (let i = 0; i < length; i++) {\n    magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n  }\n  return magic;\n}\n","import {TypedArray} from '../../types';\nimport * as node from './buffer-utils';\n\n/**\n * Convert an object to an array buffer\n */\nexport function toArrayBuffer(data: any): ArrayBuffer {\n  // Note: Should be called first, Buffers can trigger other detections below\n  if (node.isBuffer(data)) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    data = node.bufferToArrayBuffer(data);\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return data;\n  }\n\n  // Careful - Node Buffers look like Uint8Arrays (keep after isBuffer)\n  if (ArrayBuffer.isView(data)) {\n    if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n      return data.buffer;\n    }\n    return data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n  }\n\n  if (typeof data === 'string') {\n    const text = data;\n    const uint8Array = new TextEncoder().encode(text);\n    return uint8Array.buffer;\n  }\n\n  // HACK to support Blob polyfill\n  if (data && typeof data === 'object' && data._toArrayBuffer) {\n    return data._toArrayBuffer();\n  }\n\n  throw new Error('toArrayBuffer');\n}\n\n/**\n * compare two binary arrays for equality\n * @param {ArrayBuffer} a\n * @param {ArrayBuffer} b\n * @param {number} byteLength\n */\nexport function compareArrayBuffers(\n  arrayBuffer1: ArrayBuffer,\n  arrayBuffer2: ArrayBuffer,\n  byteLength?: number\n): boolean {\n  byteLength = byteLength || arrayBuffer1.byteLength;\n  if (arrayBuffer1.byteLength < byteLength || arrayBuffer2.byteLength < byteLength) {\n    return false;\n  }\n  const array1 = new Uint8Array(arrayBuffer1);\n  const array2 = new Uint8Array(arrayBuffer2);\n  for (let i = 0; i < array1.length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Concatenate a sequence of ArrayBuffers\n * @return A concatenated ArrayBuffer\n */\nexport function concatenateArrayBuffers(...sources: (ArrayBuffer | Uint8Array)[]): ArrayBuffer {\n  // Make sure all inputs are wrapped in typed arrays\n  const sourceArrays = sources.map((source2) =>\n    source2 instanceof ArrayBuffer ? new Uint8Array(source2) : source2\n  );\n\n  // Get length of all inputs\n  const byteLength = sourceArrays.reduce((length, typedArray) => length + typedArray.byteLength, 0);\n\n  // Allocate array with space for all inputs\n  const result = new Uint8Array(byteLength);\n\n  // Copy the subarrays\n  let offset = 0;\n  for (const sourceArray of sourceArrays) {\n    result.set(sourceArray, offset);\n    offset += sourceArray.byteLength;\n  }\n\n  // We work with ArrayBuffers, discard the typed array wrapper\n  return result.buffer;\n}\n\n/**\n * Concatenate arbitrary count of typed arrays\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n * @param {...*} arrays - list of arrays. All arrays should be the same type\n * @return A concatenated TypedArray\n */\nexport function concatenateTypedArrays<T>(...typedArrays: T[]): T {\n  // @ts-ignore\n  const arrays = typedArrays as TypedArray[];\n  // @ts-ignore\n  const TypedArrayConstructor = (arrays && arrays.length > 1 && arrays[0].constructor) || null;\n  if (!TypedArrayConstructor) {\n    throw new Error(\n      '\"concatenateTypedArrays\" - incorrect quantity of arguments or arguments have incompatible data types'\n    );\n  }\n\n  const sumLength = arrays.reduce((acc, value) => acc + value.length, 0);\n  // @ts-ignore typescript does not like dynamic constructors\n  const result = new TypedArrayConstructor(sumLength);\n  let offset = 0;\n  for (const array of arrays) {\n    result.set(array, offset);\n    offset += array.length;\n  }\n  return result;\n}\n\n/**\n * Copy a view of an ArrayBuffer into new ArrayBuffer with byteOffset = 0\n * @param arrayBuffer\n * @param byteOffset\n * @param byteLength\n */\nexport function sliceArrayBuffer(\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number,\n  byteLength?: number\n): ArrayBuffer {\n  const subArray =\n    byteLength !== undefined\n      ? new Uint8Array(arrayBuffer).subarray(byteOffset, byteOffset + byteLength)\n      : new Uint8Array(arrayBuffer).subarray(byteOffset);\n  const arrayCopy = new Uint8Array(subArray);\n  return arrayCopy.buffer;\n}\n","import * as node from '../node/buffer';\n\n/**\n * Check for Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n */\nexport function isBuffer(value: any): boolean {\n  return value && typeof value === 'object' && value.isBuffer;\n}\n\n/**\n * Converts to Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function toBuffer(data: any): Buffer {\n  return node.toBuffer ? node.toBuffer(data) : data;\n}\n\n/**\n * Converts Node.js `Buffer` to `ArrayBuffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function bufferToArrayBuffer(data: any): ArrayBuffer {\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    return node.toArrayBuffer(data);\n  }\n  return data;\n}\n","import {assert} from '../env-utils/assert';\n\n/**\n * Calculate new size of an arrayBuffer to be aligned to an n-byte boundary\n * This function increases `byteLength` by the minimum delta,\n * allowing the total length to be divided by `padding`\n * @param byteLength\n * @param padding\n */\nexport function padToNBytes(byteLength: number, padding: number): number {\n  assert(byteLength >= 0); // `Incorrect 'byteLength' value: ${byteLength}`\n  assert(padding > 0); // `Incorrect 'padding' value: ${padding}`\n  return (byteLength + (padding - 1)) & ~(padding - 1);\n}\n\n/**\n * Creates a new Uint8Array based on two different ArrayBuffers\n * @param targetBuffer The first buffer.\n * @param sourceBuffer The second buffer.\n * @return The new ArrayBuffer created out of the two.\n */\nexport function copyArrayBuffer(\n  targetBuffer: ArrayBuffer,\n  sourceBuffer: ArrayBuffer,\n  byteOffset: number,\n  byteLength: number = sourceBuffer.byteLength\n): ArrayBuffer {\n  const targetArray = new Uint8Array(targetBuffer, byteOffset, byteLength);\n  const sourceArray = new Uint8Array(sourceBuffer);\n  targetArray.set(sourceArray);\n  return targetBuffer;\n}\n\n/**\n * Copy from source to target at the targetOffset\n *\n * @param source - The data to copy\n * @param target - The destination to copy data into\n * @param targetOffset - The start offset into target to place the copied data\n * @returns the new offset taking into account proper padding\n */\nexport function copyToArray(source: ArrayBuffer | any, target: any, targetOffset: number): number {\n  let sourceArray;\n\n  if (source instanceof ArrayBuffer) {\n    sourceArray = new Uint8Array(source);\n  } else {\n    // Pack buffer onto the big target array\n    //\n    // 'source.data.buffer' could be a view onto a larger buffer.\n    // We MUST use this constructor to ensure the byteOffset and byteLength is\n    // set to correct values from 'source.data' and not the underlying\n    // buffer for target.set() to work properly.\n    const srcByteOffset = source.byteOffset;\n    const srcByteLength = source.byteLength;\n    // In gltf parser it is set as \"arrayBuffer\" instead of \"buffer\"\n    // https://github.com/visgl/loaders.gl/blob/1e3a82a0a65d7b6a67b1e60633453e5edda2960a/modules/gltf/src/lib/parse-gltf.js#L85\n    sourceArray = new Uint8Array(source.buffer || source.arrayBuffer, srcByteOffset, srcByteLength);\n  }\n\n  // Pack buffer onto the big target array\n  target.set(sourceArray, targetOffset);\n\n  return targetOffset + padToNBytes(sourceArray.byteLength, 4);\n}\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n","import {assert} from '../utils/assert';\nimport {isImageTypeSupported, getDefaultImageType} from '../category-api/image-type';\nimport {getImageData} from '../category-api/parsed-image-api';\nimport parseToImage from './parse-to-image';\nimport parseToImageBitmap from './parse-to-image-bitmap';\nimport parseToNodeImage from './parse-to-node-image';\n\n// Parse to platform defined image type (data on node, ImageBitmap or HTMLImage on browser)\n// eslint-disable-next-line complexity\nexport default async function parseImage(arrayBuffer, options, context) {\n  options = options || {};\n  const imageOptions = options.image || {};\n\n  // The user can request a specific output format via `options.image.type`\n  const imageType = imageOptions.type || 'auto';\n\n  const {url} = context || {};\n\n  // Note: For options.image.type === `data`, we may still need to load as `image` or `imagebitmap`\n  const loadType = getLoadableImageType(imageType);\n\n  let image;\n  switch (loadType) {\n    case 'imagebitmap':\n      image = await parseToImageBitmap(arrayBuffer, options, url);\n      break;\n    case 'image':\n      image = await parseToImage(arrayBuffer, options, url);\n      break;\n    case 'data':\n      // Node.js loads imagedata directly\n      image = await parseToNodeImage(arrayBuffer, options);\n      break;\n    default:\n      assert(false);\n  }\n\n  // Browser: if options.image.type === 'data', we can now extract data from the loaded image\n  if (imageType === 'data') {\n    image = getImageData(image);\n  }\n\n  return image;\n}\n\n// Get a loadable image type from image type\nfunction getLoadableImageType(type) {\n  switch (type) {\n    case 'auto':\n    case 'data':\n      // Browser: For image data we need still need to load using an image format\n      // Node: the default image type is `data`.\n      return getDefaultImageType();\n    default:\n      // Throw an error if not supported\n      isImageTypeSupported(type);\n      return type;\n  }\n}\n","import type {ImageTypeEnum} from '../../types';\nimport {global, isBrowser} from '../utils/globals';\n\n// @ts-ignore TS2339: Property does not exist on type\nconst {_parseImageNode} = global;\n\nconst IMAGE_SUPPORTED = typeof Image !== 'undefined'; // NOTE: \"false\" positives if jsdom is installed\nconst IMAGE_BITMAP_SUPPORTED = typeof ImageBitmap !== 'undefined';\nconst NODE_IMAGE_SUPPORTED = Boolean(_parseImageNode);\nconst DATA_SUPPORTED = isBrowser ? true : NODE_IMAGE_SUPPORTED;\n\n/**\n * Checks if a loaders.gl image type is supported\n * @param type image type string\n */\nexport function isImageTypeSupported(type: string): boolean {\n  switch (type) {\n    case 'auto':\n      // Should only ever be false in Node.js, if polyfills have not been installed...\n      return IMAGE_BITMAP_SUPPORTED || IMAGE_SUPPORTED || DATA_SUPPORTED;\n\n    case 'imagebitmap':\n      return IMAGE_BITMAP_SUPPORTED;\n    case 'image':\n      return IMAGE_SUPPORTED;\n    case 'data':\n      return DATA_SUPPORTED;\n\n    default:\n      throw new Error(`@loaders.gl/images: image ${type} not supported in this environment`);\n  }\n}\n\n/**\n * Returns the \"most performant\" supported image type on this platform\n * @returns image type string\n */\nexport function getDefaultImageType(): ImageTypeEnum {\n  if (IMAGE_BITMAP_SUPPORTED) {\n    return 'imagebitmap';\n  }\n  if (IMAGE_SUPPORTED) {\n    return 'image';\n  }\n  if (DATA_SUPPORTED) {\n    return 'data';\n  }\n\n  // This should only happen in Node.js\n  throw new Error('Install \\'@loaders.gl/polyfills\\' to parse images under Node.js');\n}\n","import {getBlobOrSVGDataUrl} from './svg-utils';\n\n// Parses html image from array buffer\nexport default async function parseToImage(arrayBuffer, options, url) {\n  // Note: image parsing requires conversion to Blob (for createObjectURL).\n  // Potentially inefficient for not using `response.blob()` (and for File / Blob inputs)...\n  // But presumably not worth adding 'blob' flag to loader objects?\n\n  const blobOrDataUrl = getBlobOrSVGDataUrl(arrayBuffer, url);\n  const URL = self.URL || self.webkitURL;\n  const objectUrl = typeof blobOrDataUrl !== 'string' && URL.createObjectURL(blobOrDataUrl);\n  try {\n    return await loadToImage(objectUrl || blobOrDataUrl, options);\n  } finally {\n    if (objectUrl) {\n      URL.revokeObjectURL(objectUrl);\n    }\n  }\n}\n\nexport async function loadToImage(url, options) {\n  const image = new Image();\n  image.src = url;\n\n  // The `image.onload()` callback does not guarantee that the image has been decoded\n  // so a main thread \"freeze\" can be incurred when using the image for the first time.\n  // `Image.decode()` returns a promise that completes when image is decoded.\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decode\n  // Note: When calling `img.decode()`, we do not need to wait for `img.onload()`\n  // Note: `HTMLImageElement.decode()` is not available in Edge and IE11\n  if (options.image && options.image.decode && image.decode) {\n    await image.decode();\n    return image;\n  }\n\n  // Create a promise that tracks onload/onerror callbacks\n  return await new Promise((resolve, reject) => {\n    try {\n      image.onload = () => resolve(image);\n      image.onerror = (err) => reject(new Error(`Could not load image ${url}: ${err}`));\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n","// SVG parsing has limitations, e.g:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=606319\n\nconst SVG_DATA_URL_PATTERN = /^data:image\\/svg\\+xml/;\nconst SVG_URL_PATTERN = /\\.svg((\\?|#).*)?$/;\n\nexport function isSVG(url) {\n  return url && (SVG_DATA_URL_PATTERN.test(url) || SVG_URL_PATTERN.test(url));\n}\n\nexport function getBlobOrSVGDataUrl(arrayBuffer, url) {\n  if (isSVG(url)) {\n    // Prepare a properly tagged data URL, and load using normal mechanism\n    const textDecoder = new TextDecoder();\n    let xmlText = textDecoder.decode(arrayBuffer);\n    // TODO Escape in browser to support e.g. Chinese characters\n    try {\n      if (typeof unescape === 'function' && typeof encodeURIComponent === 'function') {\n        xmlText = unescape(encodeURIComponent(xmlText));\n      }\n    } catch (error) {\n      throw new Error((error as Error).message);\n    }\n    // base64 encoding is safer. utf-8 fails in some browsers\n    const src = `data:image/svg+xml;base64,${btoa(xmlText)}`;\n    return src;\n  }\n  return getBlob(arrayBuffer, url);\n}\n\nexport function getBlob(arrayBuffer, url) {\n  if (isSVG(url)) {\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=606319\n    // return new Blob([new Uint8Array(arrayBuffer)], {type: 'image/svg+xml'});\n    throw new Error('SVG cannot be parsed directly to imagebitmap');\n  }\n  // TODO - how to determine mime type? Param? Sniff here?\n  return new Blob([new Uint8Array(arrayBuffer)]); // MIME type not needed?\n}\n","// @ts-nocheck\nconst moduleExports = require('./index');\nconst _global = typeof window === 'undefined' ? global : window;\n_global.loaders = _global.loaders || {};\nmodule.exports = Object.assign(_global.loaders, moduleExports);\n","// Types\nexport type {GPUTextureFormat} from './types';\n\n// Loaders\nexport {BasisLoader, BasisWorkerLoader} from './basis-loader';\nexport {CompressedTextureLoader, CompressedTextureWorkerLoader} from './compressed-texture-loader';\nexport {CrunchLoader} from './crunch-loader';\nexport {NPYLoader, NPYWorkerLoader} from './npy-loader';\n\n// Writers\nexport {CompressedTextureWriter} from './compressed-texture-writer';\n\n// Texture Loading API\nexport {loadImageTexture} from './lib/texture-api/load-image';\nexport {loadImageTextureArray} from './lib/texture-api/load-image-array';\nexport {loadImageTextureCube} from './lib/texture-api/load-image-cube';\n\n// Utilities\nexport {GL as GL_CONSTANTS} from './lib/gl-constants';\n\nexport {getSupportedGPUTextureFormats} from './lib/utils/texture-formats';\n\n// DEPRECATED\nexport {CrunchLoader as CrunchWorkerLoader} from './crunch-loader';\n","import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport parseBasis from './lib/parsers/parse-basis';\n\n/**\n * Worker loader for Basis super compressed textures\n */\nexport const BasisWorkerLoader = {\n  name: 'Basis',\n  id: 'basis',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['basis'],\n  mimeTypes: ['application/octet-stream'],\n  tests: ['sB'],\n  binary: true,\n  options: {\n    basis: {\n      format: 'rgb565', // TODO: auto...\n      libraryPath: 'libs/'\n    }\n  }\n};\n\n/**\n * Loader for Basis super compressed textures\n */\nexport const BasisLoader = {\n  ...BasisWorkerLoader,\n  parse: parseBasis\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckBasisWorkerLoader: Loader = BasisWorkerLoader;\nexport const _TypecheckBasisLoader: LoaderWithParser = BasisLoader;\n","import {loadBasisModule} from './basis-module-loader';\nimport {GL} from '../gl-constants';\n\nconst OutputFormat = {\n  etc1: {basisFormat: 0, compressed: true},\n  etc2: {basisFormat: 1, compressed: true},\n  bc1: {basisFormat: 2, compressed: true, format: GL.COMPRESSED_RGB_S3TC_DXT1_EXT},\n  bc3: {basisFormat: 3, compressed: true, format: GL.COMPRESSED_RGBA_S3TC_DXT5_EXT},\n  bc4: {basisFormat: 4, compressed: true},\n  bc5: {basisFormat: 5, compressed: true},\n  'bc7-m6-opaque-only': {basisFormat: 6, compressed: true},\n  'bc7-m5': {basisFormat: 7, compressed: true},\n  'pvrtc1-4-rgb': {basisFormat: 8, compressed: true},\n  'pvrtc1-4-rgba': {basisFormat: 9, compressed: true},\n  'astc-4x4': {basisFormat: 10, compressed: true},\n  'atc-rgb': {basisFormat: 11, compressed: true},\n  'atc-rgba-interpolated-alpha': {basisFormat: 12, compressed: true},\n  rgba32: {basisFormat: 13, compressed: false},\n  rgb565: {basisFormat: 14, compressed: false},\n  bgr565: {basisFormat: 15, compressed: false},\n  rgba4444: {basisFormat: 16, compressed: false}\n};\n\nexport default async function parseBasis(data, options) {\n  const {BasisFile} = await loadBasisModule(options);\n  const basisFile = new BasisFile(new Uint8Array(data));\n\n  try {\n    if (!basisFile.startTranscoding()) {\n      return null;\n    }\n\n    const imageCount = basisFile.getNumImages();\n    const images = [];\n\n    for (let imageIndex = 0; imageIndex < imageCount; imageIndex++) {\n      const levelsCount = basisFile.getNumLevels(imageIndex);\n      const levels = [];\n\n      for (let levelIndex = 0; levelIndex < levelsCount; levelIndex++) {\n        levels.push(transcodeImage(basisFile, imageIndex, levelIndex, options));\n      }\n\n      images.push(levels);\n    }\n\n    return images;\n  } finally {\n    basisFile.close();\n    basisFile.delete();\n  }\n}\n\nfunction getBasisOptions(options, hasAlpha) {\n  let format = options && options.basis && options.basis.format;\n  if (typeof format === 'object') {\n    format = hasAlpha ? format.alpha : format.noAlpha;\n  }\n\n  format = format.toLowerCase();\n  return OutputFormat[format];\n}\n\nfunction transcodeImage(basisFile, imageIndex, levelIndex, options) {\n  const width = basisFile.getImageWidth(imageIndex, levelIndex);\n  const height = basisFile.getImageHeight(imageIndex, levelIndex);\n\n  // See https://github.com/BinomialLLC/basis_universal/pull/83\n  const hasAlpha = basisFile.getHasAlpha(/* imageIndex, levelIndex */);\n\n  // Check options for output format etc\n  const {compressed, format, basisFormat} = getBasisOptions(options, hasAlpha);\n\n  const decodedSize = basisFile.getImageTranscodedSizeInBytes(imageIndex, levelIndex, basisFormat);\n  const decodedData = new Uint8Array(decodedSize);\n\n  if (!basisFile.transcodeImage(decodedData, imageIndex, levelIndex, basisFormat, 0, 0)) {\n    return null;\n  }\n\n  return {\n    // standard loaders.gl image category payload\n    width,\n    height,\n    data: decodedData,\n    compressed,\n\n    // Additional fields\n    // Add levelSize field.\n    hasAlpha,\n    format\n  };\n}\n","import {loadLibrary} from '@loaders.gl/worker-utils';\n\nlet loadBasisPromise;\n\nexport async function loadBasisModule(options) {\n  const modules = options.modules || {};\n  if (modules.basis) {\n    return modules.basis;\n  }\n\n  loadBasisPromise = loadBasisPromise || loadBasis(options);\n  return await loadBasisPromise;\n}\n\nasync function loadBasis(options) {\n  let BASIS = null;\n  let wasmBinary = null;\n\n  [BASIS, wasmBinary] = await Promise.all([\n    await loadLibrary('basis_transcoder.js', 'textures', options),\n    await loadLibrary('basis_transcoder.wasm', 'textures', options)\n  ]);\n\n  // Depends on how import happened...\n  // @ts-ignore TS2339: Property does not exist on type\n  BASIS = BASIS || globalThis.BASIS;\n  return await initializeBasisModule(BASIS, wasmBinary);\n}\n\nfunction initializeBasisModule(BasisModule, wasmBinary) {\n  const options: {wasmBinary?} = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    // if you try to return BasisModule the browser crashes!\n    BasisModule(options).then((module) => {\n      const {BasisFile, initializeBasis} = module;\n      initializeBasis();\n      resolve({BasisFile});\n    });\n  });\n}\n","import {assert} from '../env-utils/assert';\n\nconst workerURLCache = new Map();\n\n/**\n * Creates a loadable URL from worker source or URL\n * that can be used to create `Worker` instances.\n * Due to CORS issues it may be necessary to wrap a URL in a small importScripts\n * @param props\n * @param props.source Worker source\n * @param props.url Worker URL\n * @returns loadable url\n */\nexport function getLoadableWorkerURL(props: {source?: string; url?: string}) {\n  assert((props.source && !props.url) || (!props.source && props.url)); // Either source or url must be defined\n\n  let workerURL = workerURLCache.get(props.source || props.url);\n  if (!workerURL) {\n    // Differentiate worker urls from worker source code\n    if (props.url) {\n      workerURL = getLoadableWorkerURLFromURL(props.url);\n      workerURLCache.set(props.url, workerURL);\n    }\n\n    if (props.source) {\n      workerURL = getLoadableWorkerURLFromSource(props.source);\n      workerURLCache.set(props.source, workerURL);\n    }\n  }\n\n  assert(workerURL);\n  return workerURL;\n}\n\n/**\n * Build a loadable worker URL from worker URL\n * @param url\n * @returns loadable URL\n */\nfunction getLoadableWorkerURLFromURL(url: string): string {\n  // A local script url, we can use it to initialize a Worker directly\n  if (!url.startsWith('http')) {\n    return url;\n  }\n\n  // A remote script, we need to use `importScripts` to load from different origin\n  const workerSource = buildScriptSource(url);\n  return getLoadableWorkerURLFromSource(workerSource);\n}\n\n/**\n * Build a loadable worker URL from worker source\n * @param workerSource\n * @returns loadable url\n */\nfunction getLoadableWorkerURLFromSource(workerSource: string): string {\n  // NOTE: webworkify was previously used\n  // const blob = webworkify(workerSource, {bare: true});\n  const blob = new Blob([workerSource], {type: 'application/javascript'});\n  return URL.createObjectURL(blob);\n}\n\n/**\n * Per spec, worker cannot be initialized with a script from a different origin\n * However a local worker script can still import scripts from other origins,\n * so we simply build a wrapper script.\n *\n * @param workerUrl\n * @returns source\n */\nfunction buildScriptSource(workerUrl: string): string {\n  return `\\\ntry {\n  importScripts('${workerUrl}');\n} catch (error) {\n  console.error(error);\n  throw error;\n}`;\n}\n","import type {\n  WorkerObject,\n  WorkerOptions,\n  WorkerContext,\n  WorkerMessageType,\n  WorkerMessagePayload\n} from '../../types';\nimport type WorkerJob from '../worker-farm/worker-job';\nimport WorkerFarm from '../worker-farm/worker-farm';\nimport {removeNontransferableOptions} from '../worker-utils/remove-nontransferable-options';\nimport {getWorkerURL, getWorkerName} from './get-worker-url';\n\ntype ProcessOnWorkerOptions = WorkerOptions & {\n  jobName?: string;\n  [key: string]: any;\n};\n\n/**\n * Determines if we can parse with worker\n * @param loader\n * @param data\n * @param options\n */\nexport function canProcessOnWorker(worker: WorkerObject, options?: WorkerOptions) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n\n  return worker.worker && options?.worker;\n}\n\n/**\n * This function expects that the worker thread sends certain messages,\n * Creating such a worker can be automated if the worker is wrapper by a call to\n * createWorker in @loaders.gl/worker-utils.\n */\nexport async function processOnWorker(\n  worker: WorkerObject,\n  data: any,\n  options: ProcessOnWorkerOptions = {},\n  context: WorkerContext = {}\n): Promise<any> {\n  const name = getWorkerName(worker);\n  const url = getWorkerURL(worker, options);\n\n  const workerFarm = WorkerFarm.getWorkerFarm(options);\n  const workerPool = workerFarm.getWorkerPool({name, url});\n\n  const jobName = options.jobName || worker.name;\n  const job = await workerPool.startJob(\n    jobName,\n    // eslint-disable-next-line\n    onMessage.bind(null, context)\n  );\n\n  // Kick off the processing in the worker\n  const transferableOptions = removeNontransferableOptions(options);\n  job.postMessage('process', {input: data, options: transferableOptions});\n\n  const result = await job.result;\n  return result.result;\n}\n\n/**\n * Job completes when we receive the result\n * @param job\n * @param message\n */\nasync function onMessage(\n  context: WorkerContext,\n  job: WorkerJob,\n  type: WorkerMessageType,\n  payload: WorkerMessagePayload\n) {\n  switch (type) {\n    case 'done':\n      // Worker is done\n      job.done(payload);\n      break;\n\n    case 'error':\n      // Worker encountered an error\n      job.error(payload.error);\n      break;\n\n    case 'process':\n      // Worker is asking for us (main thread) to process something\n      const {id, input, options} = payload;\n      try {\n        if (!context.process) {\n          job.postMessage('error', {id, error: 'Worker not set up to process on main thread'});\n          return;\n        }\n        const result = await context.process(input, options);\n        job.postMessage('done', {id, result});\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'unknown error';\n        job.postMessage('error', {id, error: message});\n      }\n      break;\n\n    default:\n      // eslint-disable-next-line\n      console.warn(`process-on-worker: unknown message ${type}`);\n  }\n}\n","/**\n * Safely stringify JSON (drop non serializable values like functions and regexps)\n * @param value\n */\nexport function removeNontransferableOptions(object: object): object {\n  // options.log object contains functions which cannot be transferred\n  // TODO - decide how to handle logging on workers\n  // TODO - warn if options stringification is long\n  return JSON.parse(stringifyJSON(object));\n}\n\nfunction stringifyJSON(v) {\n  const cache = new Set();\n  return JSON.stringify(v, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.has(value)) {\n        // Circular reference found\n        try {\n          // If this value does not reference a parent it can be deduped\n          return JSON.parse(JSON.stringify(value));\n        } catch (err) {\n          // discard key if value cannot be deduped\n          return undefined;\n        }\n      }\n      // Store value in our set\n      cache.add(value);\n    }\n    return value;\n  });\n}\n","import type {\n  WorkerMessageType,\n  WorkerMessagePayload,\n  WorkerContext,\n  Process,\n  ProcessInBatches\n} from '../../types';\nimport AsyncQueue from '../async-queue/async-queue';\nimport WorkerBody from '../worker-farm/worker-body';\n// import {validateWorkerVersion} from './validate-worker-version';\n\n/** Counter for jobs */\nlet requestId = 0;\nlet inputBatches;\nlet options;\n\nexport type ProcessOnMainThread = (data: any, options?: {[key: string]: any}, context?) => any;\n\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n */\nexport function createWorker(process: Process, processInBatches?: ProcessInBatches): void {\n  // Check that we are actually in a worker thread\n  if (typeof self === 'undefined') {\n    return;\n  }\n\n  const context: WorkerContext = {\n    process: processOnMainThread\n  };\n\n  // eslint-disable-next-line complexity\n  WorkerBody.onmessage = async (type: WorkerMessageType, payload: WorkerMessagePayload) => {\n    try {\n      switch (type) {\n        case 'process':\n          if (!process) {\n            throw new Error('Worker does not support atomic processing');\n          }\n          const result = await process(payload.input, payload.options || {}, context);\n          WorkerBody.postMessage('done', {result});\n          break;\n\n        case 'process-in-batches':\n          if (!processInBatches) {\n            throw new Error('Worker does not support batched processing');\n          }\n          inputBatches = new AsyncQueue();\n          options = payload.options || {};\n          const resultIterator = processInBatches(inputBatches, options, context?.processInBatches);\n          for await (const batch of resultIterator) {\n            WorkerBody.postMessage('output-batch', {result: batch});\n          }\n          WorkerBody.postMessage('done', {});\n          break;\n\n        case 'input-batch':\n          inputBatches.push(payload.input);\n          break;\n\n        case 'input-done':\n          inputBatches.close();\n          break;\n\n        default:\n      }\n    } catch (error) {\n      const message = error instanceof Error ? error.message : '';\n      WorkerBody.postMessage('error', {error: message});\n    }\n  };\n}\n\nfunction processOnMainThread(arrayBuffer, options = {}) {\n  return new Promise((resolve, reject) => {\n    const id = requestId++;\n\n    /**\n     */\n    const onMessage = (type, payload) => {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n\n    // Ask the main thread to decode data\n    const payload = {id, input: arrayBuffer, options};\n    WorkerBody.postMessage('process', payload);\n  });\n}\n","import type {WorkerObject} from '../../types';\nimport {assert} from '../env-utils/assert';\nimport {VERSION} from '../env-utils/version';\n\n/**\n * Check if worker is compatible with this library version\n * @param worker\n * @param libVersion\n * @returns `true` if the two versions are compatible\n */\nexport function validateWorkerVersion(\n  worker: WorkerObject,\n  coreVersion: string = VERSION\n): boolean {\n  assert(worker, 'no worker provided');\n\n  const workerVersion = worker.version;\n  if (!coreVersion || !workerVersion) {\n    return false;\n  }\n\n  // TODO enable when fix the __version__ injection\n  // const coreVersions = parseVersion(coreVersion);\n  // const workerVersions = parseVersion(workerVersion);\n  // assert(\n  //   coreVersion.major === workerVersion.major && coreVersion.minor <= workerVersion.minor,\n  //   `worker: ${worker.name} is not compatible. ${coreVersion.major}.${\n  //     coreVersion.minor\n  //   }+ is required.`\n  // );\n\n  return true;\n}\n\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction parseVersion(version) {\n  const parts = version.split('.').map(Number);\n  return {major: parts[0], minor: parts[1]};\n}\n","/* global importScripts */\nimport {global, isBrowser, isWorker} from '../env-utils/globals';\nimport * as node from '../node/require-utils.node';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\n// TODO - unpkg.com doesn't seem to have a `latest` specifier for alpha releases...\nconst LATEST = 'beta';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : LATEST;\n\nconst loadLibraryPromises = {}; // promises\n\n/**\n * Dynamically loads a library (\"module\")\n *\n * - wasm library: Array buffer is returned\n * - js library: Parse JS is returned\n *\n * Method depends on environment\n * - browser - script element is created and installed on document\n * - worker - eval is called on global context\n * - node - file is required\n *\n * @param libraryUrl\n * @param moduleName\n * @param options\n */\nexport async function loadLibrary(\n  libraryUrl: string,\n  moduleName: string | null = null,\n  options: object = {}\n): Promise<any> {\n  if (moduleName) {\n    libraryUrl = getLibraryUrl(libraryUrl, moduleName, options);\n  }\n\n  // Ensure libraries are only loaded once\n  loadLibraryPromises[libraryUrl] =\n    loadLibraryPromises[libraryUrl] || loadLibraryFromFile(libraryUrl);\n  return await loadLibraryPromises[libraryUrl];\n}\n\n// TODO - sort out how to resolve paths for main/worker and dev/prod\nexport function getLibraryUrl(library, moduleName?: string, options?): string {\n  // Check if already a URL\n  if (library.startsWith('http')) {\n    return library;\n  }\n\n  // Allow application to import and supply libraries through `options.modules`\n  const modules = options.modules || {};\n  if (modules[library]) {\n    return modules[library];\n  }\n\n  // Load from local files, not from CDN scripts in Node.js\n  // TODO - needs to locate the modules directory when installed!\n  if (!isBrowser) {\n    return `modules/${moduleName}/dist/libs/${library}`;\n  }\n\n  // In browser, load from external scripts\n  if (options.CDN) {\n    assert(options.CDN.startsWith('http'));\n    return `${options.CDN}/${moduleName}@${VERSION}/dist/libs/${library}`;\n  }\n\n  // TODO - loading inside workers requires paths relative to worker script location...\n  if (isWorker) {\n    return `../src/libs/${library}`;\n  }\n\n  return `modules/${moduleName}/src/libs/${library}`;\n}\n\nasync function loadLibraryFromFile(libraryUrl) {\n  if (libraryUrl.endsWith('wasm')) {\n    const response = await fetch(libraryUrl);\n    return await response.arrayBuffer();\n  }\n\n  if (!isBrowser) {\n    return node.requireFromFile && (await node.requireFromFile(libraryUrl));\n  }\n  if (isWorker) {\n    return importScripts(libraryUrl);\n  }\n  // TODO - fix - should be more secure than string parsing since observes CORS\n  // if (isBrowser) {\n  //   return await loadScriptFromFile(libraryUrl);\n  // }\n\n  const response = await fetch(libraryUrl);\n  const scriptSource = await response.text();\n  return loadLibraryFromString(scriptSource, libraryUrl);\n}\n\n/*\nasync function loadScriptFromFile(libraryUrl) {\n  const script = document.createElement('script');\n  script.src = libraryUrl;\n  return await new Promise((resolve, reject) => {\n    script.onload = data => {\n      resolve(data);\n    };\n    script.onerror = reject;\n  });\n}\n*/\n\n// TODO - Needs security audit...\n//  - Raw eval call\n//  - Potentially bypasses CORS\n// Upside is that this separates fetching and parsing\n// we could create a`LibraryLoader` or`ModuleLoader`\nfunction loadLibraryFromString(scriptSource, id) {\n  if (!isBrowser) {\n    return node.requireFromString && node.requireFromString(scriptSource, id);\n  }\n\n  if (isWorker) {\n    // Use lvalue trick to make eval run in global scope\n    eval.call(global, scriptSource); // eslint-disable-line no-eval\n    // https://stackoverflow.com/questions/9107240/1-evalthis-vs-evalthis-in-javascript\n    // http://perfectionkills.com/global-eval-what-are-the-options/\n    return null;\n  }\n\n  const script = document.createElement('script');\n  script.id = id;\n  // most browsers like a separate text node but some throw an error. The second method covers those.\n  try {\n    script.appendChild(document.createTextNode(scriptSource));\n  } catch (e) {\n    script.text = scriptSource;\n  }\n  document.body.appendChild(script);\n  return null;\n}\n\n// TODO - technique for module injection into worker, from THREE.DracoLoader...\n/*\nfunction combineWorkerWithLibrary(worker, jsContent) {\n  var fn = wWorker.toString();\n  var body = [\n    '// injected',\n    jsContent,\n    '',\n    '// worker',\n    fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))\n  ].join('\\n');\n  this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n}\n*/\n","import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {parseCompressedTexture} from './lib/parsers/parse-compressed-texture';\n\n/**\n * Worker Loader for KTX, DDS, and PVR texture container formats\n */\nexport const CompressedTextureWorkerLoader = {\n  name: 'Texture Containers',\n  id: 'compressed-texture',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: [\n    'ktx',\n    'ktx2',\n    'dds', // WEBGL_compressed_texture_s3tc, WEBGL_compressed_texture_atc\n    'pvr' // WEBGL_compressed_texture_pvrtc\n  ],\n  mimeTypes: [\n    'image/ktx2',\n    'image/ktx',\n    'image/vnd-ms.dds',\n    'image/x-dds',\n    'application/octet-stream'\n  ],\n  binary: true,\n  options: {\n    'compressed-texture': {\n      libraryPath: 'libs/'\n    }\n  }\n};\n\n/**\n * Loader for KTX, DDS, and PVR texture container formats\n */\nexport const CompressedTextureLoader = {\n  ...CompressedTextureWorkerLoader,\n  parse: async (arrayBuffer) => parseCompressedTexture(arrayBuffer)\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckCompressedTextureWorkerLoader: Loader = CompressedTextureWorkerLoader;\nexport const _TypecheckCompressedTextureLoader: LoaderWithParser = CompressedTextureLoader;\n","import type {TextureLevel} from '../../types';\nimport {isKTX, parseKTX} from './parse-ktx';\nimport {isDDS, parseDDS} from './parse-dds';\nimport {isPVR, parsePVR} from './parse-pvr';\n\n/**\n * Deduces format and parses compressed texture loaded in ArrayBuffer\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n */\nexport function parseCompressedTexture(data: ArrayBuffer): TextureLevel[] {\n  if (isKTX(data)) {\n    // TODO: remove @ts-ignore when `parseKTX` output is normalized to loaders.gl texture format\n    // @ts-ignore\n    return parseKTX(data);\n  }\n  if (isDDS(data)) {\n    return parseDDS(data);\n  }\n  if (isPVR(data)) {\n    return parsePVR(data);\n  }\n  throw new Error('Texture container format not recognized');\n}\n","import {read} from 'ktx-parse';\nimport {extractMipmapImages} from '../utils/extract-mipmap-images';\nimport {mapVkFormatToWebGL} from '../utils/ktx-format-helper';\n\nconst KTX2_ID = [\n  // '´', 'K', 'T', 'X', '2', '0', 'ª', '\\r', '\\n', '\\x1A', '\\n'\n  0xab, 0x4b, 0x54, 0x58, 0x20, 0x32, 0x30, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a\n];\n\n// eslint-disable-next-line complexity\nexport function isKTX(data) {\n  const id = new Uint8Array(data.buffer || data, data.byteOffset || 0, KTX2_ID.length);\n  const notKTX =\n    id[0] !== KTX2_ID[0] || // '´'\n    id[1] !== KTX2_ID[1] || // 'K'\n    id[2] !== KTX2_ID[2] || // 'T'\n    id[3] !== KTX2_ID[3] || // 'X'\n    id[4] !== KTX2_ID[4] || // ' '\n    id[5] !== KTX2_ID[5] || // '2'\n    id[6] !== KTX2_ID[6] || // '0'\n    id[7] !== KTX2_ID[7] || // 'ª'\n    id[8] !== KTX2_ID[8] || // '\\r'\n    id[9] !== KTX2_ID[9] || // '\\n'\n    id[10] !== KTX2_ID[10] || // '\\x1A'\n    id[11] !== KTX2_ID[11]; // '\\n'\n\n  return !notKTX;\n}\n\nexport function parseKTX(arrayBuffer) {\n  const uint8Array = new Uint8Array(arrayBuffer);\n  const ktx = read(uint8Array);\n  const mipMapLevels = Math.max(1, ktx.levels.length);\n  const width = ktx.pixelWidth;\n  const height = ktx.pixelHeight;\n  const internalFormat = mapVkFormatToWebGL(ktx.vkFormat);\n\n  return extractMipmapImages(ktx.levels, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction: (level) => level.uncompressedByteLength,\n    internalFormat\n  });\n}\n","const t=new Uint8Array([0]),e=[171,75,84,88,32,50,48,187,13,10,26,10];var n,i,s,a,r,o,l,f;!function(t){t[t.NONE=0]=\"NONE\",t[t.BASISLZ=1]=\"BASISLZ\",t[t.ZSTD=2]=\"ZSTD\",t[t.ZLIB=3]=\"ZLIB\"}(n||(n={})),function(t){t[t.BASICFORMAT=0]=\"BASICFORMAT\"}(i||(i={})),function(t){t[t.UNSPECIFIED=0]=\"UNSPECIFIED\",t[t.ETC1S=163]=\"ETC1S\",t[t.UASTC=166]=\"UASTC\"}(s||(s={})),function(t){t[t.UNSPECIFIED=0]=\"UNSPECIFIED\",t[t.SRGB=1]=\"SRGB\"}(a||(a={})),function(t){t[t.UNSPECIFIED=0]=\"UNSPECIFIED\",t[t.LINEAR=1]=\"LINEAR\",t[t.SRGB=2]=\"SRGB\",t[t.ITU=3]=\"ITU\",t[t.NTSC=4]=\"NTSC\",t[t.SLOG=5]=\"SLOG\",t[t.SLOG2=6]=\"SLOG2\"}(r||(r={})),function(t){t[t.ALPHA_STRAIGHT=0]=\"ALPHA_STRAIGHT\",t[t.ALPHA_PREMULTIPLIED=1]=\"ALPHA_PREMULTIPLIED\"}(o||(o={})),function(t){t[t.RGB=0]=\"RGB\",t[t.RRR=3]=\"RRR\",t[t.GGG=4]=\"GGG\",t[t.AAA=15]=\"AAA\"}(l||(l={})),function(t){t[t.RGB=0]=\"RGB\",t[t.RGBA=3]=\"RGBA\",t[t.RRR=4]=\"RRR\",t[t.RRRG=5]=\"RRRG\"}(f||(f={}));class U{constructor(){this.vkFormat=0,this.typeSize=1,this.pixelWidth=0,this.pixelHeight=0,this.pixelDepth=0,this.layerCount=0,this.faceCount=1,this.supercompressionScheme=n.NONE,this.levels=[],this.dataFormatDescriptor=[{vendorId:0,descriptorType:i.BASICFORMAT,versionNumber:2,descriptorBlockSize:40,colorModel:s.UNSPECIFIED,colorPrimaries:a.SRGB,transferFunction:a.SRGB,flags:o.ALPHA_STRAIGHT,texelBlockDimension:{x:4,y:4,z:1,w:1},bytesPlane:[],samples:[]}],this.keyValue={},this.globalData=null}}class c{constructor(t,e,n,i){this._dataView=new DataView(t.buffer,t.byteOffset+e,n),this._littleEndian=i,this._offset=0}_nextUint8(){const t=this._dataView.getUint8(this._offset);return this._offset+=1,t}_nextUint16(){const t=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,t}_nextUint32(){const t=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint64(){const t=this._dataView.getUint32(this._offset,this._littleEndian)+2**32*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,t}_skip(t){return this._offset+=t,this}_scan(t,e=0){const n=this._offset;let i=0;for(;this._dataView.getUint8(this._offset)!==e&&i<t;)i++,this._offset++;return i<t&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+n,i)}}function h(t){return\"undefined\"!=typeof TextEncoder?(new TextEncoder).encode(t):Buffer.from(t)}function _(t){return\"undefined\"!=typeof TextDecoder?(new TextDecoder).decode(t):Buffer.from(t).toString(\"utf8\")}function g(t){let e=0;for(const n of t)e+=n.byteLength;const n=new Uint8Array(e);let i=0;for(const e of t)n.set(new Uint8Array(e),i),i+=e.byteLength;return n}function p(t){const n=new Uint8Array(t.buffer,t.byteOffset,e.length);if(n[0]!==e[0]||n[1]!==e[1]||n[2]!==e[2]||n[3]!==e[3]||n[4]!==e[4]||n[5]!==e[5]||n[6]!==e[6]||n[7]!==e[7]||n[8]!==e[8]||n[9]!==e[9]||n[10]!==e[10]||n[11]!==e[11])throw new Error(\"Missing KTX 2.0 identifier.\");const i=new U,s=17*Uint32Array.BYTES_PER_ELEMENT,a=new c(t,e.length,s,!0);i.vkFormat=a._nextUint32(),i.typeSize=a._nextUint32(),i.pixelWidth=a._nextUint32(),i.pixelHeight=a._nextUint32(),i.pixelDepth=a._nextUint32(),i.layerCount=a._nextUint32(),i.faceCount=a._nextUint32();const r=a._nextUint32();i.supercompressionScheme=a._nextUint32();const o=a._nextUint32(),l=a._nextUint32(),f=a._nextUint32(),h=a._nextUint32(),g=a._nextUint64(),p=a._nextUint64(),x=new c(t,e.length+s,3*r*8,!0);for(let e=0;e<r;e++)i.levels.push({levelData:new Uint8Array(t.buffer,t.byteOffset+x._nextUint64(),x._nextUint64()),uncompressedByteLength:x._nextUint64()});const u=new c(t,o,l,!0),y={vendorId:u._skip(4)._nextUint16(),descriptorType:u._nextUint16(),versionNumber:u._nextUint16(),descriptorBlockSize:u._nextUint16(),colorModel:u._nextUint8(),colorPrimaries:u._nextUint8(),transferFunction:u._nextUint8(),flags:u._nextUint8(),texelBlockDimension:{x:u._nextUint8()+1,y:u._nextUint8()+1,z:u._nextUint8()+1,w:u._nextUint8()+1},bytesPlane:[u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8()],samples:[]},D=(y.descriptorBlockSize/4-6)/4;for(let t=0;t<D;t++)y.samples[t]={bitOffset:u._nextUint16(),bitLength:u._nextUint8(),channelID:u._nextUint8(),samplePosition:[u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8()],sampleLower:u._nextUint32(),sampleUpper:u._nextUint32()};i.dataFormatDescriptor.length=0,i.dataFormatDescriptor.push(y);const b=new c(t,f,h,!0);for(;b._offset<h;){const t=b._nextUint32(),e=b._scan(t),n=_(e),s=b._scan(t-e.byteLength);i.keyValue[n]=n.match(/^ktx/i)?_(s):s,t%4&&b._skip(4-t%4)}if(p<=0)return i;const d=new c(t,g,p,!0),B=d._nextUint16(),w=d._nextUint16(),A=d._nextUint32(),S=d._nextUint32(),m=d._nextUint32(),L=d._nextUint32(),I=[];for(let t=0;t<r;t++)I.push({imageFlags:d._nextUint32(),rgbSliceByteOffset:d._nextUint32(),rgbSliceByteLength:d._nextUint32(),alphaSliceByteOffset:d._nextUint32(),alphaSliceByteLength:d._nextUint32()});const R=g+d._offset,E=R+A,T=E+S,O=T+m,P=new Uint8Array(t.buffer,t.byteOffset+R,A),C=new Uint8Array(t.buffer,t.byteOffset+E,S),F=new Uint8Array(t.buffer,t.byteOffset+T,m),G=new Uint8Array(t.buffer,t.byteOffset+O,L);return i.globalData={endpointCount:B,selectorCount:w,imageDescs:I,endpointsData:P,selectorsData:C,tablesData:F,extendedData:G},i}function x(){return(x=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}const u={keepWriter:!1};function y(n,s={}){s=x({},u,s);let a=new ArrayBuffer(0);if(n.globalData){const t=new ArrayBuffer(20+5*n.globalData.imageDescs.length*4),e=new DataView(t);e.setUint16(0,n.globalData.endpointCount,!0),e.setUint16(2,n.globalData.selectorCount,!0),e.setUint32(4,n.globalData.endpointsData.byteLength,!0),e.setUint32(8,n.globalData.selectorsData.byteLength,!0),e.setUint32(12,n.globalData.tablesData.byteLength,!0),e.setUint32(16,n.globalData.extendedData.byteLength,!0);for(let t=0;t<n.globalData.imageDescs.length;t++){const i=n.globalData.imageDescs[t];e.setUint32(20+5*t*4+0,i.imageFlags,!0),e.setUint32(20+5*t*4+4,i.rgbSliceByteOffset,!0),e.setUint32(20+5*t*4+8,i.rgbSliceByteLength,!0),e.setUint32(20+5*t*4+12,i.alphaSliceByteOffset,!0),e.setUint32(20+5*t*4+16,i.alphaSliceByteLength,!0)}a=g([t,n.globalData.endpointsData,n.globalData.selectorsData,n.globalData.tablesData,n.globalData.extendedData])}const r=[];let o=n.keyValue;s.keepWriter||(o=x({},n.keyValue,{KTXwriter:\"KTX-Parse v0.0.4\"}));for(const e in o){const n=o[e],i=h(e),s=\"string\"==typeof n?h(n):n,a=i.byteLength+1+s.byteLength+1,l=a%4?4-a%4:0;r.push(g([new Uint32Array([a]),i,t,s,t,new Uint8Array(l).fill(0)]))}const l=g(r),f=new ArrayBuffer(44),U=new DataView(f);if(1!==n.dataFormatDescriptor.length||n.dataFormatDescriptor[0].descriptorType!==i.BASICFORMAT)throw new Error(\"Only BASICFORMAT Data Format Descriptor output supported.\");const c=n.dataFormatDescriptor[0];U.setUint32(0,44,!0),U.setUint16(4,c.vendorId,!0),U.setUint16(6,c.descriptorType,!0),U.setUint16(8,c.versionNumber,!0),U.setUint16(10,c.descriptorBlockSize,!0),U.setUint8(12,c.colorModel),U.setUint8(13,c.colorPrimaries),U.setUint8(14,c.transferFunction),U.setUint8(15,c.flags),U.setUint8(16,c.texelBlockDimension.x-1),U.setUint8(17,c.texelBlockDimension.y-1),U.setUint8(18,c.texelBlockDimension.z-1),U.setUint8(19,c.texelBlockDimension.w-1);for(let t=0;t<8;t++)U.setUint8(20+t,c.bytesPlane[t]);for(let t=0;t<c.samples.length;t++){const e=c.samples[t],n=28+16*t;U.setUint16(n+0,e.bitOffset,!0),U.setUint8(n+2,e.bitLength),U.setUint8(n+3,e.channelID),U.setUint8(n+4,e.samplePosition[0]),U.setUint8(n+5,e.samplePosition[1]),U.setUint8(n+6,e.samplePosition[2]),U.setUint8(n+7,e.samplePosition[3]),U.setUint32(n+8,e.sampleLower,!0),U.setUint32(n+12,e.sampleUpper,!0)}const _=e.length+68+3*n.levels.length*8,p=_+f.byteLength;let y=p+l.byteLength;y%8&&(y+=8-y%8);const D=[],b=new DataView(new ArrayBuffer(3*n.levels.length*8));let d=y+a.byteLength;for(let t=0;t<n.levels.length;t++){const e=n.levels[t];D.push(e.levelData),b.setBigUint64(24*t+0,BigInt(d),!0),b.setBigUint64(24*t+8,BigInt(e.levelData.byteLength),!0),b.setBigUint64(24*t+16,BigInt(e.uncompressedByteLength),!0),d+=e.levelData.byteLength}const B=new ArrayBuffer(68),w=new DataView(B);return w.setUint32(0,n.vkFormat,!0),w.setUint32(4,n.typeSize,!0),w.setUint32(8,n.pixelWidth,!0),w.setUint32(12,n.pixelHeight,!0),w.setUint32(16,n.pixelDepth,!0),w.setUint32(20,n.layerCount,!0),w.setUint32(24,n.faceCount,!0),w.setUint32(28,n.levels.length,!0),w.setUint32(32,n.supercompressionScheme,!0),w.setUint32(36,_,!0),w.setUint32(40,f.byteLength,!0),w.setUint32(44,p,!0),w.setUint32(48,l.byteLength,!0),w.setBigUint64(52,BigInt(y),!0),w.setBigUint64(60,BigInt(a.byteLength),!0),new Uint8Array(g([new Uint8Array(e).buffer,B,b.buffer,f,l,new ArrayBuffer(y-(p+l.byteLength)),a,...D]))}export{U as KTX2Container,p as read,y as write};\n//# sourceMappingURL=ktx-parse.modern.js.map\n","import {GL} from '../gl-constants';\n\nconst VULKAN_TO_WEBGL_FORMAT_MAP = {\n  131: GL.COMPRESSED_RGB_S3TC_DXT1_EXT,\n  132: GL.COMPRESSED_SRGB_S3TC_DXT1_EXT,\n  133: GL.COMPRESSED_RGBA_S3TC_DXT1_EXT,\n  134: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,\n  135: GL.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n  136: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,\n  137: GL.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n  138: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,\n  139: GL.COMPRESSED_RED_RGTC1_EXT,\n  140: GL.COMPRESSED_SIGNED_RED_RGTC1_EXT,\n  141: GL.COMPRESSED_RED_GREEN_RGTC2_EXT,\n  142: GL.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT,\n  147: GL.COMPRESSED_RGB8_ETC2,\n  148: GL.COMPRESSED_SRGB8_ETC2,\n  149: GL.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n  150: GL.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n  151: GL.COMPRESSED_RGBA8_ETC2_EAC,\n  152: GL.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,\n  153: GL.COMPRESSED_R11_EAC,\n  154: GL.COMPRESSED_SIGNED_R11_EAC,\n  155: GL.COMPRESSED_RG11_EAC,\n  156: GL.COMPRESSED_SIGNED_RG11_EAC,\n  // @ts-ignore\n  157: GL.COMPRESSED_RGBA_ASTC_4x4_KHR,\n  // @ts-ignore\n  158: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR,\n  // @ts-ignore\n  159: GL.COMPRESSED_RGBA_ASTC_5x4_KHR,\n  // @ts-ignore\n  160: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR,\n  // @ts-ignore\n  161: GL.COMPRESSED_RGBA_ASTC_5x5_KHR,\n  // @ts-ignore\n  162: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR,\n  // @ts-ignore\n  163: GL.COMPRESSED_RGBA_ASTC_6x5_KHR,\n  // @ts-ignore\n  164: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR,\n  // @ts-ignore\n  165: GL.COMPRESSED_RGBA_ASTC_6x6_KHR,\n  // @ts-ignore\n  166: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR,\n  // @ts-ignore\n  167: GL.COMPRESSED_RGBA_ASTC_8x5_KHR,\n  // @ts-ignore\n  168: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR,\n  // @ts-ignore\n  169: GL.COMPRESSED_RGBA_ASTC_8x6_KHR,\n  // @ts-ignore\n  170: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR,\n  // @ts-ignore\n  171: GL.COMPRESSED_RGBA_ASTC_8x8_KHR,\n  // @ts-ignore\n  172: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR,\n  // @ts-ignore\n  173: GL.COMPRESSED_RGBA_ASTC_10x5_KHR,\n  // @ts-ignore\n  174: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR,\n  // @ts-ignore\n  175: GL.COMPRESSED_RGBA_ASTC_10x6_KHR,\n  // @ts-ignore\n  176: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR,\n  // @ts-ignore\n  177: GL.COMPRESSED_RGBA_ASTC_10x8_KHR,\n  // @ts-ignore\n  178: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR,\n  // @ts-ignore\n  179: GL.COMPRESSED_RGBA_ASTC_10x10_KHR,\n  // @ts-ignore\n  180: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,\n  // @ts-ignore\n  181: GL.COMPRESSED_RGBA_ASTC_12x10_KHR,\n  // @ts-ignore\n  182: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR,\n  // @ts-ignore\n  183: GL.COMPRESSED_RGBA_ASTC_12x12_KHR,\n  // @ts-ignore\n  184: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR,\n  1000054000: GL.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG,\n  1000054001: GL.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n  // @ts-ignore\n  1000066000: GL.COMPRESSED_RGBA_ASTC_4x4_KHR,\n  // @ts-ignore\n  1000066001: GL.COMPRESSED_RGBA_ASTC_5x4_KHR,\n  // @ts-ignore\n  1000066002: GL.COMPRESSED_RGBA_ASTC_5x5_KHR,\n  // @ts-ignore\n  1000066003: GL.COMPRESSED_RGBA_ASTC_6x5_KHR,\n  // @ts-ignore\n  1000066004: GL.COMPRESSED_RGBA_ASTC_6x6_KHR,\n  // @ts-ignore\n  1000066005: GL.COMPRESSED_RGBA_ASTC_8x5_KHR,\n  // @ts-ignore\n  1000066006: GL.COMPRESSED_RGBA_ASTC_8x6_KHR,\n  // @ts-ignore\n  1000066007: GL.COMPRESSED_RGBA_ASTC_8x8_KHR,\n  // @ts-ignore\n  1000066008: GL.COMPRESSED_RGBA_ASTC_10x5_KHR,\n  // @ts-ignore\n  1000066009: GL.COMPRESSED_RGBA_ASTC_10x6_KHR,\n  // @ts-ignore\n  1000066010: GL.COMPRESSED_RGBA_ASTC_10x8_KHR,\n  // @ts-ignore\n  1000066011: GL.COMPRESSED_RGBA_ASTC_10x10_KHR,\n  // @ts-ignore\n  1000066012: GL.COMPRESSED_RGBA_ASTC_12x10_KHR,\n  // @ts-ignore\n  1000066013: GL.COMPRESSED_RGBA_ASTC_12x12_KHR\n};\n\n/**\n * Returns WebGl format based on Vulkan format\n * Vulkan to WebGl format mapping provided here http://github.khronos.org/KTX-Specification/#formatMapping\n * Vulkan name to format number mapping provided here: https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkFormat.html\n * @param {Number} vkFormat\n * @returns {Number}\n */\nexport function mapVkFormatToWebGL(vkFormat) {\n  return VULKAN_TO_WEBGL_FORMAT_MAP[vkFormat];\n}\n","import type {TextureLevel} from '../../types';\nimport {assert} from '@loaders.gl/loader-utils';\nimport {GL} from '../gl-constants';\nimport {extractMipmapImages} from '../utils/extract-mipmap-images';\n\nconst getATCLevelSize = getDxt1LevelSize;\nconst getATCALevelSize = getDxtXLevelSize;\nconst getATCILevelSize = getDxtXLevelSize;\nconst DDS_CONSTANTS = {\n  MAGIC_NUMBER: 0x20534444,\n  HEADER_LENGTH: 31,\n  MAGIC_NUMBER_INDEX: 0,\n  HEADER_SIZE_INDEX: 1,\n  HEADER_FLAGS_INDEX: 2,\n  HEADER_HEIGHT_INDEX: 3,\n  HEADER_WIDTH_INDEX: 4,\n  MIPMAPCOUNT_INDEX: 7,\n  HEADER_PF_FLAGS_INDEX: 20,\n  HEADER_PF_FOURCC_INDEX: 21,\n  DDSD_MIPMAPCOUNT: 0x20000,\n  DDPF_FOURCC: 0x4,\n  PIXEL_FORMATS: {\n    DXT1: GL.COMPRESSED_RGB_S3TC_DXT1_EXT,\n    DXT3: GL.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n    DXT5: GL.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n    'ATC ': GL.COMPRESSED_RGB_ATC_WEBGL,\n    ATCA: GL.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,\n    ATCI: GL.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\n  },\n  SIZE_FUNCTIONS: {\n    DXT1: getDxt1LevelSize,\n    DXT3: getDxtXLevelSize,\n    DXT5: getDxtXLevelSize,\n    'ATC ': getATCLevelSize,\n    ATCA: getATCALevelSize,\n    ATCI: getATCILevelSize\n  }\n};\n\n/**\n * Check if data is in \"DDS\" format by its magic number\n * @param data - binary data of compressed texture\n * @returns true - data in \"DDS\" format, else - false\n */\nexport function isDDS(data: ArrayBuffer): boolean {\n  const header = new Uint32Array(data, 0, DDS_CONSTANTS.HEADER_LENGTH);\n  const magic = header[DDS_CONSTANTS.MAGIC_NUMBER_INDEX];\n  return magic === DDS_CONSTANTS.MAGIC_NUMBER;\n}\n\n/**\n * Parse texture data as \"DDS\" format\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n */\nexport function parseDDS(data: ArrayBuffer): TextureLevel[] {\n  const header = new Int32Array(data, 0, DDS_CONSTANTS.HEADER_LENGTH);\n  const pixelFormatNumber = header[DDS_CONSTANTS.HEADER_PF_FOURCC_INDEX];\n  assert(\n    Boolean(header[DDS_CONSTANTS.HEADER_PF_FLAGS_INDEX] & DDS_CONSTANTS.DDPF_FOURCC),\n    'DDS: Unsupported format, must contain a FourCC code'\n  );\n  const fourCC = int32ToFourCC(pixelFormatNumber);\n  const internalFormat = DDS_CONSTANTS.PIXEL_FORMATS[fourCC];\n  const sizeFunction = DDS_CONSTANTS.SIZE_FUNCTIONS[fourCC];\n  assert(internalFormat && sizeFunction, `DDS: Unknown pixel format ${pixelFormatNumber}`);\n\n  let mipMapLevels = 1;\n  if (header[DDS_CONSTANTS.HEADER_FLAGS_INDEX] & DDS_CONSTANTS.DDSD_MIPMAPCOUNT) {\n    mipMapLevels = Math.max(1, header[DDS_CONSTANTS.MIPMAPCOUNT_INDEX]);\n  }\n  const width = header[DDS_CONSTANTS.HEADER_WIDTH_INDEX];\n  const height = header[DDS_CONSTANTS.HEADER_HEIGHT_INDEX];\n  const dataOffset = header[DDS_CONSTANTS.HEADER_SIZE_INDEX] + 4;\n  const image = new Uint8Array(data, dataOffset);\n\n  return extractMipmapImages(image, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction,\n    internalFormat\n  });\n}\n\n/**\n * DXT1 applicable function to calculate level size\n * @param width - level width\n * @param height - level height\n * @returns level size in bytes\n */\nexport function getDxt1LevelSize(width: number, height: number): number {\n  return ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n}\n\n/**\n * DXT3 & DXT5 applicable function to calculate level size\n * @param width - level width\n * @param height - level height\n * @returns level size in bytes\n */\nexport function getDxtXLevelSize(width: number, height: number): number {\n  return ((width + 3) >> 2) * ((height + 3) >> 2) * 16;\n}\n\n/**\n * Convert every byte of Int32 value to char\n * @param {number} value - Int32 number\n * @returns {string} string of 4 characters\n */\nfunction int32ToFourCC(value) {\n  return String.fromCharCode(\n    value & 0xff,\n    (value >> 8) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 24) & 0xff\n  );\n}\n","// Purpose: include this in your module to avoid\n// dependencies on micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\ntype obj = {[key: string]: any};\nconst self_: obj = globals.self || globals.window || globals.global || {};\nconst window_: obj = globals.window || globals.self || globals.global || {};\nconst global_: obj = globals.global || globals.self || globals.window || {};\nconst document_: obj = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in a browser */\nexport const isBrowser: boolean =\n  // @ts-ignore process does not exist on browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running in a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n/** Major Node version (as a number) */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n","/* eslint-disable no-restricted-globals */\nimport type {LoaderWithParser} from '../../types';\nimport {WorkerBody} from '@loaders.gl/worker-utils';\n// import {validateLoaderVersion} from './validate-loader-version';\n\nlet requestId = 0;\n\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n * @param loader\n */\nexport function createLoaderWorker(loader: LoaderWithParser) {\n  // Check that we are actually in a worker thread\n  if (typeof self === 'undefined') {\n    return;\n  }\n\n  WorkerBody.onmessage = async (type, payload) => {\n    switch (type) {\n      case 'process':\n        try {\n          // validateLoaderVersion(loader, data.source.split('@')[1]);\n\n          const {input, options = {}} = payload;\n\n          const result = await parseData({\n            loader,\n            arrayBuffer: input,\n            options,\n            context: {\n              parse: parseOnMainThread\n            }\n          });\n          WorkerBody.postMessage('done', {result});\n        } catch (error) {\n          const message = error instanceof Error ? error.message : '';\n          WorkerBody.postMessage('error', {error: message});\n        }\n        break;\n      default:\n    }\n  };\n}\n\nfunction parseOnMainThread(arrayBuffer: ArrayBuffer, options: {[key: string]: any}): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const id = requestId++;\n\n    /**\n     */\n    const onMessage = (type, payload) => {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n\n    // Ask the main thread to decode data\n    const payload = {id, input: arrayBuffer, options};\n    WorkerBody.postMessage('process', payload);\n  });\n}\n\n// TODO - Support byteOffset and byteLength (enabling parsing of embedded binaries without copies)\n// TODO - Why not support async loader.parse* funcs here?\n// TODO - Why not reuse a common function instead of reimplementing loader.parse* selection logic? Keeping loader small?\n// TODO - Lack of appropriate parser functions can be detected when we create worker, no need to wait until parse\nasync function parseData({loader, arrayBuffer, options, context}) {\n  let data;\n  let parser;\n  if (loader.parseSync || loader.parse) {\n    data = arrayBuffer;\n    parser = loader.parseSync || loader.parse;\n  } else if (loader.parseTextSync) {\n    const textDecoder = new TextDecoder();\n    data = textDecoder.decode(arrayBuffer);\n    parser = loader.parseTextSync;\n  } else {\n    throw new Error(`Could not load data with ${loader.name} loader`);\n  }\n\n  // TODO - proper merge in of loader options...\n  options = {\n    ...options,\n    modules: (loader && loader.options && loader.options.modules) || {},\n    worker: false\n  };\n\n  return await parser(data, {...options}, context, loader);\n}\n","import type {WorkerJob, WorkerMessageType, WorkerMessagePayload} from '@loaders.gl/worker-utils';\nimport type {Loader, LoaderOptions, LoaderContext} from '../../types';\nimport {WorkerFarm, getWorkerURL} from '@loaders.gl/worker-utils';\n\n/**\n * Determines if a loader can parse with worker\n * @param loader\n * @param options\n */\nexport function canParseWithWorker(loader: Loader, options?: LoaderOptions) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n\n  return loader.worker && options?.worker;\n}\n\n/**\n * this function expects that the worker function sends certain messages,\n * this can be automated if the worker is wrapper by a call to createLoaderWorker in @loaders.gl/loader-utils.\n */\nexport async function parseWithWorker(\n  loader: Loader,\n  data,\n  options?: LoaderOptions,\n  context?: LoaderContext,\n  parseOnMainThread?: (arrayBuffer: ArrayBuffer, options: {[key: string]: any}) => Promise<void>\n) {\n  const name = loader.id; // TODO\n  const url = getWorkerURL(loader, options);\n\n  const workerFarm = WorkerFarm.getWorkerFarm(options);\n  const workerPool = workerFarm.getWorkerPool({name, url});\n\n  // options.log object contains functions which cannot be transferred\n  // TODO - decide how to handle logging on workers\n  options = JSON.parse(JSON.stringify(options));\n\n  const job = await workerPool.startJob(\n    'process-on-worker',\n    // eslint-disable-next-line\n    onMessage.bind(null, parseOnMainThread)\n  );\n\n  job.postMessage('process', {\n    // @ts-ignore\n    input: data,\n    options\n  });\n\n  const result = await job.result;\n  return await result.result;\n}\n\n/**\n * Handle worker's responses to the main thread\n * @param job\n * @param type\n * @param payload\n */\nasync function onMessage(\n  parseOnMainThread,\n  job: WorkerJob,\n  type: WorkerMessageType,\n  payload: WorkerMessagePayload\n) {\n  switch (type) {\n    case 'done':\n      job.done(payload);\n      break;\n\n    case 'error':\n      job.error(payload.error);\n      break;\n\n    case 'process':\n      // Worker is asking for main thread to parseO\n      const {id, input, options} = payload;\n      try {\n        const result = await parseOnMainThread(input, options);\n        job.postMessage('done', {id, result});\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'unknown error';\n        job.postMessage('error', {id, error: message});\n      }\n      break;\n\n    default:\n      // eslint-disable-next-line\n      console.warn(`parse-with-worker unknown message ${type}`);\n  }\n}\n","import {getFirstCharacters} from '../binary-utils/get-first-characters';\n\n/**\n * Minimal JSON parser that throws more meaningful error messages\n */\nexport function parseJSON(string: string): any {\n  try {\n    return JSON.parse(string);\n  } catch (_) {\n    throw new Error(`Failed to parse JSON from data starting with \"${getFirstCharacters(string)}\"`);\n  }\n}\n","import {TypedArray} from '../../types';\nimport {padToNBytes} from './memory-copy-utils';\n\n/**\n * Copy sourceBuffer to dataView with some padding\n *\n * @param {DataView | null} dataView - destination data container. If null - only new offset is calculated\n * @param {number} byteOffset - destination byte offset to copy to\n * @param {Array | TypedArray} sourceBuffer - source data buffer\n * @param {number} padding - pad the resulting array to multiple of \"padding\" bytes. Additional bytes are filled with 0x20 (ASCII space)\n *\n * @return new byteOffset of resulting dataView\n */\nexport function copyPaddedArrayBufferToDataView(\n  dataView: DataView | null,\n  byteOffset: number,\n  sourceBuffer: TypedArray,\n  padding: number\n) {\n  const paddedLength = padToNBytes(sourceBuffer.byteLength, padding);\n  const padLength = paddedLength - sourceBuffer.byteLength;\n\n  if (dataView) {\n    // Copy array\n    const targetArray = new Uint8Array(\n      dataView.buffer,\n      dataView.byteOffset + byteOffset,\n      sourceBuffer.byteLength\n    );\n    const sourceArray = new Uint8Array(sourceBuffer);\n    targetArray.set(sourceArray);\n\n    // Add PADDING\n    for (let i = 0; i < padLength; ++i) {\n      // json chunk is padded with spaces (ASCII 0x20)\n      dataView.setUint8(byteOffset + sourceBuffer.byteLength + i, 0x20);\n    }\n  }\n  byteOffset += paddedLength;\n  return byteOffset;\n}\n\n/**\n * Copy string to dataView with some padding\n *\n * @param {DataView | null} dataView - destination data container. If null - only new offset is calculated\n * @param {number} byteOffset - destination byte offset to copy to\n * @param {string} string - source string\n * @param {number} padding - pad the resulting array to multiple of \"padding\" bytes. Additional bytes are filled with 0x20 (ASCII space)\n *\n * @return new byteOffset of resulting dataView\n */\nexport function copyPaddedStringToDataView(\n  dataView: DataView | null,\n  byteOffset: number,\n  string: string,\n  padding: number\n): number {\n  const textEncoder = new TextEncoder();\n  // PERFORMANCE IDEA: We encode twice, once to get size and once to store\n  // PERFORMANCE IDEA: Use TextEncoder.encodeInto() to avoid temporary copy\n  const stringBuffer = textEncoder.encode(string);\n\n  byteOffset = copyPaddedArrayBufferToDataView(dataView, byteOffset, stringBuffer, padding);\n\n  return byteOffset;\n}\n","// Note: These were broken out from gltf loader...\n// eslint-disable-next-line complexity\n\n// PERFORMANCE IDEA: No need to copy string twice...\nexport function padStringToByteAlignment(string, byteAlignment) {\n  const length = string.length;\n  const paddedLength = Math.ceil(length / byteAlignment) * byteAlignment; // Round up to the required alignment\n  const padding = paddedLength - length;\n  let whitespace = '';\n  for (let i = 0; i < padding; ++i) {\n    whitespace += ' ';\n  }\n  return string + whitespace;\n}\n\nexport function copyStringToDataView(dataView, byteOffset, string, byteLength) {\n  if (dataView) {\n    for (let i = 0; i < byteLength; i++) {\n      dataView.setUint8(byteOffset + i, string.charCodeAt(i));\n    }\n  }\n  return byteOffset + byteLength;\n}\n\nexport function copyBinaryToDataView(dataView, byteOffset, binary, byteLength) {\n  if (dataView) {\n    for (let i = 0; i < byteLength; i++) {\n      dataView.setUint8(byteOffset + i, binary[i]);\n    }\n  }\n  return byteOffset + byteLength;\n}\n","// TextDecoder iterators\n// TextDecoder will keep any partial undecoded bytes between calls to `decode`\n\nexport async function* makeTextDecoderIterator(\n  arrayBufferIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>,\n  options: TextDecoderOptions = {}\n): AsyncIterable<string> {\n  const textDecoder = new TextDecoder(undefined, options);\n  for await (const arrayBuffer of arrayBufferIterator) {\n    yield typeof arrayBuffer === 'string'\n      ? arrayBuffer\n      : textDecoder.decode(arrayBuffer, {stream: true});\n  }\n}\n\n// TextEncoder iterator\n// TODO - this is not useful unless min chunk size is given\n// TextEncoder will keep any partial undecoded bytes between calls to `encode`\n// If iterator does not yield strings, assume arrayBuffer and return unencoded\n\nexport async function* makeTextEncoderIterator(\n  textIterator: AsyncIterable<string> | Iterable<ArrayBuffer>\n): AsyncIterable<ArrayBuffer> {\n  const textEncoder = new TextEncoder();\n  for await (const text of textIterator) {\n    yield typeof text === 'string' ? textEncoder.encode(text) : text;\n  }\n}\n\n/**\n * @param textIterator async iterable yielding strings\n * @returns an async iterable over lines\n * See http://2ality.com/2018/04/async-iter-nodejs.html\n */\n\nexport async function* makeLineIterator(\n  textIterator: AsyncIterable<string>\n): AsyncIterable<string> {\n  let previous = '';\n  for await (const textChunk of textIterator) {\n    previous += textChunk;\n    let eolIndex;\n    while ((eolIndex = previous.indexOf('\\n')) >= 0) {\n      // line includes the EOL\n      const line = previous.slice(0, eolIndex + 1);\n      previous = previous.slice(eolIndex + 1);\n      yield line;\n    }\n  }\n\n  if (previous.length > 0) {\n    yield previous;\n  }\n}\n\n/**\n * @param lineIterator async iterable yielding lines\n * @returns async iterable yielding numbered lines\n *\n * See http://2ality.com/2018/04/async-iter-nodejs.html\n */\nexport async function* makeNumberedLineIterator(\n  lineIterator: AsyncIterable<string>\n): AsyncIterable<{counter: number; line: string}> {\n  let counter = 1;\n  for await (const line of lineIterator) {\n    yield {counter, line};\n    counter++;\n  }\n}\n","import {concatenateArrayBuffers} from '../binary-utils/array-buffer-utils';\n\n// GENERAL UTILITIES\n\n/**\n * Iterate over async iterator, without resetting iterator if end is not reached\n * - forEach intentionally does not reset iterator if exiting loop prematurely\n *   so that iteration can continue in a second loop\n * - It is recommended to use a standard for-await as last loop to ensure\n *   iterator gets properly reset\n *\n * TODO - optimize using sync iteration if argument is an Iterable?\n *\n * @param iterator\n * @param visitor\n */\nexport async function forEach(iterator, visitor) {\n  // eslint-disable-next-line\n  while (true) {\n    const {done, value} = await iterator.next();\n    if (done) {\n      iterator.return();\n      return;\n    }\n    const cancel = visitor(value);\n    if (cancel) {\n      return;\n    }\n  }\n}\n\n// Breaking big data into iterable chunks, concatenating iterable chunks into big data objects\n\n/**\n * Concatenates all data chunks yielded by an (async) iterator\n * This function can e.g. be used to enable atomic parsers to work on (async) iterator inputs\n */\n\nexport async function concatenateArrayBuffersAsync(\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n): Promise<ArrayBuffer> {\n  const arrayBuffers: ArrayBuffer[] = [];\n  for await (const chunk of asyncIterator) {\n    arrayBuffers.push(chunk);\n  }\n  return concatenateArrayBuffers(...arrayBuffers);\n}\n\nexport async function concatenateStringsAsync(\n  asyncIterator: AsyncIterable<string> | Iterable<string>\n): Promise<string> {\n  const strings: string[] = [];\n  for await (const chunk of asyncIterator) {\n    strings.push(chunk);\n  }\n  return strings.join('');\n}\n","import {Stats} from '@probe.gl/stats';\n\ntype Handle = any;\ntype DoneFunction = () => any;\ntype GetPriorityFunction = () => number;\ntype RequestResult = {\n  done: DoneFunction;\n} | null;\n\n/** RequestScheduler Options */\nexport type RequestSchedulerProps = {\n  id?: string;\n  throttleRequests?: boolean;\n  maxRequests?: number;\n};\n\nconst STAT_QUEUED_REQUESTS = 'Queued Requests';\nconst STAT_ACTIVE_REQUESTS = 'Active Requests';\nconst STAT_CANCELLED_REQUESTS = 'Cancelled Requests';\nconst STAT_QUEUED_REQUESTS_EVER = 'Queued Requests Ever';\nconst STAT_ACTIVE_REQUESTS_EVER = 'Active Requests Ever';\n\nconst DEFAULT_PROPS: Required<RequestSchedulerProps> = {\n  id: 'request-scheduler',\n  // Specifies if the request scheduler should throttle incoming requests, mainly for comparative testing\n  throttleRequests: true,\n  // The maximum number of simultaneous active requests. Un-throttled requests do not observe this limit.\n  maxRequests: 6\n};\n\n/** Tracks one request */\ntype Request = {\n  handle: Handle;\n  priority: number;\n  getPriority: GetPriorityFunction;\n  resolve?: (value: any) => any;\n};\n\n/**\n * Used to issue a request, without having them \"deeply queued\" by the browser.\n * @todo - Track requests globally, across multiple servers\n */\nexport default class RequestScheduler {\n  readonly props: Required<RequestSchedulerProps>;\n  readonly stats: Stats;\n  activeRequestCount: number = 0;\n\n  /** Tracks the number of active requests and prioritizes/cancels queued requests. */\n  private requestQueue: Request[] = [];\n  private requestMap: Map<Handle, Promise<RequestResult>> = new Map();\n  private deferredUpdate: any = null;\n\n  constructor(props: RequestSchedulerProps = {}) {\n    this.props = {...DEFAULT_PROPS, ...props};\n\n    // Returns the statistics used by the request scheduler.\n    this.stats = new Stats({id: this.props.id});\n    this.stats.get(STAT_QUEUED_REQUESTS);\n    this.stats.get(STAT_ACTIVE_REQUESTS);\n    this.stats.get(STAT_CANCELLED_REQUESTS);\n    this.stats.get(STAT_QUEUED_REQUESTS_EVER);\n    this.stats.get(STAT_ACTIVE_REQUESTS_EVER);\n  }\n\n  /**\n   * Called by an application that wants to issue a request, without having it deeply queued by the browser\n   *\n   * When the returned promise resolved, it is OK for the application to issue a request.\n   * The promise resolves to an object that contains a `done` method.\n   * When the application's request has completed (or failed), the application must call the `done` function\n   *\n   * @param handle\n   * @param getPriority will be called when request \"slots\" open up,\n   *    allowing the caller to update priority or cancel the request\n   *    Highest priority executes first, priority < 0 cancels the request\n   * @returns a promise\n   *   - resolves to a object (with a `done` field) when the request can be issued without queueing,\n   *   - resolves to `null` if the request has been cancelled (by the callback return < 0).\n   *     In this case the application should not issue the request\n   */\n  scheduleRequest(\n    handle: Handle,\n    getPriority: GetPriorityFunction = () => 0\n  ): Promise<RequestResult> {\n    // Allows throttling to be disabled\n    if (!this.props.throttleRequests) {\n      return Promise.resolve({done: () => {}});\n    }\n\n    // dedupe\n    if (this.requestMap.has(handle)) {\n      return this.requestMap.get(handle) as Promise<any>;\n    }\n\n    const request: Request = {handle, priority: 0, getPriority};\n    const promise = new Promise<RequestResult>((resolve) => {\n      // @ts-ignore\n      request.resolve = resolve;\n      return request;\n    });\n\n    this.requestQueue.push(request);\n    this.requestMap.set(handle, promise);\n    this._issueNewRequests();\n    return promise;\n  }\n\n  // PRIVATE\n\n  _issueRequest(request: Request): Promise<any> {\n    const {handle, resolve} = request;\n    let isDone = false;\n\n    const done = () => {\n      // can only be called once\n      if (!isDone) {\n        isDone = true;\n\n        // Stop tracking a request - it has completed, failed, cancelled etc\n        this.requestMap.delete(handle);\n        this.activeRequestCount--;\n        // A slot just freed up, see if any queued requests are waiting\n        this._issueNewRequests();\n      }\n    };\n\n    // Track this request\n    this.activeRequestCount++;\n\n    return resolve ? resolve({done}) : Promise.resolve({done});\n  }\n\n  /** We check requests asynchronously, to prevent multiple updates */\n  _issueNewRequests(): void {\n    if (!this.deferredUpdate) {\n      this.deferredUpdate = setTimeout(() => this._issueNewRequestsAsync(), 0);\n    }\n  }\n\n  /** Refresh all requests  */\n  _issueNewRequestsAsync() {\n    // TODO - shouldn't we clear the timeout?\n    this.deferredUpdate = null;\n\n    const freeSlots = Math.max(this.props.maxRequests - this.activeRequestCount, 0);\n\n    if (freeSlots === 0) {\n      return;\n    }\n\n    this._updateAllRequests();\n\n    // Resolve pending promises for the top-priority requests\n    for (let i = 0; i < freeSlots; ++i) {\n      const request = this.requestQueue.shift();\n      if (request) {\n        this._issueRequest(request); // eslint-disable-line @typescript-eslint/no-floating-promises\n      }\n    }\n\n    // Uncomment to debug\n    // console.log(`${freeSlots} free slots, ${this.requestQueue.length} queued requests`);\n  }\n\n  /** Ensure all requests have updated priorities, and that no longer valid requests are cancelled */\n  _updateAllRequests() {\n    const requestQueue = this.requestQueue;\n    for (let i = 0; i < requestQueue.length; ++i) {\n      const request = requestQueue[i];\n      if (!this._updateRequest(request)) {\n        // Remove the element and make sure to adjust the counter to account for shortened array\n        requestQueue.splice(i, 1);\n        this.requestMap.delete(request.handle);\n        i--;\n      }\n    }\n\n    // Sort the remaining requests based on priority\n    requestQueue.sort((a, b) => a.priority - b.priority);\n  }\n\n  /** Update a single request by calling the callback */\n  _updateRequest(request) {\n    request.priority = request.getPriority(request.handle); // eslint-disable-line callback-return\n\n    // by returning a negative priority, the callback cancels the request\n    if (request.priority < 0) {\n      request.resolve(null);\n      return false;\n    }\n    return true;\n  }\n}\n","// Simple file alias mechanisms for tests.\n\nlet pathPrefix = '';\nconst fileAliases: {[aliasPath: string]: string} = {};\n\n/*\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix: string): void {\n  pathPrefix = prefix;\n}\n\n/*\n * Get the relative path prefix\n */\nexport function getPathPrefix(): string {\n  return pathPrefix;\n}\n\n/**\n *\n * @param aliases\n *\n * Note: addAliases are an experimental export, they are only for testing of loaders.gl loaders\n * not intended as a generic aliasing mechanism\n */\nexport function addAliases(aliases: {[aliasPath: string]: string}): void {\n  Object.assign(fileAliases, aliases);\n}\n\n/**\n * Resolves aliases and adds path-prefix to paths\n */\nexport function resolvePath(filename: string): string {\n  for (const alias in fileAliases) {\n    if (filename.startsWith(alias)) {\n      const replacement = fileAliases[alias];\n      filename = filename.replace(alias, replacement);\n    }\n  }\n  if (!filename.startsWith('http://') && !filename.startsWith('https://')) {\n    filename = `${pathPrefix}${filename}`;\n  }\n  return filename;\n}\n","import type {LoaderWithParser} from './types';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n/**\n * A JSON Micro loader (minimal bundle size)\n * Alternative to `@loaders.gl/json`\n */\nexport const JSONLoader = {\n  name: 'JSON',\n  id: 'json',\n  module: 'json',\n  version: VERSION,\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json'],\n  category: 'json',\n  text: true,\n  parseTextSync,\n  parse: async (arrayBuffer) => parseTextSync(new TextDecoder().decode(arrayBuffer)),\n  options: {}\n};\n\n// TODO - deprecated\nfunction parseTextSync(text) {\n  return JSON.parse(text);\n}\n\nexport const _typecheckJSONLoader: LoaderWithParser = JSONLoader;\n","// Beginning of a minimal implementation of the Node.js path API, that doesn't pull in big polyfills.\n\n/**\n * Replacement for Node.js path.dirname\n * @param url\n */\nexport function dirname(url: string): string {\n  const slashIndex = url && url.lastIndexOf('/');\n  return slashIndex >= 0 ? url.substr(0, slashIndex as number) : '';\n}\n\n/**\n * Replacement for Node.js path.join\n * @param parts\n */\nexport function join(...parts: string[]): string {\n  const separator = '/';\n  parts = parts.map((part, index) => {\n    if (index) {\n      part = part.replace(new RegExp(`^${separator}`), '');\n    }\n    if (index !== parts.length - 1) {\n      part = part.replace(new RegExp(`${separator}$`), '');\n    }\n    return part;\n  });\n  return parts.join(separator);\n}\n","import * as fs from '../node/fs';\nimport {IFileSystem, IRandomAccessReadFileSystem} from '@loaders.gl/loader-utils';\n// import {fetchFile} from \"../fetch/fetch-file\"\n// import {selectLoader} from \"../api/select-loader\";\n\ntype Stat = {\n  size: number;\n  isDirectory: () => boolean;\n  info?: fs.Stats;\n};\n\ntype ReadOptions = {\n  buffer?: Buffer;\n  offset?: number;\n  length?: number;\n  position?: number;\n};\n\n/**\n * FileSystem pass-through for Node.js\n * Compatible with BrowserFileSystem.\n * @param options\n */\nexport default class NodeFileSystem implements IFileSystem, IRandomAccessReadFileSystem {\n  // implements IFileSystem\n  constructor(options: {[key: string]: any}) {\n    this.fetch = options._fetch;\n  }\n\n  async readdir(dirname = '.', options?: {}): Promise<any[]> {\n    return await fs.readdir(dirname, options);\n  }\n\n  async stat(path: string, options?: {}): Promise<Stat> {\n    const info = await fs.stat(path, options);\n    return {size: Number(info.size), isDirectory: () => false, info};\n  }\n\n  async fetch(path: string, options: {[key: string]: any}) {\n    // Falls back to handle https:/http:/data: etc fetches\n    // eslint-disable-next-line\n    const fallbackFetch = options.fetch || this.fetch;\n    return fallbackFetch(path, options);\n  }\n\n  // implements IRandomAccessFileSystem\n  async open(path: string, flags: string | number, mode?: any): Promise<number> {\n    return await fs.open(path, flags);\n  }\n\n  async close(fd: number): Promise<void> {\n    return await fs.close(fd);\n  }\n\n  async fstat(fd: number): Promise<Stat> {\n    const info = await fs.fstat(fd);\n    return info;\n  }\n\n  async read(\n    fd: number,\n    // @ts-ignore Possibly null\n    {buffer = null, offset = 0, length = buffer.byteLength, position = null}: ReadOptions\n  ): Promise<{bytesRead: number; buffer: Buffer}> {\n    let totalBytesRead = 0;\n    // Read in loop until we get required number of bytes\n    while (totalBytesRead < length) {\n      const {bytesRead} = await fs.read(\n        fd,\n        buffer,\n        offset + totalBytesRead,\n        length - totalBytesRead,\n        position + totalBytesRead\n      );\n      totalBytesRead += bytesRead;\n    }\n    return {bytesRead: totalBytesRead, buffer};\n  }\n}\n","import {TextureLevel} from '../../types';\n/* eslint-disable camelcase */\n// Forked from PicoGL: https://github.com/tsherif/picogl.js/blob/master/examples/utils/utils.js\n// Copyright (c) 2017 Tarek Sherif, The MIT License (MIT)\nimport {GL} from '../gl-constants';\nimport {extractMipmapImages} from '../utils/extract-mipmap-images';\n\nconst PVR_CONSTANTS = {\n  MAGIC_NUMBER: 0x03525650,\n  MAGIC_NUMBER_EXTRA: 0x50565203,\n  HEADER_LENGTH: 13,\n  HEADER_SIZE: 52,\n  MAGIC_NUMBER_INDEX: 0,\n  PIXEL_FORMAT_INDEX: 2,\n  COLOUR_SPACE_INDEX: 4,\n  HEIGHT_INDEX: 6,\n  WIDTH_INDEX: 7,\n  MIPMAPCOUNT_INDEX: 11,\n  METADATA_SIZE_INDEX: 12\n};\n\nconst PVR_PIXEL_FORMATS = {\n  0: [GL.COMPRESSED_RGB_PVRTC_2BPPV1_IMG],\n  1: [GL.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG],\n  2: [GL.COMPRESSED_RGB_PVRTC_4BPPV1_IMG],\n  3: [GL.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG],\n  6: [GL.COMPRESSED_RGB_ETC1_WEBGL],\n  7: [GL.COMPRESSED_RGB_S3TC_DXT1_EXT],\n  9: [GL.COMPRESSED_RGBA_S3TC_DXT3_EXT],\n  11: [GL.COMPRESSED_RGBA_S3TC_DXT5_EXT],\n  22: [GL.COMPRESSED_RGB8_ETC2],\n  23: [GL.COMPRESSED_RGBA8_ETC2_EAC],\n  24: [GL.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2],\n  25: [GL.COMPRESSED_R11_EAC],\n  26: [GL.COMPRESSED_RG11_EAC],\n  27: [GL.COMPRESSED_RGBA_ASTC_4X4_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR],\n  28: [GL.COMPRESSED_RGBA_ASTC_5X4_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR],\n  29: [GL.COMPRESSED_RGBA_ASTC_5X5_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR],\n  30: [GL.COMPRESSED_RGBA_ASTC_6X5_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR],\n  31: [GL.COMPRESSED_RGBA_ASTC_6X6_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR],\n  32: [GL.COMPRESSED_RGBA_ASTC_8X5_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR],\n  33: [GL.COMPRESSED_RGBA_ASTC_8X6_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR],\n  34: [GL.COMPRESSED_RGBA_ASTC_8X8_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR],\n  35: [GL.COMPRESSED_RGBA_ASTC_10X5_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR],\n  36: [GL.COMPRESSED_RGBA_ASTC_10X6_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR],\n  37: [GL.COMPRESSED_RGBA_ASTC_10X8_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR],\n  38: [GL.COMPRESSED_RGBA_ASTC_10X10_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR],\n  39: [GL.COMPRESSED_RGBA_ASTC_12X10_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR],\n  40: [GL.COMPRESSED_RGBA_ASTC_12X12_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR]\n};\n\nconst PVR_SIZE_FUNCTIONS = {\n  0: pvrtc2bppSize,\n  1: pvrtc2bppSize,\n  2: pvrtc4bppSize,\n  3: pvrtc4bppSize,\n  6: dxtEtcSmallSize,\n  7: dxtEtcSmallSize,\n  9: dxtEtcAstcBigSize,\n  11: dxtEtcAstcBigSize,\n  22: dxtEtcSmallSize,\n  23: dxtEtcAstcBigSize,\n  24: dxtEtcSmallSize,\n  25: dxtEtcSmallSize,\n  26: dxtEtcAstcBigSize,\n  27: dxtEtcAstcBigSize,\n  28: atc5x4Size,\n  29: atc5x5Size,\n  30: atc6x5Size,\n  31: atc6x6Size,\n  32: atc8x5Size,\n  33: atc8x6Size,\n  34: atc8x8Size,\n  35: atc10x5Size,\n  36: atc10x6Size,\n  37: atc10x8Size,\n  38: atc10x10Size,\n  39: atc12x10Size,\n  40: atc12x12Size\n};\n\n/**\n * Check if data is in \"PVR\" format by its magic number\n * @param data - binary data of compressed texture\n * @returns true - data in \"PVR\" format, else - false\n */\nexport function isPVR(data: ArrayBuffer): boolean {\n  const header = new Uint32Array(data, 0, PVR_CONSTANTS.HEADER_LENGTH);\n  const version = header[PVR_CONSTANTS.MAGIC_NUMBER_INDEX];\n\n  return version === PVR_CONSTANTS.MAGIC_NUMBER || version === PVR_CONSTANTS.MAGIC_NUMBER_EXTRA;\n}\n\n/**\n * Parse texture data as \"PVR\" format\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n * @see http://cdn.imgtec.com/sdk-documentation/PVR+File+Format.Specification.pdf\n */\nexport function parsePVR(data: ArrayBuffer): TextureLevel[] {\n  const header = new Uint32Array(data, 0, PVR_CONSTANTS.HEADER_LENGTH);\n\n  const pvrFormat = header[PVR_CONSTANTS.PIXEL_FORMAT_INDEX];\n  const colourSpace = header[PVR_CONSTANTS.COLOUR_SPACE_INDEX];\n  const pixelFormats = PVR_PIXEL_FORMATS[pvrFormat] || [];\n  const internalFormat = pixelFormats.length > 1 && colourSpace ? pixelFormats[1] : pixelFormats[0];\n\n  const sizeFunction = PVR_SIZE_FUNCTIONS[pvrFormat];\n\n  const mipMapLevels = header[PVR_CONSTANTS.MIPMAPCOUNT_INDEX];\n\n  const width = header[PVR_CONSTANTS.WIDTH_INDEX];\n  const height = header[PVR_CONSTANTS.HEIGHT_INDEX];\n\n  const dataOffset = PVR_CONSTANTS.HEADER_SIZE + header[PVR_CONSTANTS.METADATA_SIZE_INDEX];\n\n  const image = new Uint8Array(data, dataOffset);\n\n  return extractMipmapImages(image, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction,\n    internalFormat\n  });\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\nfunction pvrtc2bppSize(width, height) {\n  width = Math.max(width, 16);\n  height = Math.max(height, 8);\n\n  return (width * height) / 4;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\nfunction pvrtc4bppSize(width, height) {\n  width = Math.max(width, 8);\n  height = Math.max(height, 8);\n\n  return (width * height) / 2;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/\n// Size for:\n// COMPRESSED_RGB_S3TC_DXT1_EXT\n// COMPRESSED_R11_EAC\n// COMPRESSED_SIGNED_R11_EAC\n// COMPRESSED_RGB8_ETC2\n// COMPRESSED_SRGB8_ETC2\n// COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\n// COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\nfunction dxtEtcSmallSize(width, height) {\n  return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 8;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\n// Size for:\n// COMPRESSED_RGBA_S3TC_DXT3_EXT\n// COMPRESSED_RGBA_S3TC_DXT5_EXT\n// COMPRESSED_RG11_EAC\n// COMPRESSED_SIGNED_RG11_EAC\n// COMPRESSED_RGBA8_ETC2_EAC\n// COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\n// COMPRESSED_RGBA_ASTC_4x4_KHR\nfunction dxtEtcAstcBigSize(width, height) {\n  return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc5x4Size(width, height) {\n  return Math.floor((width + 4) / 5) * Math.floor((height + 3) / 4) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc5x5Size(width, height) {\n  return Math.floor((width + 4) / 5) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc6x5Size(width, height) {\n  return Math.floor((width + 5) / 6) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc6x6Size(width, height) {\n  return Math.floor((width + 5) / 6) * Math.floor((height + 5) / 6) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x5Size(width, height) {\n  return Math.floor((width + 7) / 8) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x6Size(width, height) {\n  return Math.floor((width + 7) / 8) * Math.floor((height + 5) / 6) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x8Size(width, height) {\n  return Math.floor((width + 7) / 8) * Math.floor((height + 7) / 8) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x5Size(width, height) {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x6Size(width, height) {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 5) / 6) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x8Size(width, height) {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 7) / 8) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x10Size(width, height) {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 9) / 10) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc12x10Size(width, height) {\n  return Math.floor((width + 11) / 12) * Math.floor((height + 9) / 10) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc12x12Size(width, height) {\n  return Math.floor((width + 11) / 12) * Math.floor((height + 11) / 12) * 16;\n}\n","import type {Loader} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\n\n/**\n * Worker loader for the Crunch compressed texture container format\n */\nexport const CrunchLoader = {\n  id: 'crunch',\n  name: 'Crunch',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['crn'],\n  mimeTypes: ['image/crn', 'image/x-crn', 'application/octet-stream'],\n  binary: true,\n  options: {\n    crunch: {\n      libraryPath: 'libs/'\n    }\n  }\n};\n\n// We avoid bundling crunch - rare format, only offer worker loader\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckCrunchLoader: Loader = CrunchLoader;\n","import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {parseNPY} from './lib/parsers/parse-npy';\n\n// \\x93NUMPY\nconst NPY_MAGIC_NUMBER = new Uint8Array([147, 78, 85, 77, 80, 89]);\n\n/**\n * Worker loader for numpy \"tiles\"\n */\nexport const NPYWorkerLoader = {\n  name: 'NPY',\n  id: 'npy',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['npy'],\n  mimeTypes: [],\n  tests: [NPY_MAGIC_NUMBER.buffer],\n  options: {\n    npy: {}\n  }\n};\n\n/**\n * Loader for numpy \"tiles\"\n */\nexport const NPYLoader = {\n  ...NPYWorkerLoader,\n  parseSync: parseNPY,\n  parse: async (arrayBuffer, options) => parseNPY(arrayBuffer, options)\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckNPYWorkerLoader: Loader = NPYWorkerLoader;\nexport const _TypecheckNPYLoader: LoaderWithParser = NPYLoader;\n","function systemIsLittleEndian() {\n  const a = new Uint32Array([0x12345678]);\n  const b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n  return !(b[0] === 0x12);\n}\n\nconst LITTLE_ENDIAN_OS = systemIsLittleEndian();\n\n// The basic string format consists of 3 characters:\n// 1. a character describing the byteorder of the data (<: little-endian, >: big-endian, |: not-relevant)\n// 2. a character code giving the basic type of the array\n// 3. an integer providing the number of bytes the type uses.\n// https://numpy.org/doc/stable/reference/arrays.interface.html\n//\n// Here I only include the second and third characters, and check endianness\n// separately\nconst DTYPES = {\n  u1: Uint8Array,\n  i1: Int8Array,\n  u2: Uint16Array,\n  i2: Int16Array,\n  u4: Uint32Array,\n  i4: Int32Array,\n  f4: Float32Array,\n  f8: Float64Array\n};\n\nexport function parseNPY(arrayBuffer, options) {\n  if (!arrayBuffer) {\n    return null;\n  }\n\n  const view = new DataView(arrayBuffer);\n  const {header, headerEndOffset} = parseHeader(view);\n\n  const numpyType = header.descr;\n  const ArrayType = DTYPES[numpyType.slice(1, 3)];\n  if (!ArrayType) {\n    // eslint-disable-next-line no-console, no-undef\n    console.warn(`Decoding of npy dtype not implemented: ${numpyType}`);\n    return null;\n  }\n\n  const nArrayElements = header.shape.reduce((a, b) => a * b);\n  const arrayByteLength = nArrayElements * ArrayType.BYTES_PER_ELEMENT;\n\n  const data = new ArrayType(arrayBuffer.slice(headerEndOffset, headerEndOffset + arrayByteLength));\n\n  // Swap endianness if needed\n  if ((numpyType[0] === '>' && LITTLE_ENDIAN_OS) || (numpyType[0] === '<' && !LITTLE_ENDIAN_OS)) {\n    // eslint-disable-next-line no-console, no-undef\n    console.warn('Data is wrong endianness, byte swapping not yet implemented.');\n  }\n\n  return {\n    data,\n    header\n  };\n}\n\n/**\n * Parse NPY header\n *\n * @param  {DataView} view\n * @return {Object}\n */\nfunction parseHeader(view) {\n  const majorVersion = view.getUint8(6);\n  // const minorVersion = view.getUint8(7);\n\n  let offset = 8;\n  let headerLength;\n  if (majorVersion >= 2) {\n    headerLength = view.getUint32(8, true);\n    offset += 4;\n  } else {\n    headerLength = view.getUint16(8, true);\n    offset += 2;\n  }\n\n  const encoding = majorVersion <= 2 ? 'latin1' : 'utf-8';\n  const decoder = new TextDecoder(encoding);\n  const headerArray = new Uint8Array(view.buffer, offset, headerLength);\n  const headerText = decoder.decode(headerArray);\n  offset += headerLength;\n\n  const header = JSON.parse(\n    headerText\n      .replace(/'/g, '\"')\n      .replace('False', 'false')\n      .replace('(', '[')\n      .replace(/,*\\),*/g, ']')\n  );\n\n  return {header, headerEndOffset: offset};\n}\n","import type {Writer} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {encodeImageURLToCompressedTextureURL} from './lib/encoders/encode-texture';\n\n/**\n * DDS Texture Container Exporter\n */\nexport const CompressedTextureWriter = {\n  name: 'DDS Texture Container',\n  id: 'dds',\n  module: 'textures',\n  version: VERSION,\n\n  extensions: ['dds'],\n\n  options: {\n    texture: {\n      format: 'auto',\n      compression: 'auto',\n      quality: 'auto',\n      mipmap: false,\n      flipY: false,\n      toolFlags: ''\n    }\n  },\n\n  encodeURLtoURL: encodeImageURLToCompressedTextureURL\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckCompressedTextureWriter: Writer = CompressedTextureWriter;\n","import {ChildProcessProxy} from '@loaders.gl/worker-utils';\n\nconst MODULE_ROOT = `${__dirname}/../../..`;\n\n/*\n * @see https://github.com/TimvanScherpenzeel/texture-compressor\n */\nexport async function encodeImageURLToCompressedTextureURL(inputUrl, outputUrl) {\n  // prettier-ignore\n  const args = [\n    // Note: our actual executable is `npx`, so `texture-compressor` is an argument\n    'texture-compressor',\n    '--type', 's3tc',\n    '--compression', 'DXT1',\n    '--quality', 'normal',\n    '--input', inputUrl,\n    '--output', outputUrl\n  ];\n  const childProcess = new ChildProcessProxy();\n  await childProcess.start({\n    command: 'npx',\n    arguments: args,\n    spawn: {\n      cwd: MODULE_ROOT\n    }\n  });\n  return outputUrl;\n}\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport parseImage from './lib/parsers/parse-image';\nimport {getBinaryImageMetadata} from './lib/category-api/binary-image-api';\n\nconst EXTENSIONS = ['png', 'jpg', 'jpeg', 'gif', 'webp', 'bmp', 'ico', 'svg'];\nconst MIME_TYPES = [\n  'image/png',\n  'image/jpeg',\n  'image/gif',\n  'image/webp',\n  'image/bmp',\n  'image/vnd.microsoft.icon',\n  'image/svg+xml'\n];\n\n/**\n * Loads a platform-specific image type\n * Note: This type can be used as input data to WebGL texture creation\n */\nexport const ImageLoader = {\n  id: 'image',\n  module: 'images',\n  name: 'Images',\n  version: VERSION,\n  mimeTypes: MIME_TYPES,\n  extensions: EXTENSIONS,\n  parse: parseImage,\n  // TODO: byteOffset, byteLength;\n  tests: [(arrayBuffer) => Boolean(getBinaryImageMetadata(new DataView(arrayBuffer)))],\n  options: {\n    image: {\n      type: 'auto',\n      decode: true // if format is HTML\n    }\n    // imagebitmap: {} - passes (platform dependent) parameters to ImageBitmap constructor\n  }\n};\n\nexport const _typecheckImageLoader: LoaderWithParser = ImageLoader;\n","import {isSVG, getBlob} from './svg-utils';\nimport parseToImage from './parse-to-image';\n\nconst EMPTY_OBJECT = {};\n\nlet imagebitmapOptionsSupported = true;\n\n/**\n * Asynchronously parses an array buffer into an ImageBitmap - this contains the decoded data\n * ImageBitmaps are supported on worker threads, but not supported on Edge, IE11 and Safari\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap#Browser_compatibility\n *\n * TODO - createImageBitmap supports source rect (5 param overload), pass through?\n */\nexport default async function parseToImageBitmap(arrayBuffer, options, url) {\n  let blob;\n\n  // Cannot parse SVG directly to ImageBitmap, parse to Image first\n  if (isSVG(url)) {\n    // Note: this only works on main thread\n    const image = await parseToImage(arrayBuffer, options, url);\n    blob = image;\n  } else {\n    // Create blob from the array buffer\n    blob = getBlob(arrayBuffer, url);\n  }\n\n  const imagebitmapOptions = options && options.imagebitmap;\n\n  return await safeCreateImageBitmap(blob, imagebitmapOptions);\n}\n\n/**\n * Safely creates an imageBitmap with options\n * *\n * Firefox crashes if imagebitmapOptions is supplied\n * Avoid supplying if not provided or supported, remember if not supported\n */\nasync function safeCreateImageBitmap(blob, imagebitmapOptions = null) {\n  if (isEmptyObject(imagebitmapOptions) || !imagebitmapOptionsSupported) {\n    imagebitmapOptions = null;\n  }\n\n  if (imagebitmapOptions) {\n    try {\n      // @ts-ignore Options\n      return await createImageBitmap(blob, imagebitmapOptions);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n      imagebitmapOptionsSupported = false;\n    }\n  }\n\n  return await createImageBitmap(blob);\n}\n\nfunction isEmptyObject(object) {\n  // @ts-ignore\n  for (const key in object || EMPTY_OBJECT) {\n    return false;\n  }\n  return true;\n}\n","import {global} from '../utils/globals';\nimport {assert} from '../utils/assert';\nimport {getBinaryImageMetadata} from '../category-api/binary-image-api';\n\n// Use polyfills if installed to p[arsed image using get-pixels\nexport default function parseToNodeImage(arrayBuffer, options) {\n  const {mimeType} = getBinaryImageMetadata(arrayBuffer) || {};\n\n  // @ts-ignore\n  const {_parseImageNode} = global;\n  assert(_parseImageNode); // '@loaders.gl/polyfills not installed'\n\n  return _parseImageNode(arrayBuffer, mimeType, options);\n}\n","// import type {Writer} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {encodeImage} from './lib/encoders/encode-image';\n\nexport const ImageWriter = {\n  name: 'Images',\n  id: 'image',\n  module: 'images',\n  version: VERSION,\n  extensions: ['jpeg'],\n  options: {\n    image: {\n      mimeType: 'image/png',\n      jpegQuality: null\n    }\n  },\n  encode: encodeImage\n};\n","// Image loading/saving for browser and Node.js\nimport {global} from '../utils/globals';\nimport {getImageSize} from '../category-api/parsed-image-api';\n\n// @ts-ignore TS2339: Property does not exist on type\nconst {_encodeImageNode} = global;\n\n/**\n * Returns data bytes representing a compressed image in PNG or JPG format,\n * This data can be saved using file system (f) methods or used in a request.\n * @param image - ImageBitmap Image or Canvas\n * @param options\n * param opt.type='png' - png, jpg or image/png, image/jpg are valid\n * param mimeType= - Whether to include a data URI header\n */\nexport async function encodeImage(\n  image: any,\n  options?: {[key: string]: any}\n): Promise<ArrayBuffer> {\n  options = options || {};\n  options.image = options.image || ({} as {[key: string]: any});\n\n  return _encodeImageNode\n    ? _encodeImageNode(image, {type: options.image.mimeType})\n    : encodeImageInBrowser(image, options);\n}\n\n// In case we get exceptions from canvas.toBlob(resolve, type, quality)\nlet qualityParamSupported = true;\n\n/**\n *\n * @param image\n * @param options\n * @note Based on canvas.toBlob\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob\n */\nasync function encodeImageInBrowser(image, options) {\n  const {mimeType, jpegQuality} = options.image;\n\n  const {width, height} = getImageSize(image);\n\n  // create a canvas and resize it to the size of our image\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n\n  drawImageToCanvas(image, canvas);\n\n  // The actual encoding is done asynchronously with `canvas.toBlob()`\n  const blob = await new Promise<Blob | null>((resolve) => {\n    // get it back as a Blob\n    if (jpegQuality && qualityParamSupported) {\n      try {\n        canvas.toBlob(resolve, mimeType, jpegQuality);\n        return;\n      } catch (error) {\n        qualityParamSupported = false;\n      }\n    }\n    canvas.toBlob(resolve, mimeType);\n  });\n\n  if (!blob) {\n    throw new Error('image encoding failed');\n  }\n\n  return await blob.arrayBuffer();\n}\n\nfunction drawImageToCanvas(image, canvas, x = 0, y = 0) {\n  // Try optimized path for ImageBitmaps via bitmaprenderer context\n  if (x === 0 && y === 0 && typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    const context = canvas.getContext('bitmaprenderer');\n    if (context) {\n      // transfer the ImageBitmap to it\n      context.transferFromImageBitmap(image);\n      return canvas;\n    }\n  }\n\n  // Available on most platforms, except IE11 and Andriod WebViews...\n  const context = canvas.getContext('2d');\n  if (image.data) {\n    // ImageData constructor expects clamped array even though getImageData does not return a clamped array...\n    const clampedArray = new Uint8ClampedArray(image.data);\n    const imageData = new ImageData(clampedArray, image.width, image.height);\n    context.putImageData(imageData, 0, 0);\n    return canvas;\n  }\n\n  // Fall back to generic image/image bitmap rendering path\n  context.drawImage(image, 0, 0);\n  return canvas;\n}\n","import {assert} from '../utils/assert';\nimport parseImage from '../parsers/parse-image';\nimport {getImageSize} from '../category-api/parsed-image-api';\nimport {generateUrl} from './generate-url';\nimport {deepLoad, shallowLoad} from './deep-load';\n\nexport async function loadImage(getUrl, options = {}) {\n  const imageUrls = await getImageUrls(getUrl, options);\n  return await deepLoad(imageUrls, parseImage, options);\n}\n\nexport async function getImageUrls(getUrl, options, urlOptions = {}) {\n  const mipLevels = (options && options.image && options.image.mipLevels) || 0;\n  return mipLevels !== 0\n    ? await getMipmappedImageUrls(getUrl, mipLevels, options, urlOptions)\n    : generateUrl(getUrl, options, urlOptions);\n}\n\nasync function getMipmappedImageUrls(getUrl, mipLevels, options, urlOptions) {\n  const urls: string[] = [];\n\n  // If no mip levels supplied, we need to load the level 0 image and calculate based on size\n  if (mipLevels === 'auto') {\n    const url = generateUrl(getUrl, options, {...urlOptions, lod: 0});\n    const image = await shallowLoad(url, parseImage, options);\n\n    const {width, height} = getImageSize(image);\n    mipLevels = getMipLevels({width, height});\n\n    // TODO - push image and make `deepLoad` pass through non-url values, avoid loading twice?\n    urls.push(url);\n  }\n\n  // We now know how many mipLevels we need, remaining image urls can now be constructed\n  assert(mipLevels > 0);\n\n  for (let mipLevel = urls.length; mipLevel < mipLevels; ++mipLevel) {\n    const url = generateUrl(getUrl, options, {...urlOptions, lod: mipLevel});\n    urls.push(url);\n  }\n\n  return urls;\n}\n\n// Calculates number of mipmaps based on texture size (log2)\nexport function getMipLevels({width, height}) {\n  return 1 + Math.floor(Math.log2(Math.max(width, height)));\n}\n","import {resolvePath} from '@loaders.gl/loader-utils';\nimport {assert} from '../utils/assert';\n\n// Generate a url by calling getUrl with mix of options, applying options.baseUrl\nexport function generateUrl(getUrl, options, urlOptions) {\n  // Get url\n  let url = getUrl;\n  if (typeof getUrl === 'function') {\n    url = getUrl({...options, ...urlOptions});\n  }\n  assert(typeof url === 'string');\n\n  // Apply options.baseUrl\n  const {baseUrl} = options;\n  if (baseUrl) {\n    url = baseUrl[baseUrl.length - 1] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n  }\n\n  return resolvePath(url);\n}\n","import {asyncDeepMap} from './async-deep-map';\n\nexport async function deepLoad(urlTree, load, options) {\n  return await asyncDeepMap(urlTree, (url) => shallowLoad(url, load, options));\n}\n\nexport async function shallowLoad(url, load, options) {\n  // console.error('loading', url);\n  const response = await fetch(url, options.fetch);\n  const arrayBuffer = await response.arrayBuffer();\n  return await load(arrayBuffer, options);\n}\n","/*\nAsynchronously maps a deep structure of values (e.g. objects and arrays of urls).\n\nE.g. a mipmapped cubemap\n{\n  [CUBE_FACE_FRONT]: [\n    \"image-front-0.jpg\",\n    \"image-front-1.jpg\",\n    \"image-front-2.jpg\",\n  ],\n  [CUBE_MAP_BACK]: [\n    ...\n  ]\n}\n*/\n\nconst isObject = (value) => value && typeof value === 'object';\n\n// Loads a deep structure of urls (objects and arrays of urls)\n// Returns an object with six key-value pairs containing the images (or image mip arrays)\n// for each cube face\nexport async function asyncDeepMap(tree, func, options = {}) {\n  return await mapSubtree(tree, func, options);\n}\n\nexport async function mapSubtree(object, func, options) {\n  if (Array.isArray(object)) {\n    return await mapArray(object, func, options);\n  }\n\n  if (isObject(object)) {\n    return await mapObject(object, func, options);\n  }\n\n  // TODO - ignore non-urls, non-arraybuffers?\n  const url = object;\n  return await func(url, options);\n}\n\n// HELPERS\n\nasync function mapObject(object, func, options) {\n  const promises: Promise<any>[] = [];\n  const values = {};\n\n  for (const key in object) {\n    const url = object[key];\n    const promise = mapSubtree(url, func, options).then((value) => {\n      values[key] = value;\n    });\n    promises.push(promise);\n  }\n\n  await Promise.all(promises);\n\n  return values;\n}\n\nasync function mapArray(urlArray, func, options = {}) {\n  const promises = urlArray.map((url) => mapSubtree(url, func, options));\n  return await Promise.all(promises);\n}\n","import {resolvePath, assert} from '@loaders.gl/loader-utils';\n\n// Generate a url by calling getUrl with mix of options, applying options.baseUrl\nexport function generateUrl(getUrl, options, urlOptions) {\n  // Get url\n  let url = getUrl;\n  if (typeof getUrl === 'function') {\n    url = getUrl({...options, ...urlOptions});\n  }\n  assert(typeof url === 'string');\n\n  // Apply options.baseUrl\n  const {baseUrl} = options;\n  if (baseUrl) {\n    url = baseUrl[baseUrl.length - 1] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n  }\n\n  return resolvePath(url);\n}\n","/*\nAsynchronously maps a deep structure of values (e.g. objects and arrays of urls).\n\nE.g. a mipmapped cubemap\n{\n  [CUBE_FACE_FRONT]: [\n    \"image-front-0.jpg\",\n    \"image-front-1.jpg\",\n    \"image-front-2.jpg\",\n  ],\n  [CUBE_MAP_BACK]: [\n    ...\n  ]\n}\n*/\n\nconst isObject = (value) => value && typeof value === 'object';\n\n// Loads a deep structure of urls (objects and arrays of urls)\n// Returns an object with six key-value pairs containing the images (or image mip arrays)\n// for each cube face\nexport async function asyncDeepMap(tree, func, options = {}) {\n  return await mapSubtree(tree, func, options);\n}\n\nexport async function mapSubtree(object, func, options) {\n  if (Array.isArray(object)) {\n    return await mapArray(object, func, options);\n  }\n\n  if (isObject(object)) {\n    return await mapObject(object, func, options);\n  }\n\n  // TODO - ignore non-urls, non-arraybuffers?\n  const url = object;\n  return await func(url, options);\n}\n\n// HELPERS\n\nasync function mapObject(object, func, options) {\n  const promises: Promise<any>[] = [];\n  const values = {};\n\n  for (const key in object) {\n    const url = object[key];\n    const promise = mapSubtree(url, func, options).then((value) => {\n      values[key] = value;\n    });\n    promises.push(promise);\n  }\n\n  await Promise.all(promises);\n\n  return values;\n}\n\nasync function mapArray(urlArray, func, options = {}) {\n  const promises = urlArray.map((url) => mapSubtree(url, func, options));\n  return await Promise.all(promises);\n}\n","import {ImageLoader} from '@loaders.gl/images';\nimport {getImageUrls} from './load-image';\nimport {deepLoad} from './deep-load';\n\nexport async function loadImageTextureArray(count, getUrl, options = {}) {\n  const imageUrls = await getImageArrayUrls(count, getUrl, options);\n  return await deepLoad(imageUrls, ImageLoader.parse, options);\n}\n\nexport async function getImageArrayUrls(count, getUrl, options = {}) {\n  const promises: Promise<any>[] = [];\n  for (let index = 0; index < count; index++) {\n    const promise = getImageUrls(getUrl, options, {index});\n    promises.push(promise);\n  }\n  return await Promise.all(promises);\n}\n","import {ImageLoader} from '@loaders.gl/images';\nimport {getImageUrls} from './load-image';\nimport {deepLoad} from './deep-load';\n\n// Returned map will be have keys corresponding to GL cubemap constants\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;\nconst GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;\nconst GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851a;\n\nconst CUBE_FACES = [\n  {face: GL_TEXTURE_CUBE_MAP_POSITIVE_X, direction: 'right', axis: 'x', sign: 'positive'},\n  {face: GL_TEXTURE_CUBE_MAP_NEGATIVE_X, direction: 'left', axis: 'x', sign: 'negative'},\n  {face: GL_TEXTURE_CUBE_MAP_POSITIVE_Y, direction: 'top', axis: 'y', sign: 'positive'},\n  {face: GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, direction: 'bottom', axis: 'y', sign: 'negative'},\n  {face: GL_TEXTURE_CUBE_MAP_POSITIVE_Z, direction: 'front', axis: 'z', sign: 'positive'},\n  {face: GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, direction: 'back', axis: 'z', sign: 'negative'}\n];\n\n// Returns an object with six key-value pairs containing the urls (or url mip arrays)\n// for each cube face\nexport async function getImageCubeUrls(getUrl, options) {\n  // Calculate URLs\n  const urls = {};\n  const promises: Promise<any>[] = [];\n\n  let index = 0;\n  for (let i = 0; i < CUBE_FACES.length; ++i) {\n    const face = CUBE_FACES[index];\n    const promise = getImageUrls(getUrl, options, {...face, index: index++}).then((url) => {\n      urls[face.face] = url;\n    });\n    promises.push(promise);\n  }\n\n  await Promise.all(promises);\n\n  return urls;\n}\n\n// Returns an object with six key-value pairs containing the images (or image mip arrays)\n// for each cube face\nexport async function loadImageTextureCube(getUrl, options = {}) {\n  const urls = await getImageCubeUrls(getUrl, options);\n  return await deepLoad(urls, ImageLoader.parse, options);\n}\n","import type {GPUTextureFormat} from '../../types';\n\nconst BROWSER_PREFIXES = ['', 'WEBKIT_', 'MOZ_'];\n\nconst WEBGL_EXTENSIONS: {[key: string]: GPUTextureFormat} = {\n  /* eslint-disable camelcase */\n  WEBGL_compressed_texture_s3tc: 'dxt',\n  WEBGL_compressed_texture_s3tc_srgb: 'dxt-srgb',\n  WEBGL_compressed_texture_etc1: 'etc1',\n  WEBGL_compressed_texture_etc: 'etc2',\n  WEBGL_compressed_texture_pvrtc: 'pvrtc',\n  WEBGL_compressed_texture_atc: 'atc',\n  WEBGL_compressed_texture_astc: 'astc',\n  EXT_texture_compression_rgtc: 'rgtc'\n  /* eslint-enable camelcase */\n};\n\nlet formats: Set<GPUTextureFormat> | null = null;\n\n/**\n * Returns a list of formats.\n * Creates a temporary WebGLRenderingContext if none is provided.\n *\n * @param gl - Optional context.\n */\nexport function getSupportedGPUTextureFormats(gl?: WebGLRenderingContext): Set<string> {\n  if (!formats) {\n    gl = gl || getWebGLContext() || undefined;\n\n    formats = new Set<GPUTextureFormat>();\n\n    for (const prefix of BROWSER_PREFIXES) {\n      for (const extension in WEBGL_EXTENSIONS) {\n        // eslint-disable-next-line max-depth\n        if (gl && gl.getExtension(`${prefix}${extension}`)) {\n          const gpuTextureFormat = WEBGL_EXTENSIONS[extension];\n          formats.add(gpuTextureFormat);\n        }\n      }\n    }\n  }\n\n  return formats;\n}\n\n/**\n * @returns {WebGLRenderingContext?}\n */\nfunction getWebGLContext() {\n  try {\n    const canvas = document.createElement('canvas');\n    return canvas.getContext('webgl');\n  } catch (error) {\n    return null;\n  }\n}\n","import getHiResTimestamp from '../utils/hi-res-timestamp';\nexport default class Stat {\n  constructor(name, type) {\n    this.name = name;\n    this.type = type;\n    this.sampleSize = 1;\n    this.reset();\n  }\n\n  setSampleSize(samples) {\n    this.sampleSize = samples;\n    return this;\n  }\n\n  incrementCount() {\n    this.addCount(1);\n    return this;\n  }\n\n  decrementCount() {\n    this.subtractCount(1);\n    return this;\n  }\n\n  addCount(value) {\n    this._count += value;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  subtractCount(value) {\n    this._count -= value;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  addTime(time) {\n    this._time += time;\n    this.lastTiming = time;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  timeStart() {\n    this._startTime = getHiResTimestamp();\n    this._timerPending = true;\n    return this;\n  }\n\n  timeEnd() {\n    if (!this._timerPending) {\n      return this;\n    }\n\n    this.addTime(getHiResTimestamp() - this._startTime);\n    this._timerPending = false;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  getSampleAverageCount() {\n    return this.sampleSize > 0 ? this.lastSampleCount / this.sampleSize : 0;\n  }\n\n  getSampleAverageTime() {\n    return this.sampleSize > 0 ? this.lastSampleTime / this.sampleSize : 0;\n  }\n\n  getSampleHz() {\n    return this.lastSampleTime > 0 ? this.sampleSize / (this.lastSampleTime / 1000) : 0;\n  }\n\n  getAverageCount() {\n    return this.samples > 0 ? this.count / this.samples : 0;\n  }\n\n  getAverageTime() {\n    return this.samples > 0 ? this.time / this.samples : 0;\n  }\n\n  getHz() {\n    return this.time > 0 ? this.samples / (this.time / 1000) : 0;\n  }\n\n  reset() {\n    this.time = 0;\n    this.count = 0;\n    this.samples = 0;\n    this.lastTiming = 0;\n    this.lastSampleTime = 0;\n    this.lastSampleCount = 0;\n    this._count = 0;\n    this._time = 0;\n    this._samples = 0;\n    this._startTime = 0;\n    this._timerPending = false;\n    return this;\n  }\n\n  _checkSampling() {\n    if (this._samples === this.sampleSize) {\n      this.lastSampleTime = this._time;\n      this.lastSampleCount = this._count;\n      this.count += this._count;\n      this.time += this._time;\n      this.samples += this._samples;\n      this._time = 0;\n      this._count = 0;\n      this._samples = 0;\n    }\n  }\n\n}\n//# sourceMappingURL=stat.js.map","import Stat from './stat';\nexport default class Stats {\n  constructor({\n    id,\n    stats\n  }) {\n    this.id = id;\n    this.stats = {};\n\n    this._initializeStats(stats);\n\n    Object.seal(this);\n  }\n\n  get(name, type = 'count') {\n    return this._getOrCreate({\n      name,\n      type\n    });\n  }\n\n  get size() {\n    return Object.keys(this.stats).length;\n  }\n\n  reset() {\n    for (const key in this.stats) {\n      this.stats[key].reset();\n    }\n\n    return this;\n  }\n\n  forEach(fn) {\n    for (const key in this.stats) {\n      fn(this.stats[key]);\n    }\n  }\n\n  getTable() {\n    const table = {};\n    this.forEach(stat => {\n      table[stat.name] = {\n        time: stat.time || 0,\n        count: stat.count || 0,\n        average: stat.getAverageTime() || 0,\n        hz: stat.getHz() || 0\n      };\n    });\n    return table;\n  }\n\n  _initializeStats(stats = []) {\n    stats.forEach(stat => this._getOrCreate(stat));\n  }\n\n  _getOrCreate(stat) {\n    if (!stat || !stat.name) {\n      return null;\n    }\n\n    const {\n      name,\n      type\n    } = stat;\n\n    if (!this.stats[name]) {\n      if (stat instanceof Stat) {\n        this.stats[name] = stat;\n      } else {\n        this.stats[name] = new Stat(name, type);\n      }\n    }\n\n    return this.stats[name];\n  }\n\n}\n//# sourceMappingURL=stats.js.map"],"sourceRoot":""}
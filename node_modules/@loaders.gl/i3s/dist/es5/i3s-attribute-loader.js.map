{"version":3,"sources":["../../src/i3s-attribute-loader.ts"],"names":["VERSION","EMPTY_VALUE","REJECTED_STATUS","I3SAttributeLoader","name","id","module","version","mimeTypes","parse","extensions","options","binary","data","loadFeatureAttributes","tile","featureId","getAttributesData","attributeStorageInfo","attributeUrls","attributes","attributeLoadPromises","index","length","url","i3s","token","attributeName","attributeType","getAttributeValueType","loadOptions","promise","push","Promise","allSettled","generateAttributesByFeatureId","tileset","header","attribute","hasOwnProperty","attributeValues","valueType","objectIds","find","value","OBJECTID","attributeIndex","indexOf","getFeatureAttributesByIndex","featureIdIndex","attributesObject","getAttributeByIndexAndAttributeName","formatAttributeValue","attributesName","attributeObject","status","toString","replace","trim"],"mappings":"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","sourcesContent":["import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {load} from '@loaders.gl/core';\nimport {parseI3STileAttribute} from './lib/parsers/parse-i3s-attribute';\nimport {getUrlWithToken} from './lib/utils/url-utils';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\nconst EMPTY_VALUE = '';\nconst REJECTED_STATUS = 'rejected';\n/**\n * Loader for I3S attributes\n */\nexport const I3SAttributeLoader: LoaderWithParser = {\n  name: 'I3S Attribute',\n  id: 'i3s-attribute',\n  module: 'i3s',\n  version: VERSION,\n  mimeTypes: ['application/binary'],\n  parse,\n  extensions: ['bin'],\n  options: {},\n  binary: true\n};\n\nasync function parse(data, options) {\n  data = parseI3STileAttribute(data, options);\n  return data;\n}\n\n/**\n * Load attributes based on feature id\n * @param {Object} tile\n * @param {number} featureId\n * @param {Object} options\n * @returns {Promise}\n */\n// eslint-disable-next-line complexity\nexport async function loadFeatureAttributes(tile, featureId, options = {}) {\n  const {attributeStorageInfo, attributeUrls} = getAttributesData(tile);\n\n  if (!attributeStorageInfo || !attributeUrls || !featureId) {\n    return null;\n  }\n\n  let attributes: object[] = [];\n  const attributeLoadPromises: Promise<object>[] = [];\n\n  for (let index = 0; index < attributeStorageInfo.length; index++) {\n    // @ts-ignore\n    const url = getUrlWithToken(attributeUrls[index], options.i3s?.token);\n    const attributeName = attributeStorageInfo[index].name;\n    const attributeType = getAttributeValueType(attributeStorageInfo[index]);\n    const loadOptions = {...options, attributeName, attributeType};\n    const promise = load(url, I3SAttributeLoader, loadOptions);\n\n    attributeLoadPromises.push(promise);\n  }\n  try {\n    attributes = await Promise.allSettled(attributeLoadPromises);\n  } catch (error) {\n    // do nothing\n  }\n\n  if (!attributes.length) {\n    return null;\n  }\n\n  return generateAttributesByFeatureId(attributes, attributeStorageInfo, featureId);\n}\n\nfunction getAttributesData(tile) {\n  const attributeStorageInfo =\n    tile && tile.tileset && tile.tileset.tileset && tile.tileset.tileset.attributeStorageInfo;\n  const attributeUrls = tile && tile.header && tile.header.attributeUrls;\n\n  return {attributeStorageInfo, attributeUrls};\n}\n\n/**\n * Get attribute value type based on property names\n * @param {Object} attribute\n * @returns {String}\n */\nfunction getAttributeValueType(attribute) {\n  if (attribute.hasOwnProperty('objectIds')) {\n    return 'Oid32';\n  } else if (attribute.hasOwnProperty('attributeValues')) {\n    return attribute.attributeValues.valueType;\n  }\n  return '';\n}\n\n/**\n * Generates mapping featureId to feature attributes\n * @param {Array} attributes\n * @param {Object} attributeStorageInfo\n * @param {number} featureId\n * @returns {Object}\n */\nfunction generateAttributesByFeatureId(attributes, attributeStorageInfo, featureId) {\n  const objectIds = attributes.find((attribute) => attribute.value.OBJECTID);\n\n  if (!objectIds) {\n    return null;\n  }\n\n  const attributeIndex = objectIds.value.OBJECTID.indexOf(featureId);\n\n  if (attributeIndex < 0) {\n    return null;\n  }\n\n  return getFeatureAttributesByIndex(attributes, attributeIndex, attributeStorageInfo);\n}\n\n/**\n * Generates attribute object for feature mapping by feature id\n * @param {Array} attributes\n * @param {Number} featureIdIndex\n * @param {Object} attributeStorageInfo\n * @returns {Object}\n */\nfunction getFeatureAttributesByIndex(attributes, featureIdIndex, attributeStorageInfo) {\n  const attributesObject = {};\n\n  for (let index = 0; index < attributeStorageInfo.length; index++) {\n    const attributeName = attributeStorageInfo[index].name;\n    const attribute = getAttributeByIndexAndAttributeName(attributes, index, attributeName);\n    attributesObject[attributeName] = formatAttributeValue(attribute, featureIdIndex);\n  }\n\n  return attributesObject;\n}\n\n/**\n * Return attribute value if it presents in atrributes list\n * @param {array} attributes\n * @param {number} index\n * @param {string} attributesName\n */\nfunction getAttributeByIndexAndAttributeName(attributes, index, attributesName) {\n  const attributeObject = attributes[index];\n\n  if (attributeObject.status === REJECTED_STATUS) {\n    return null;\n  }\n\n  return attributeObject.value[attributesName];\n}\n\n/**\n * Do formatting of attribute values or return empty string.\n * @param {Array} attribute\n * @param {Number} featureIdIndex\n * @returns {String}\n */\nfunction formatAttributeValue(attribute, featureIdIndex) {\n  return attribute && attribute[featureIdIndex]\n    ? attribute[featureIdIndex]\n      .toString()\n    // eslint-disable-next-line no-control-regex\n      .replace(/\\u0000/g, '')\n      .trim()\n    : EMPTY_VALUE;\n}\n"],"file":"i3s-attribute-loader.js"}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///../worker-utils/src/lib/env-utils/globals.ts","webpack:////home/user/apps/loaders.gl/node_modules/probe.gl/dist/esm/env/globals.js","webpack:////home/user/apps/loaders.gl/node_modules/process/browser.js","webpack:///(webpack)/buildin/global.js","webpack:///../images/src/lib/utils/globals.ts","webpack:////home/user/apps/loaders.gl/node_modules/probe.gl/dist/esm/env/is-browser.js","webpack:////home/user/apps/loaders.gl/node_modules/probe.gl/dist/esm/env/is-electron.js","webpack:///./src/bundle.ts","webpack:///../core/src/javascript-utils/is-type.ts","webpack:///../loader-utils/src/lib/env-utils/assert.ts","webpack:///../core/src/lib/loader-utils/normalize-loader.ts","webpack:///../loader-utils/src/lib/path-utils/file-aliases.ts","webpack:///../core/src/lib/utils/mime-type-utils.ts","webpack:///../core/src/lib/utils/resource-utils.ts","webpack:///../core/src/lib/utils/response-utils.ts","webpack:///../core/src/lib/fetch/fetch-file.ts","webpack:////home/user/apps/loaders.gl/node_modules/probe.gl/dist/esm/utils/globals.js","webpack:////home/user/apps/loaders.gl/node_modules/probe.gl/dist/esm/utils/local-storage.js","webpack:////home/user/apps/loaders.gl/node_modules/probe.gl/dist/esm/utils/formatters.js","webpack:////home/user/apps/loaders.gl/node_modules/probe.gl/dist/esm/utils/color.js","webpack:////home/user/apps/loaders.gl/node_modules/probe.gl/dist/esm/utils/assert.js","webpack:////home/user/apps/loaders.gl/node_modules/probe.gl/dist/esm/utils/hi-res-timestamp.js","webpack:////home/user/apps/loaders.gl/node_modules/probe.gl/dist/esm/lib/log.js","webpack:////home/user/apps/loaders.gl/node_modules/probe.gl/dist/esm/utils/autobind.js","webpack:///../core/src/lib/loader-utils/loggers.ts","webpack:///../core/src/lib/loader-utils/option-defaults.ts","webpack:///../core/src/lib/loader-utils/option-utils.ts","webpack:///../worker-utils/src/lib/env-utils/assert.ts","webpack:///../worker-utils/src/lib/worker-utils/get-loadable-worker-url.ts","webpack:///../worker-utils/src/lib/worker-utils/get-transfer-list.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-thread.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-job.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-pool.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-farm.ts","webpack:///../loader-utils/src/lib/worker-loader-utils/parse-with-worker.ts","webpack:///../worker-utils/src/lib/worker-api/get-worker-url.ts","webpack:///../loader-utils/src/lib/binary-utils/array-buffer-utils.ts","webpack:///../loader-utils/src/lib/binary-utils/buffer-utils.ts","webpack:///../loader-utils/src/lib/iterators/async-iteration.ts","webpack:///../core/src/iterators/make-iterator/make-array-buffer-iterator.ts","webpack:///../core/src/iterators/make-iterator/make-stream-iterator.ts","webpack:///../core/src/iterators/make-iterator/make-iterator.ts","webpack:///../core/src/iterators/make-iterator/make-string-iterator.ts","webpack:///../core/src/iterators/make-iterator/make-blob-iterator.ts","webpack:///../core/src/lib/loader-utils/get-data.ts","webpack:///../core/src/lib/api/register-loaders.ts","webpack:///../core/src/lib/api/select-loader.ts","webpack:///../core/src/lib/api/parse.ts","webpack:///../core/src/lib/loader-utils/loader-context.ts","webpack:///../worker-utils/src/lib/worker-api/validate-worker-version.ts","webpack:///../worker-utils/src/lib/env-utils/version.ts","webpack:///../core/src/lib/api/load.ts","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/core/dist/esm/lib/assert.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/core/dist/esm/lib/common.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/core/dist/esm/classes/base/math-array.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/core/dist/esm/lib/validators.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/core/dist/esm/classes/base/vector.js","webpack:////home/user/apps/loaders.gl/node_modules/gl-matrix/esm/common.js","webpack:////home/user/apps/loaders.gl/node_modules/gl-matrix/esm/vec3.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/core/dist/esm/lib/gl-matrix-extras.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/core/dist/esm/classes/vector3.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/core/dist/esm/classes/base/matrix.js","webpack:////home/user/apps/loaders.gl/node_modules/gl-matrix/esm/mat4.js","webpack:////home/user/apps/loaders.gl/node_modules/gl-matrix/esm/vec2.js","webpack:////home/user/apps/loaders.gl/node_modules/gl-matrix/esm/vec4.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/core/dist/esm/classes/matrix4.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/core/dist/esm/lib/math-utils.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/geospatial/dist/esm/constants.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/geospatial/dist/esm/type-utils.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/geospatial/dist/esm/ellipsoid/helpers/scale-to-geodetic-surface.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/geospatial/dist/esm/ellipsoid/helpers/ellipsoid-transform.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/geospatial/dist/esm/ellipsoid/ellipsoid.js","webpack:///../images/src/lib/utils/assert.js","webpack:///../images/src/lib/category-api/image-type.ts","webpack:///../images/src/lib/category-api/parsed-image-api.ts","webpack:///../images/src/lib/parsers/svg-utils.ts","webpack:///../images/src/lib/parsers/parse-to-image.ts","webpack:///../images/src/lib/parsers/parse-to-image-bitmap.ts","webpack:///../images/src/lib/category-api/binary-image-api.ts","webpack:///../images/src/image-loader.ts","webpack:///../images/src/lib/utils/version.ts","webpack:///../images/src/lib/parsers/parse-image.ts","webpack:///../images/src/lib/parsers/parse-to-node-image.ts","webpack:///../draco/src/draco-loader.ts","webpack:///../draco/src/lib/utils/version.ts","webpack:///../schema/src/lib/schema/impl/schema.ts","webpack:///../schema/src/lib/utils/assert.ts","webpack:///../schema/src/lib/schema/impl/enum.ts","webpack:///../schema/src/lib/schema/impl/type.ts","webpack:///../schema/src/lib/schema/impl/field.ts","webpack:///../draco/src/lib/utils/schema-attribute-utils.ts","webpack:///../schema/src/lib/schema-utils/type-utils.ts","webpack:///../draco/src/lib/draco-parser.ts","webpack:///../schema/src/category/mesh/mesh-utils.ts","webpack:///../worker-utils/src/lib/library-utils/library-utils.ts","webpack:///../draco/src/lib/draco-module-loader.ts","webpack:///../draco/src/index.ts","webpack:////home/user/apps/loaders.gl/node_modules/ktx-parse/dist/ktx-parse.modern.js","webpack:///../textures/src/lib/utils/extract-mipmap-images.ts","webpack:///../textures/src/lib/gl-constants.ts","webpack:///../textures/src/lib/utils/ktx-format-helper.ts","webpack:///../textures/src/lib/parsers/parse-ktx.js","webpack:///../textures/src/lib/parsers/parse-dds.ts","webpack:///../textures/src/lib/parsers/parse-pvr.ts","webpack:///../textures/src/lib/parsers/parse-compressed-texture.ts","webpack:///../textures/src/compressed-texture-loader.ts","webpack:///../textures/src/lib/utils/version.ts","webpack:///./src/lib/utils/url-utils.ts","webpack:///./node_modules/@luma.gl/constants/dist/esm/index.js","webpack:///./src/lib/parsers/constants.ts","webpack:///./src/lib/parsers/parse-i3s-tile-content.ts","webpack:///./src/i3s-content-loader.ts","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/culling/dist/esm/constants.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/culling/dist/esm/lib/bounding-volumes/axis-aligned-bounding-box.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/culling/dist/esm/lib/bounding-volumes/bounding-sphere.js","webpack:////home/user/apps/loaders.gl/node_modules/gl-matrix/esm/mat3.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/core/dist/esm/classes/matrix3.js","webpack:////home/user/apps/loaders.gl/node_modules/gl-matrix/esm/quat.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/core/dist/esm/classes/quaternion.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/culling/dist/esm/lib/bounding-volumes/oriented-bounding-box.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/culling/dist/esm/lib/plane.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/culling/dist/esm/lib/culling-volume.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/culling/dist/esm/lib/perspective-off-center-frustum.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/culling/dist/esm/lib/algorithms/bounding-sphere-from-points.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/culling/dist/esm/lib/algorithms/compute-eigen-decomposition.js","webpack:////home/user/apps/loaders.gl/node_modules/@math.gl/culling/dist/esm/lib/algorithms/bounding-box-from-points.js","webpack:///../tiles/src/constants.ts","webpack:///../textures/src/lib/utils/texture-formats.ts","webpack:///./src/i3s-node-page-loader.ts","webpack:///./src/lib/helpers/i3s-nodepages-tiles.ts","webpack:///./src/lib/parsers/parse-i3s.ts","webpack:///./src/i3s-loader.ts","webpack:///./src/lib/parsers/parse-i3s-attribute.ts","webpack:///./src/i3s-attribute-loader.ts","webpack:///../loader-utils/src/lib/env-utils/globals.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","globals","self","global","document","global_","isBrowser","process","String","browser","isWorker","importScripts","isMobile","orientation","matches","version","exec","parseFloat","window_","process_","console","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g","Function","isElectron","mockUserAgent","type","Boolean","electron","realUserAgent","navigator","userAgent","indexOf","moduleExports","require","_global","loaders","assign","isBoolean","x","isFunction","isObject","isPureObject","constructor","isIterable","iterator","isAsyncIterable","asyncIterator","isResponse","Response","arrayBuffer","text","json","isBlob","Blob","isReadableStream","ReadableStream","tee","cancel","getReader","isReadableDOMStream","read","pipe","readable","isReadableNodeStream","assert","condition","message","isLoaderObject","loader","isArray","extensions","normalizeLoader","options","parseTextSync","parseText","binary","pathPrefix","fileAliases","DATA_URL_PATTERN","MIME_TYPE_PATTERN","parseMIMEType","mimeString","parseMIMETypeFromURL","url","QUERY_STRING_PATTERN","getResourceUrlAndType","resource","stripQueryString","headers","replace","async","makeResponse","contentLength","size","ArrayBuffer","isView","byteLength","getResourceContentLength","initialDataUrl","slice","blobSlice","Promise","resolve","reader","FileReader","onload","event","target","result","readAsDataURL","buffer","bytes","Uint8Array","fromCharCode","btoa","arrayBufferToBase64","getInitialDataUrl","TextEncoder","encode","response","checkResponse","ok","status","contentType","statusText","includes","error","getResponseError","fetchFile","filename","alias","startsWith","replacement","resolvePath","fetchOptions","fetch","LocalStorage","id","defaultSettings","storage","setItem","removeItem","getStorage","config","_loadConfiguration","configuration","updateConfiguration","serialized","JSON","stringify","serializedConfiguration","getItem","parse","formatImage","image","scale","maxWidth","imageUrl","src","width","Math","min","height","style","floor","join","COLOR","BLACK","RED","GREEN","YELLOW","BLUE","MAGENTA","CYAN","WHITE","BRIGHT_BLACK","BRIGHT_RED","BRIGHT_GREEN","BRIGHT_YELLOW","BRIGHT_BLUE","BRIGHT_MAGENTA","BRIGHT_CYAN","BRIGHT_WHITE","getColor","color","toUpperCase","getHiResTimestamp","timestamp","performance","now","hrtime","timeParts","Date","originalConsole","debug","log","info","warn","DEFAULT_SETTINGS","enabled","level","cache","ONCE","getTableHeader","table","VERSION","_startTs","_deltaTs","LOG_THROTTLE_TIMEOUT","_storage","userData","timeStamp","obj","predefined","proto","getPrototypeOf","propNames","getOwnPropertyNames","find","autobind","seal","newLevel","setLevel","getLevel","Number","toPrecision","newPriority","_getLogFunction","oldUsage","newUsage","logLevel","time","columns","tag","priority","_shouldLog","img","Image","element","nodeName","toLowerCase","toDataURL","logImageInBrowser","asciify","fit","round","then","data","logImageInNode","setting","timeEnd","opts","collapsed","normalizeArguments","method","groupCollapsed","group","groupEnd","func","trace","isEnabled","normalizeLogLevel","total","getTotal","delta","getDelta","string","padLength","max","repeat","leftPad","ms","formatted","toFixed","formatTime","background","decorateMessage","resolvedLevel","isFinite","from","shift","undefined","unshift","messageType","probeLog","Log","NullLog","DEFAULT_LOADER_OPTIONS","mimeType","nothrow","CDN","worker","maxConcurrency","maxMobileConcurrency","reuseWorkers","_workerType","limit","_limitMB","batchSize","batchDebounceMs","metadata","transforms","REMOVED_LOADER_OPTIONS","throws","dataType","uri","body","credentials","redirect","referrer","referrerPolicy","integrity","keepalive","signal","getGlobalLoaderState","_state","getGlobalLoaderOptions","state","globalOptions","normalizeOptions","validateOptionsObject","idOptions","loaderOptions","deprecatedOptions","validateOptions","normalizeOptionsInternal","getFetchFunction","context","defaultOptions","loaderName","prefix","isSubOptions","isBaseUriOption","isWorkerUrlOption","suggestion","findSimilarOption","optionKey","lowerCaseOptionKey","bestSuggestion","lowerCaseKey","mergedOptions","baseUri","addUrlOptions","mergeNestedFields","workerURLCache","Map","getLoadableWorkerURL","props","source","workerURL","getLoadableWorkerURLFromSource","workerUrl","getLoadableWorkerURLFromURL","set","workerSource","blob","URL","createObjectURL","isTransferable","MessagePort","ImageBitmap","OffscreenCanvas","NOOP","WorkerThread","Worker","onMessage","onError","_createBrowserWorker","destroy","terminate","terminated","postMessage","transferList","getTransferList","recursive","transfers","transfersSet","Set","add","_getErrorFromErrorEvent","lineno","colno","_loadableURL","onmessage","onerror","onmessageerror","WorkerJob","jobName","workerThread","isRunning","_resolve","_reject","reject","payload","done","WorkerPool","setProps","idleQueue","forEach","isDestroyed","onDebug","job","startPromise","onStart","jobQueue","_startQueuedJob","_getAvailableWorker","queuedJob","backlog","returnWorkerToQueue","count","_getMaxConcurrency","DEFAULT_PROPS","WorkerFarm","isSupported","_workerFarm","workerPools","workerPool","values","_getWorkerPoolProps","getWorkerPool","parseWithWorker","parseOnMainThread","workerOptions","workerFile","versionTag","getWorkerURL","getWorkerFarm","startJob","input","toArrayBuffer","isBuffer","node","byteOffset","_toArrayBuffer","concatenateArrayBuffersAsync","arrayBuffers","chunk","sources","sourceArrays","map","source2","reduce","typedArray","offset","sourceArray","concatenateArrayBuffers","DEFAULT_CHUNK_SIZE","makeStreamIterator","stream","nextBatchPromise","currentBatchPromise","_streamReadAhead","releaseLock","makeBrowserStreamIterator","makeNodeStreamIterator","makeIterator","chunkSize","textEncoder","chunkLength","makeStringIterator","chunkByteLength","makeArrayBufferIterator","end","makeBlobIterator","ERR_DATA","getArrayBufferOrStringFromData","isArrayBuffer","TextDecoder","decode","getArrayBufferOrStringFromDataSync","getGlobalLoaderRegistry","loaderRegistry","EXT_PATTERN","selectLoaderSync","validHTTPResponse","candidateLoaders","ignoreRegisteredLoaders","normalizeLoaders","testUrl","findLoaderByMIMEType","match","extension","loaderExtension","findLoaderByExtension","findLoaderByUrl","testDataAgainstText","testDataAgainstBinary","findLoaderByInitialBytes","fallbackMimeType","selectLoaderInternal","getNoValidLoaderMessage","getMagicString","getFirstCharacters","mimeTypes","testText","tests","some","test","arrayBuffer1","arrayBuffer2","array1","array2","compareArrayBuffers","magic","testBinary","dataView","DataView","getUint8","contextLoaders","getLoadersFromContext","selectLoader","previousContext","resolvedContext","getLoaderContext","coreVersion","workerVersion","validateWorkerVersion","canParseWithWorker","parseSync","parseWithLoader","load","RADIANS_TO_DEGREES","PI","DEGREES_TO_RADIANS","precision","EPSILON","clone","toRadians","degrees","toDegrees","radians","equals","b","epsilon","oldEpsilon","abs","printTypes","printDegrees","printRowMajor","cls","ExtendableBuiltin","instance","Reflect","construct","setPrototypeOf","writable","configurable","__proto__","_extendableBuiltin","copy","arrayOrObject","fromObject","ELEMENTS","check","toArray","toObject","to","Float32Array","formatString","ai","vector","minVector","maxVector","vectors","multiply","subtract","addScalar","scalar","validate","valid","checkNumber","checkVector","v","callerName","validateVector","deprecated","sqrt","lengthSquared","mathArray","distanceSquared","dist","product","magnitude","distance","multiplyScalar","ARRAY_TYPE","random","out","y","z","hypot","fromValues","cross","ax","ay","az","bx","by","bz","transformMat4","w","transformMat3","vec","vec3_transformMat4AsVector","ORIGIN","constants","ZERO","freeze","super","mag","cosine","acos","origin","rad","cos","sin","matrix4","transformAsPoint","matrix3","matrix2","vec3_transformMat2","quaternion","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","row","RANK","col","columnIndex","fill","firstIndex","columnVector","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","getScaling","mat","m11","m12","m13","m21","m22","m23","m31","m32","m33","IDENTITY","INDICES","COL0ROW0","COL0ROW1","COL0ROW2","COL0ROW3","COL1ROW0","COL1ROW1","COL1ROW2","COL1ROW3","COL2ROW0","COL2ROW1","COL2ROW2","COL2ROW3","COL3ROW0","COL3ROW1","COL3ROW2","COL3ROW3","identity","m00","m10","m20","m30","m01","m02","m03","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","left","right","bottom","top","near","far","Infinity","_computeInfinitePerspectiveOffCenter","rl","tb","nf","column0Row0","column1Row1","column2Row0","column2Row1","column3Row2","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","lr","bt","fovy","aspect","focalDistance","halfY","tan","ortho","fov","f","scaleResult","getScale","inverseScale0","inverseScale1","inverseScale2","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","rx","ry","rz","rotateX","rotateY","rotateZ","axis","b12","b20","b21","b22","factor","vec2_transformMat4AsVector","translate","transformAsVector","scratchVector","fromCartographic","cartographic","longitude","latitude","toCartographic","scaleToGeodeticSurfaceIntersection","scaleToGeodeticSurfaceGradient","scratchOrigin","VECTOR_PRODUCT_LOCAL_FRAME","south","north","west","east","down","degeneratePositionLocalFrame","scratchAxisVectors","scratchVector1","scratchVector2","scratchVector3","localFrameToFixedFrame","ellipsoid","firstAxis","secondAxis","thirdAxis","cartesianOrigin","thirdAxisInferred","firstAxisVector","secondAxisVector","thirdAxisVector","sign","fromArray","normalize","geodeticSurfaceNormal","scratchNormal","scratchK","scratchPosition","scratchHeight","scratchCartesian","wgs84","radii","radiiSquared","radiiToTheFourth","oneOverRadii","oneOverRadiiSquared","minimumRadius","maximumRadius","centerToleranceSquared","squaredXOverSquaredZ","toString","normal","k","geodeticSurfaceNormalCartographic","gamma","dot","cartesian","point","scaleToGeodeticSurface","h","atan2","asin","_cartographicRadians","cartographicVectorRadians","fromCartographicToRadians","cosLatitude","positionX","positionY","positionZ","oneOverRadiiX","oneOverRadiiY","oneOverRadiiZ","squaredNorm","ratio","intersection","oneOverRadiiSquaredX","oneOverRadiiSquaredY","oneOverRadiiSquaredZ","gradient","xMultiplier","yMultiplier","zMultiplier","lambda","correction","xMultiplier2","yMultiplier2","zMultiplier2","beta","position","_parseImageNode","IMAGE_SUPPORTED","IMAGE_BITMAP_SUPPORTED","NODE_IMAGE_SUPPORTED","DATA_SUPPORTED","getImageType","format","getImageTypeOrNull","getImageData","canvas","createElement","getContext","drawImage","SVG_DATA_URL_PATTERN","SVG_URL_PATTERN","isSVG","getBlob","parseToImage","blobOrDataUrl","xmlText","unescape","encodeURIComponent","getBlobOrSVGDataUrl","webkitURL","objectUrl","err","loadToImage","revokeObjectURL","EMPTY_OBJECT","imagebitmapOptionsSupported","parseToImageBitmap","imagebitmapOptions","imagebitmap","isEmptyObject","createImageBitmap","safeCreateImageBitmap","getBinaryImageMetadata","binaryData","toDataView","getUint32","getPngMetadata","getUint16","tableMarkers","sofMarkers","getJpegMarkers","has","getJpegMetadata","getGifMetadata","getBmpMetadata","ImageLoader","imageType","getDefaultImageType","isImageTypeSupported","getLoadableImageType","parseToNodeImage","DracoLoader","draco","decoderType","WebAssembly","libraryPath","extraAttributes","attributeNameEntry","Schema","fields","usedNames","field","checkNames","compareTo","other","select","columnNames","nameMap","selectedFields","filter","selectAt","columnIndices","index","schemaOrFields","otherSchema","mergeMaps","fieldMap","mergedFields","m1","m2","Type","DataType","typeId","Null","Int","Float","Binary","Utf8","Bool","Decimal","Time","Timestamp","Interval","List","Struct","Union","FixedSizeBinary","FixedSizeList","Dictionary","NONE","isSigned","bitWidth","Int8","Int16","Int32","Uint8","Uint16","Uint32","Precision","Float32","Float64","listSize","child","children","valueType","Field","nullable","getArrowFieldFromAttribute","attributeName","attribute","loaderData","metadataMap","makeMetadata","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float64Array","getArrowTypeFromTypedArray","DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP","POSITION","NORMAL","TEX_COORD","DRACO_DATA_TYPE_TO_TYPED_ARRAY_MAP","1","2","3","4","5","6","9","DracoParser","decoder","Decoder","metadataQuerier","MetadataQuerier","DecoderBuffer","Init","_disableAttributeTransforms","geometry_type","GetEncodedGeometryType","dracoGeometry","TRIANGULAR_MESH","Mesh","PointCloud","dracoStatus","DecodeBufferToMesh","POINT_CLOUD","DecodeBufferToPointCloud","ptr","error_msg","_getDracoLoaderData","geometry","_getMeshData","boundingBox","attributes","minX","minY","minZ","maxX","maxY","maxZ","positions","getMeshBoundingBox","schema","indices","namedLoaderDataAttributes","dracoAttribute","transformAttributesLoaderData","indicesField","makeSchemaFromAttributes","header","vertexCount","num_points","_getTopLevelMetadata","_getDracoAttributes","num_attributes","num_faces","dracoAttributes","attributeId","GetAttribute","_getAttributeMetadata","unique_id","attribute_type","data_type","num_components","byte_offset","byte_stride","normalized","attribute_index","quantization","_getQuantizationTransform","quantization_transform","octahedron","_getOctahedronTransform","octahedron_transform","_getMeshAttributes","topology","_getTriangleStripIndices","_getTriangleListIndices","loaderAttribute","_deduceAttributeName","_getAttributeValues","byteStride","numIndices","_malloc","GetTrianglesUInt32Array","HEAPF32","_free","dracoArray","DracoInt32Array","GetTriangleStripsFromMesh","numValues","intArray","GetValue","getUint32Array","TypedArrayCtor","numComponents","BYTES_PER_ELEMENT","attributeType","DT_FLOAT32","DT_INT8","DT_INT16","DT_INT32","DT_UINT8","DT_UINT16","DT_UINT32","DT_INVALID","getDracoDataType","GetAttributeDataArrayForAllPoints","uniqueId","attributeUniqueId","entries","thisAttributeType","dracoAttributeConstant","entryName","dracoMetadata","GetMetadata","_getDracoMetadata","GetAttributeMetadata","numEntries","NumEntries","entryIndex","GetEntryName","_getDracoMetadataField","GetIntEntryArray","getInt32Array","int","GetIntEntry","GetStringEntry","double","GetDoubleEntry","quantizedAttributes","octahedronAttributes","skipAttributes","dracoAttributeName","SkipAttributeTransform","transform","AttributeQuantizationTransform","InitFromAttribute","quantization_bits","range","min_values","min_value","loadLibraryPromises","loadLibrary","libraryUrl","moduleName","library","getLibraryUrl","endsWith","scriptSource","eval","script","appendChild","createTextNode","loadLibraryFromString","loadLibraryFromFile","loadDecoderPromise","loadDracoDecoderModule","draco3d","createDecoderModule","DracoDecoderModule","wasmBinary","all","globalThis","onModuleLoaded","initializeDracoDecoder","loadDracoDecoder","DracoWorkerLoader","dracoParser","BASISLZ","ZSTD","ZLIB","BASICFORMAT","UNSPECIFIED","ETC1S","UASTC","SRGB","LINEAR","ITU","NTSC","SLOG","SLOG2","ALPHA_STRAIGHT","ALPHA_PREMULTIPLIED","RGB","RRR","GGG","AAA","RGBA","RRRG","U","vkFormat","typeSize","pixelWidth","pixelHeight","pixelDepth","layerCount","faceCount","supercompressionScheme","levels","dataFormatDescriptor","vendorId","descriptorType","versionNumber","descriptorBlockSize","colorModel","colorPrimaries","transferFunction","flags","texelBlockDimension","bytesPlane","samples","keyValue","globalData","_dataView","_littleEndian","_offset","_","Buffer","extractMipmapImages","images","mipMapLevels","levelWidth","levelHeight","levelSize","getLevelSize","levelData","getLevelData","compressed","internalFormat","sizeFunction","GL","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_R11_EAC","COMPRESSED_SIGNED_R11_EAC","COMPRESSED_RG11_EAC","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB_ATC_WEBGL","COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL","COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL","COMPRESSED_RGBA_ASTC_4X4_KHR","COMPRESSED_RGBA_ASTC_5X4_KHR","COMPRESSED_RGBA_ASTC_5X5_KHR","COMPRESSED_RGBA_ASTC_6X5_KHR","COMPRESSED_RGBA_ASTC_6X6_KHR","COMPRESSED_RGBA_ASTC_8X5_KHR","COMPRESSED_RGBA_ASTC_8X6_KHR","COMPRESSED_RGBA_ASTC_8X8_KHR","COMPRESSED_RGBA_ASTC_10X5_KHR","COMPRESSED_RGBA_ASTC_10X6_KHR","COMPRESSED_RGBA_ASTC_10X8_KHR","COMPRESSED_RGBA_ASTC_10X10_KHR","COMPRESSED_RGBA_ASTC_12X10_KHR","COMPRESSED_RGBA_ASTC_12X12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","VULKAN_TO_WEBGL_FORMAT_MAP","131","132","133","134","135","136","137","138","139","140","141","142","147","148","149","150","151","152","153","154","155","156","157","COMPRESSED_RGBA_ASTC_4x4_KHR","158","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","159","COMPRESSED_RGBA_ASTC_5x4_KHR","160","161","COMPRESSED_RGBA_ASTC_5x5_KHR","162","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","163","COMPRESSED_RGBA_ASTC_6x5_KHR","164","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","165","COMPRESSED_RGBA_ASTC_6x6_KHR","166","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","167","COMPRESSED_RGBA_ASTC_8x5_KHR","168","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","169","COMPRESSED_RGBA_ASTC_8x6_KHR","170","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","171","COMPRESSED_RGBA_ASTC_8x8_KHR","172","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","173","COMPRESSED_RGBA_ASTC_10x5_KHR","174","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","175","COMPRESSED_RGBA_ASTC_10x6_KHR","176","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","177","COMPRESSED_RGBA_ASTC_10x8_KHR","178","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","179","COMPRESSED_RGBA_ASTC_10x10_KHR","180","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","181","COMPRESSED_RGBA_ASTC_12x10_KHR","182","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","183","COMPRESSED_RGBA_ASTC_12x12_KHR","184","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","1000054000","1000054001","1000066000","1000066001","1000066002","1000066003","1000066004","1000066005","1000066006","1000066007","1000066008","1000066009","1000066010","1000066011","1000066012","1000066013","KTX2_ID","parseKTX","ktx","_nextUint32","_nextUint64","uncompressedByteLength","u","_skip","_nextUint16","_nextUint8","D","bitOffset","bitLength","channelID","samplePosition","sampleLower","sampleUpper","_scan","B","A","S","L","I","imageFlags","rgbSliceByteOffset","rgbSliceByteLength","alphaSliceByteOffset","alphaSliceByteLength","R","E","T","O","P","C","F","G","endpointCount","selectorCount","imageDescs","endpointsData","selectorsData","tablesData","extendedData","DDS_CONSTANTS","MAGIC_NUMBER","HEADER_LENGTH","MAGIC_NUMBER_INDEX","HEADER_SIZE_INDEX","HEADER_FLAGS_INDEX","HEADER_HEIGHT_INDEX","HEADER_WIDTH_INDEX","MIPMAPCOUNT_INDEX","HEADER_PF_FLAGS_INDEX","HEADER_PF_FOURCC_INDEX","DDSD_MIPMAPCOUNT","DDPF_FOURCC","PIXEL_FORMATS","DXT1","DXT3","DXT5","ATCA","ATCI","SIZE_FUNCTIONS","getDxt1LevelSize","getDxtXLevelSize","parseDDS","pixelFormatNumber","fourCC","dataOffset","PVR_CONSTANTS","PVR_PIXEL_FORMATS","0","7","11","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","PVR_SIZE_FUNCTIONS","pvrtc2bppSize","pvrtc4bppSize","dxtEtcSmallSize","dxtEtcAstcBigSize","parseCompressedTexture","isKTX","isDDS","isPVR","pvrFormat","colourSpace","pixelFormats","parsePVR","CompressedTextureWorkerLoader","CompressedTextureLoader","getUrlWithToken","token","TYPE_ARRAY_MAP","UInt8","UInt16","UInt32","UInt64","GL_TYPE_MAP","I3S_NAMED_VERTEX_ATTRIBUTES","uv0","region","I3S_NAMED_GEOMETRY_ATTRIBUTES","vertexAttributes","featureAttributeOrder","featureAttributes","I3S_NAMED_HEADER_ATTRIBUTES","SIZEOF","Vector3","FORMAT_LOADER_MAP","jpeg","png","dds","parseI3STileContent","tile","tileset","content","featureIds","featureData","defaultGeometrySchema","store","geometryAttribute","namedAttribute","valuesPerElement","attributesOrder","ordering","constructFeatureDataStruct","textureUrl","i3s","textureFormat","texture","mipmaps","material","materialDefinition","pbrMaterial","pbrMetallicRoughness","baseColorFactor","baseColorTexture","texCoord","alphaCutoff","alphaMode","emissiveFactor","convertColorFormat","emissiveTexture","metallicRoughnessTexture","normalTexture","occlusionTexture","setMaterialTexture","makePbrMaterial","featureCount","isDracoGeometry","decompressedGeometry","COLOR_0","TEXCOORD_0","featureIndex","uvRegion","updateAttributesMetadata","getFeatureIdsFromFeatureIndexMetadata","featureIndices","flattenFeatureIdsByFeatureIndices","TypedArrayTypeHeader","parseHeaders","normalizedVertexAttributes","normalizeAttributes","normalizedFeatureAttributes","faceRange","featureIdsLength","orderedFeatureIndices","startIndex","fillId","endValue","prevValue","endIndex","flattenFeatureIdsByFaceRanges","concatAttributes","enuMatrix","cartographicOrigin","mbs","Matrix4","Ellipsoid","WGS84","cartographicToCartesian","eastNorthUpToFixedFrame","vertices","scaleX","scaleY","subarray","offsetsToCartesians","fixedFrameToENUMatrix","invert","parsePositions","matrix","multiplyRight","normals","colors","normalizeAttribute","texCoords","uvRegions","attributeIndex","cartographicCenter","modelMatrix","parseI3SNodeGeometry","parseUint64Values","TypedArrayType","elementsCount","attributeSize","colorFactor","normalizedColor","I3SContentLoader","INTERSECTION","OUTSIDE","INTERSECTING","INSIDE","radius","fromCenterRadius","corner","oppositeCorner","boundingSphere","leftCenter","leftRadius","rightCenter","rightRadius","toRightCenter","centerSeparation","halfDistanceBetweenTangentPoints","distanceSquaredTo","plane","distanceToPlane","vec4_transformMat3","setAxisAngle","aw","bw","slerp","omega","cosom","sinom","scale0","scale1","fromMat3","fRoot","fTrace","j","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","rotationTo","IDENTITY_QUATERNION","fromAxisRotation","vectorA","vectorB","a0","a1","a2","a3","invDot","start","ix","iy","iz","iw","multiplyLeft","scratchOffset","scratchVectorU","scratchVectorV","scratchVectorW","scratchCorner","scratchToCenter","MATRIX3","halfAxes","xAxis","getColumn","yAxis","zAxis","normXAxis","normYAxis","normZAxis","fromMatrix3","halfSize","quaternionObject","directionsMatrix","fromQuaternion","cornerVector","normalX","normalY","normalZ","radEffective","uHalf","vHalf","wHalf","direction","minDist","POSITIVE_INFINITY","maxDist","NEGATIVE_INFINITY","toCenter","transformation","fromNormalDistance","fromPointNormal","pointDistance","getPointDistance","scaledNormal","TILE_REFINEMENT","TILE_TYPE","TILESET_TYPE","BROWSER_PREFIXES","WEBGL_EXTENSIONS","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_s3tc_srgb","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_atc","WEBGL_compressed_texture_astc","EXT_texture_compression_rgtc","formats","getSupportedGPUTextureFormats","gl","getWebGLContext","getExtension","gpuTextureFormat","parseNodePage","I3SNodePageLoader","I3SNodePagesTiles","nodesPerPage","nodePages","lodSelectionMetricType","textureDefinitionsSelectedFormats","_initSelectedFormatsForTextureDefinitions","pageIndex","nodePageUrl","nodeIndex","nodes","getNodeById","childNode","obb","contentUrl","attributeUrls","mesh","isDracoGeometryResult","_getContentUrl","textureData","nodeMaterialDefinition","_getInformationFromMaterial","attributeStorageInfo","fileName","generateTilesetAttributeUrls","normalizeTileNonUrlData","lodSelection","_getLodSelection","meshGeometryData","geometryDefinition","geometryDefinitions","definition","geometryIndex","useDracoGeometry","geometryBuffers","findIndex","compressedAttributes","encoding","metricType","maxError","lodThreshold","textureDataDefault","materialDefinitions","textureSetDefinitionIndex","textureSetDefinitionId","possibleI3sFormats","_getSupportedTextureFormats","textureSetDefinitions","textureSetDefinition","selectedFormat","i3sFormat","useCompressedTextures","supportedCompressedFormats","box","sphere","OrientedBoundingBox","fromCenterHalfSizeQuaternion","getBoundingSphere","boundingVolume","lodMetricType","lodMetricValue","transformMatrix","refine","TILESET_REGEX","TILE_HEADER_REGEX","I3SLoader","padStart","getMagicNumber","isTileset","isTileHeader","tilesetJson","nodePagesTile","formTileFromNodePages","rootNodeUrl","loadContent","basePath","normalizeTilesetData","parseTileset","featureUrl","href","geometryData","attributeData","attributeUrl","generateTileAttributeUrls","normalizeTileData","parseTile","parseTileContent","parseI3STileAttribute","parseAttribute","stringsArray","stringsCount","stringSizes","stringOffset","stringByteSize","textDecoder","stringAttribute","parseStringsAttribute","parseShortNumberAttribute","parseFloatAttribute","I3SAttributeLoader","loadFeatureAttributes","featureId","getAttributesData","attributeLoadPromises","getAttributeValueType","loadOptions","promise","allSettled","objectIds","OBJECTID","featureIdIndex","attributesObject","getAttributeByIndexAndAttributeName","formatAttributeValue","getFeatureAttributesByIndex","generateAttributesByFeatureId","attributeValues","attributesName","attributeObject","trim"],"mappings":"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","file":"dist.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\nconst self_: {[key: string]: any} = globals.self || globals.window || globals.global || {};\nconst window_: {[key: string]: any} = globals.window || globals.self || globals.global || {};\nconst global_: {[key: string]: any} = globals.global || globals.self || globals.window || {};\nconst document_: {[key: string]: any} = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in the browser, false if running in Node.js */\nexport const isBrowser: boolean =\n  // @ts-ignore process.browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running on a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n/** true if running on a mobile device */\nexport const isMobile: boolean =\n  typeof window !== 'undefined' && typeof window.orientation !== 'undefined';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n\n/** Version of Node.js if running under Node, otherwise 0 */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n","const globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document,\n  process: typeof process === 'object' && process\n};\nconst self_ = globals.self || globals.window || globals.global;\nconst window_ = globals.window || globals.self || globals.global;\nconst global_ = globals.global || globals.self || globals.window;\nconst document_ = globals.document || {};\nconst process_ = globals.process || {};\nconst console_ = console;\nexport { self_ as self, window_ as window, global_ as global, document_ as document, process_ as process, console_ as console };\n//# sourceMappingURL=globals.js.map","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\nconst self_ = globals.self || globals.window || globals.global;\nconst window_ = globals.window || globals.self || globals.global;\nconst global_ = globals.global || globals.self || globals.window;\nconst document_ = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\nexport const isBrowser =\n  // @ts-ignore\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\nexport const isWorker = typeof importScripts === 'function';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\nexport const nodeVersion = (matches && parseFloat(matches[1])) || 0;\n","import isElectron from './is-electron';\nexport default function isBrowser() {\n  const isNode = typeof process === 'object' && String(process) === '[object process]' && !process.browser;\n  return !isNode || isElectron();\n}\nexport function isBrowserMainThread() {\n  return isBrowser() && typeof document !== 'undefined';\n}\n//# sourceMappingURL=is-browser.js.map","export default function isElectron(mockUserAgent) {\n  if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n    return true;\n  }\n\n  if (typeof process !== 'undefined' && typeof process.versions === 'object' && Boolean(process.versions.electron)) {\n    return true;\n  }\n\n  const realUserAgent = typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent;\n  const userAgent = mockUserAgent || realUserAgent;\n\n  if (userAgent && userAgent.indexOf('Electron') >= 0) {\n    return true;\n  }\n\n  return false;\n}\n//# sourceMappingURL=is-electron.js.map","// @ts-nocheck\nconst moduleExports = require('./index');\nconst _global = typeof window === 'undefined' ? global : window;\n_global.loaders = _global.loaders || {};\nmodule.exports = Object.assign(_global.loaders, moduleExports);\n","import type {Readable} from 'stream';\n\n/** A DOM or Node readable stream */\nexport type ReadableStreamType = ReadableStream | Readable;\n\nconst isBoolean: (x: any) => boolean = (x) => typeof x === 'boolean';\nconst isFunction: (x: any) => boolean = (x) => typeof x === 'function';\n\nexport const isObject: (x: any) => boolean = (x) => x !== null && typeof x === 'object';\nexport const isPureObject: (x: any) => boolean = (x) =>\n  isObject(x) && x.constructor === {}.constructor;\nexport const isPromise: (x: any) => boolean = (x) => isObject(x) && isFunction(x.then);\n\nexport const isIterable: (x: any) => boolean = (x) => x && typeof x[Symbol.iterator] === 'function';\nexport const isAsyncIterable: (x: any) => boolean = (x) =>\n  x && typeof x[Symbol.asyncIterator] === 'function';\nexport const isIterator: (x: any) => boolean = (x) => x && isFunction(x.next);\n\nexport const isResponse: (x: any) => boolean = (x) =>\n  (typeof Response !== 'undefined' && x instanceof Response) ||\n  (x && x.arrayBuffer && x.text && x.json);\n\nexport const isFile: (x: any) => boolean = (x) => typeof File !== 'undefined' && x instanceof File;\nexport const isBlob: (x: any) => boolean = (x) => typeof Blob !== 'undefined' && x instanceof Blob;\n\nexport const isWritableDOMStream: (x: any) => boolean = (x) =>\n  isObject(x) && isFunction(x.abort) && isFunction(x.getWriter);\n\nexport const isReadableDOMStream: (x: any) => boolean = (x) =>\n  (typeof ReadableStream !== 'undefined' && x instanceof ReadableStream) ||\n  (isObject(x) && isFunction(x.tee) && isFunction(x.cancel) && isFunction(x.getReader));\n// Not implemented in Firefox: && isFunction(x.pipeTo)\n\n/** Check for Node.js `Buffer` without triggering bundler to include buffer polyfill */\nexport const isBuffer: (x: any) => boolean = (x) => x && typeof x === 'object' && x.isBuffer;\n\nexport const isWritableNodeStream: (x: any) => boolean = (x) =>\n  isObject(x) && isFunction(x.end) && isFunction(x.write) && isBoolean(x.writable);\nexport const isReadableNodeStream: (x: any) => boolean = (x) =>\n  isObject(x) && isFunction(x.read) && isFunction(x.pipe) && isBoolean(x.readable);\nexport const isReadableStream: (x: any) => boolean = (x) =>\n  isReadableDOMStream(x) || isReadableNodeStream(x);\nexport const isWritableStream: (x: any) => boolean = (x) =>\n  isWritableDOMStream(x) || isWritableNodeStream(x);\n","/**\n * Throws an `Error` with the optional `message` if `condition` is falsy\n * @note Replacement for the external assert method to reduce bundle size\n */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n","import type {Loader} from '@loaders.gl/loader-utils';\nimport {assert} from '@loaders.gl/loader-utils';\n\nexport function isLoaderObject(loader?: any): boolean {\n  if (!loader) {\n    return false;\n  }\n\n  if (Array.isArray(loader)) {\n    loader = loader[0];\n  }\n\n  const hasExtensions = Array.isArray(loader?.extensions);\n\n  /* Now handled by types and worker loaders do not have these\n  let hasParser =\n    loader.parseTextSync ||\n    loader.parseSync ||\n    loader.parse ||\n    loader.parseStream || // TODO Remove, Replace with parseInBatches\n    loader.parseInBatches;\n  */\n\n  return hasExtensions;\n}\n\nexport function normalizeLoader(loader: Loader): Loader {\n  // This error is fairly easy to trigger by mixing up import statements etc\n  // So we make an exception and add a developer error message for this case\n  // To help new users from getting stuck here\n  assert(loader, 'null loader');\n  assert(isLoaderObject(loader), 'invalid loader');\n\n  // NORMALIZE [LOADER, OPTIONS] => LOADER\n\n  // If [loader, options], create a new loaders object with options merged in\n  let options;\n  if (Array.isArray(loader)) {\n    options = loader[1];\n    loader = loader[0];\n    loader = {\n      ...loader,\n      options: {...loader.options, ...options}\n    };\n  }\n\n  // NORMALIZE text and binary flags\n  // Ensure at least one of text/binary flags are properly set\n\n  // @ts-expect-error\n  if (loader?.parseTextSync || loader?.parseText) {\n    loader.text = true;\n  }\n\n  if (!loader.text) {\n    loader.binary = true;\n  }\n\n  return loader;\n}\n","// Simple file alias mechanisms for tests.\n\nlet pathPrefix = '';\nconst fileAliases: {[aliasPath: string]: string} = {};\n\n/*\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix: string): void {\n  pathPrefix = prefix;\n}\n\n/*\n * Get the relative path prefix\n */\nexport function getPathPrefix(): string {\n  return pathPrefix;\n}\n\n/**\n *\n * @param aliases\n *\n * Note: addAliases are an experimental export, they are only for testing of loaders.gl loaders\n * not intended as a generic aliasing mechanism\n */\nexport function addAliases(aliases: {[aliasPath: string]: string}): void {\n  Object.assign(fileAliases, aliases);\n}\n\n/**\n * Resolves aliases and adds path-prefix to paths\n */\nexport function resolvePath(filename: string): string {\n  for (const alias in fileAliases) {\n    if (filename.startsWith(alias)) {\n      const replacement = fileAliases[alias];\n      filename = filename.replace(alias, replacement);\n    }\n  }\n  if (!filename.startsWith('http://') && !filename.startsWith('https://')) {\n    filename = `${pathPrefix}${filename}`;\n  }\n  return filename;\n}\n","// TODO - build/integrate proper MIME type parsing\n// https://mimesniff.spec.whatwg.org/\n\nconst DATA_URL_PATTERN = /^data:([-\\w.]+\\/[-\\w.+]+)(;|,)/;\nconst MIME_TYPE_PATTERN = /^([-\\w.]+\\/[-\\w.+]+)/;\n\n/**\n * Remove extra data like `charset` from MIME types\n * @param mimeString\n * @returns A clean MIME type, or an empty string\n *\n * @todo - handle more advanced MIMETYpes, multiple types\n * @todo - extract charset etc\n */\nexport function parseMIMEType(mimeString: string): string {\n  // If resource is a data url, extract any embedded mime type\n  const matches = MIME_TYPE_PATTERN.exec(mimeString);\n  if (matches) {\n    return matches[1];\n  }\n  return mimeString;\n}\n\n/**\n * Extract MIME type from data URL\n *\n * @param mimeString\n * @returns A clean MIME type, or an empty string\n *\n * @todo - handle more advanced MIMETYpes, multiple types\n * @todo - extract charset etc\n */\nexport function parseMIMETypeFromURL(url: string): string {\n  // If resource is a data URL, extract any embedded mime type\n  const matches = DATA_URL_PATTERN.exec(url);\n  if (matches) {\n    return matches[1];\n  }\n  return '';\n}\n","import {isResponse, isBlob} from '../../javascript-utils/is-type';\nimport {parseMIMEType, parseMIMETypeFromURL} from './mime-type-utils';\n\nconst QUERY_STRING_PATTERN = /\\?.*/;\n\n/**\n * Returns an object with `url` and (MIME) `type` fields\n * If it cannot determine url or type, the corresponding value will be an empty string\n *\n * @param resource Any type, but only Responses, string URLs and data URLs are processed\n *\n * @todo string parameters are assumed to be URLs\n */\nexport function getResourceUrlAndType(resource: any): {url: string; type: string} {\n  // If resource is a response, it contains the information directly\n  if (isResponse(resource)) {\n    const url = stripQueryString(resource.url || '');\n    const contentTypeHeader = resource.headers.get('content-type') || '';\n    return {\n      url,\n      type: parseMIMEType(contentTypeHeader) || parseMIMETypeFromURL(url)\n    };\n  }\n\n  // If the resource is a Blob or a File (subclass of Blob)\n  if (isBlob(resource)) {\n    return {\n      // File objects have a \"name\" property. Blob objects don't have any\n      // url (name) information\n      url: stripQueryString(resource.name || ''),\n      type: resource.type || ''\n    };\n  }\n\n  if (typeof resource === 'string') {\n    return {\n      // TODO this could mess up data URL but it doesn't matter as it is just used for inference\n      url: stripQueryString(resource),\n      // If a data url\n      type: parseMIMETypeFromURL(resource)\n    };\n  }\n\n  // Unknown\n  return {\n    url: '',\n    type: ''\n  };\n}\n\n/**\n  * Returns (approximate) content length for a resource if it can be determined.\n  * Returns -1 if content length cannot be determined.\n  * @param resource\n\n  * @note string parameters are NOT assumed to be URLs\n  */\nexport function getResourceContentLength(resource: any): number {\n  if (isResponse(resource)) {\n    return resource.headers['content-length'] || -1;\n  }\n  if (isBlob(resource)) {\n    return resource.size;\n  }\n  if (typeof resource === 'string') {\n    // TODO - handle data URL?\n    return resource.length;\n  }\n  if (resource instanceof ArrayBuffer) {\n    return resource.byteLength;\n  }\n  if (ArrayBuffer.isView(resource)) {\n    return resource.byteLength;\n  }\n  return -1;\n}\n\nfunction stripQueryString(url) {\n  return url.replace(QUERY_STRING_PATTERN, '');\n}\n","import {isResponse} from '../../javascript-utils/is-type';\nimport {getResourceContentLength, getResourceUrlAndType} from './resource-utils';\n\n/**\n * Returns a Response object\n * Adds content-length header when possible\n *\n * @param resource\n */\nexport async function makeResponse(resource: any): Promise<Response> {\n  if (isResponse(resource)) {\n    return resource;\n  }\n\n  // Add content-length header if possible\n  const headers: {[header: string]: string} = {};\n\n  const contentLength = getResourceContentLength(resource);\n  if (contentLength >= 0) {\n    headers['content-length'] = String(contentLength);\n  }\n\n  // `new Response(File)` does not preserve content-type and URL\n  // so we add them here\n  const {url, type} = getResourceUrlAndType(resource);\n  if (type) {\n    headers['content-type'] = type;\n  }\n\n  // Add a custom header with initial bytes if available\n  const initialDataUrl = await getInitialDataUrl(resource);\n  if (initialDataUrl) {\n    headers['x-first-bytes'] = initialDataUrl;\n  }\n\n  // TODO - is this the best way of handling strings?\n  // Maybe package as data URL instead?\n  if (typeof resource === 'string') {\n    // Convert to ArrayBuffer to avoid Response treating it as a URL\n    resource = new TextEncoder().encode(resource);\n  }\n\n  // Attempt to create a Response from the resource, adding headers and setting url\n  const response = new Response(resource, {headers});\n  // We can't control `Response.url` via constructor, use a property override to record URL.\n  Object.defineProperty(response, 'url', {value: url});\n  return response;\n}\n\n/**\n * Checks response status (async) and throws a helpful error message if status is not OK.\n * @param response\n */\nexport async function checkResponse(response: Response): Promise<void> {\n  if (!response.ok) {\n    const message = await getResponseError(response);\n    throw new Error(message);\n  }\n}\n\n/**\n * Checks response status (sync) and throws a helpful error message if status is not OK.\n * @param response\n */\nexport function checkResponseSync(response: Response): void {\n  if (!response.ok) {\n    let message = `${response.status} ${response.statusText}`;\n    message = message.length > 60 ? `${message.slice(60)}...` : message;\n    throw new Error(message);\n  }\n}\n\n// HELPERS\n\nasync function getResponseError(response): Promise<string> {\n  let message = `Failed to fetch resource ${response.url} (${response.status}): `;\n  try {\n    const contentType = response.headers.get('Content-Type');\n    let text = response.statusText;\n    if (contentType.includes('application/json')) {\n      text += ` ${await response.text()}`;\n    }\n    message += text;\n    message = message.length > 60 ? `${message.slice(60)}...` : message;\n  } catch (error) {\n    // eslint forbids return in a finally statement, so we just catch here\n  }\n  return message;\n}\n\nasync function getInitialDataUrl(resource): Promise<string | null> {\n  const INITIAL_DATA_LENGTH = 5;\n  if (typeof resource === 'string') {\n    return `data:,${resource.slice(0, INITIAL_DATA_LENGTH)}`;\n  }\n  if (resource instanceof Blob) {\n    const blobSlice = resource.slice(0, 5);\n    return await new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event?.target?.result as string);\n      reader.readAsDataURL(blobSlice);\n    });\n  }\n  if (resource instanceof ArrayBuffer) {\n    const slice = resource.slice(0, INITIAL_DATA_LENGTH);\n    const base64 = arrayBufferToBase64(slice);\n    return `data:base64,${base64}`;\n  }\n  return null;\n}\n\n// https://stackoverflow.com/questions/9267899/arraybuffer-to-base64-encoded-string\nfunction arrayBufferToBase64(buffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  for (let i = 0; i < bytes.byteLength; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}\n","import {resolvePath} from '@loaders.gl/loader-utils';\nimport {makeResponse} from '../utils/response-utils';\n// import {getErrorMessageFromResponse} from './fetch-error-message';\n\n/**\n * fetch compatible function\n * Reads file data from:\n * - http/http urls\n * - data urls\n * - File/Blob objects\n * Leverages `@loaders.gl/polyfills` for Node.js support\n * Respects pathPrefix and file aliases\n */\nexport async function fetchFile(\n  url: string | Blob,\n  options?: RequestInit & {fetch?: RequestInit | Function}\n): Promise<Response> {\n  if (typeof url === 'string') {\n    url = resolvePath(url);\n\n    let fetchOptions: RequestInit = options as RequestInit;\n    if (options?.fetch && typeof options?.fetch !== 'function') {\n      fetchOptions = options.fetch;\n    }\n\n    return await fetch(url, fetchOptions);\n  }\n\n  return await makeResponse(url);\n}\n","import checkIfBrowser from '../env/is-browser';\nexport { self, window, global, document, process, console } from '../env/globals';\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'untranspiled source';\nexport const isBrowser = checkIfBrowser();\n//# sourceMappingURL=globals.js.map","function getStorage(type) {\n  try {\n    const storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return storage;\n  } catch (e) {\n    return null;\n  }\n}\n\nexport default class LocalStorage {\n  constructor(id, defaultSettings, type = 'sessionStorage') {\n    this.storage = getStorage(type);\n    this.id = id;\n    this.config = {};\n    Object.assign(this.config, defaultSettings);\n\n    this._loadConfiguration();\n  }\n\n  getConfiguration() {\n    return this.config;\n  }\n\n  setConfiguration(configuration) {\n    this.config = {};\n    return this.updateConfiguration(configuration);\n  }\n\n  updateConfiguration(configuration) {\n    Object.assign(this.config, configuration);\n\n    if (this.storage) {\n      const serialized = JSON.stringify(this.config);\n      this.storage.setItem(this.id, serialized);\n    }\n\n    return this;\n  }\n\n  _loadConfiguration() {\n    let configuration = {};\n\n    if (this.storage) {\n      const serializedConfiguration = this.storage.getItem(this.id);\n      configuration = serializedConfiguration ? JSON.parse(serializedConfiguration) : {};\n    }\n\n    Object.assign(this.config, configuration);\n    return this;\n  }\n\n}\n//# sourceMappingURL=local-storage.js.map","export function formatTime(ms) {\n  let formatted;\n\n  if (ms < 10) {\n    formatted = \"\".concat(ms.toFixed(2), \"ms\");\n  } else if (ms < 100) {\n    formatted = \"\".concat(ms.toFixed(1), \"ms\");\n  } else if (ms < 1000) {\n    formatted = \"\".concat(ms.toFixed(0), \"ms\");\n  } else {\n    formatted = \"\".concat((ms / 1000).toFixed(2), \"s\");\n  }\n\n  return formatted;\n}\nexport function leftPad(string, length = 8) {\n  const padLength = Math.max(length - string.length, 0);\n  return \"\".concat(' '.repeat(padLength)).concat(string);\n}\nexport function rightPad(string, length = 8) {\n  const padLength = Math.max(length - string.length, 0);\n  return \"\".concat(string).concat(' '.repeat(padLength));\n}\nexport function formatValue(v, opts = {}) {\n  const EPSILON = 1e-16;\n  const {\n    isInteger = false\n  } = opts;\n\n  if (Array.isArray(v) || ArrayBuffer.isView(v)) {\n    return formatArrayValue(v, opts);\n  }\n\n  if (!Number.isFinite(v)) {\n    return String(v);\n  }\n\n  if (Math.abs(v) < EPSILON) {\n    return isInteger ? '0' : '0.';\n  }\n\n  if (isInteger) {\n    return v.toFixed(0);\n  }\n\n  if (Math.abs(v) > 100 && Math.abs(v) < 10000) {\n    return v.toFixed(0);\n  }\n\n  const string = v.toPrecision(2);\n  const decimal = string.indexOf('.0');\n  return decimal === string.length - 2 ? string.slice(0, -1) : string;\n}\n\nfunction formatArrayValue(v, opts) {\n  const {\n    maxElts = 16,\n    size = 1\n  } = opts;\n  let string = '[';\n\n  for (let i = 0; i < v.length && i < maxElts; ++i) {\n    if (i > 0) {\n      string += \",\".concat(i % size === 0 ? ' ' : '');\n    }\n\n    string += formatValue(v[i], opts);\n  }\n\n  const terminator = v.length > maxElts ? '...' : ']';\n  return \"\".concat(string).concat(terminator);\n}\n\nexport function formatImage(image, message, scale, maxWidth = 600) {\n  const imageUrl = image.src.replace(/\\(/g, '%28').replace(/\\)/g, '%29');\n\n  if (image.width > maxWidth) {\n    scale = Math.min(scale, maxWidth / image.width);\n  }\n\n  const width = image.width * scale;\n  const height = image.height * scale;\n  const style = ['font-size:1px;', \"padding:\".concat(Math.floor(height / 2), \"px \").concat(Math.floor(width / 2), \"px;\"), \"line-height:\".concat(height, \"px;\"), \"background:url(\".concat(imageUrl, \");\"), \"background-size:\".concat(width, \"px \").concat(height, \"px;\"), 'color:transparent;'].join('');\n  return [\"\".concat(message, \" %c+\"), style];\n}\n//# sourceMappingURL=formatters.js.map","import { isBrowser } from './globals';\nexport const COLOR = {\n  BLACK: 30,\n  RED: 31,\n  GREEN: 32,\n  YELLOW: 33,\n  BLUE: 34,\n  MAGENTA: 35,\n  CYAN: 36,\n  WHITE: 37,\n  BRIGHT_BLACK: 90,\n  BRIGHT_RED: 91,\n  BRIGHT_GREEN: 92,\n  BRIGHT_YELLOW: 93,\n  BRIGHT_BLUE: 94,\n  BRIGHT_MAGENTA: 95,\n  BRIGHT_CYAN: 96,\n  BRIGHT_WHITE: 97\n};\n\nfunction getColor(color) {\n  return typeof color === 'string' ? COLOR[color.toUpperCase()] || COLOR.WHITE : color;\n}\n\nexport function addColor(string, color, background) {\n  if (!isBrowser && typeof string === 'string') {\n    if (color) {\n      color = getColor(color);\n      string = \"\\x1B[\".concat(color, \"m\").concat(string, \"\\x1B[39m\");\n    }\n\n    if (background) {\n      color = getColor(background);\n      string = \"\\x1B[\".concat(background + 10, \"m\").concat(string, \"\\x1B[49m\");\n    }\n  }\n\n  return string;\n}\n//# sourceMappingURL=color.js.map","export default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n//# sourceMappingURL=assert.js.map","import { window, process, isBrowser } from './globals';\nexport default function getHiResTimestamp() {\n  let timestamp;\n\n  if (isBrowser && window.performance) {\n    timestamp = window.performance.now();\n  } else if (process.hrtime) {\n    const timeParts = process.hrtime();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n//# sourceMappingURL=hi-res-timestamp.js.map","import { VERSION, isBrowser } from '../utils/globals';\nimport LocalStorage from '../utils/local-storage';\nimport { formatImage, formatTime, leftPad } from '../utils/formatters';\nimport { addColor } from '../utils/color';\nimport { autobind } from '../utils/autobind';\nimport assert from '../utils/assert';\nimport getHiResTimestamp from '../utils/hi-res-timestamp';\nconst originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\nconst DEFAULT_SETTINGS = {\n  enabled: true,\n  level: 0\n};\n\nfunction noop() {}\n\nconst cache = {};\nconst ONCE = {\n  once: true\n};\n\nfunction getTableHeader(table) {\n  for (const key in table) {\n    for (const title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n\n  return 'empty';\n}\n\nexport default class Log {\n  constructor({\n    id\n  } = {\n    id: ''\n  }) {\n    this.id = id;\n    this.VERSION = VERSION;\n    this._startTs = getHiResTimestamp();\n    this._deltaTs = getHiResTimestamp();\n    this.LOG_THROTTLE_TIMEOUT = 0;\n    this._storage = new LocalStorage(\"__probe-\".concat(this.id, \"__\"), DEFAULT_SETTINGS);\n    this.userData = {};\n    this.timeStamp(\"\".concat(this.id, \" started\"));\n    autobind(this);\n    Object.seal(this);\n  }\n\n  set level(newLevel) {\n    this.setLevel(newLevel);\n  }\n\n  get level() {\n    return this.getLevel();\n  }\n\n  isEnabled() {\n    return this._storage.config.enabled;\n  }\n\n  getLevel() {\n    return this._storage.config.level;\n  }\n\n  getTotal() {\n    return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n  }\n\n  getDelta() {\n    return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n  }\n\n  set priority(newPriority) {\n    this.level = newPriority;\n  }\n\n  get priority() {\n    return this.level;\n  }\n\n  getPriority() {\n    return this.level;\n  }\n\n  enable(enabled = true) {\n    this._storage.updateConfiguration({\n      enabled\n    });\n\n    return this;\n  }\n\n  setLevel(level) {\n    this._storage.updateConfiguration({\n      level\n    });\n\n    return this;\n  }\n\n  assert(condition, message) {\n    assert(condition, message);\n  }\n\n  warn(message) {\n    return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n  }\n\n  error(message) {\n    return this._getLogFunction(0, message, originalConsole.error, arguments);\n  }\n\n  deprecated(oldUsage, newUsage) {\n    return this.warn(\"`\".concat(oldUsage, \"` is deprecated and will be removed in a later version. Use `\").concat(newUsage, \"` instead\"));\n  }\n\n  removed(oldUsage, newUsage) {\n    return this.error(\"`\".concat(oldUsage, \"` has been removed. Use `\").concat(newUsage, \"` instead\"));\n  }\n\n  probe(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n      time: true,\n      once: true\n    });\n  }\n\n  log(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n  }\n\n  info(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.info, arguments);\n  }\n\n  once(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.debug || originalConsole.info, arguments, ONCE);\n  }\n\n  table(logLevel, table, columns) {\n    if (table) {\n      return this._getLogFunction(logLevel, table, console.table || noop, columns && [columns], {\n        tag: getTableHeader(table)\n      });\n    }\n\n    return noop;\n  }\n\n  image({\n    logLevel,\n    priority,\n    image,\n    message = '',\n    scale = 1\n  }) {\n    if (!this._shouldLog(logLevel || priority)) {\n      return noop;\n    }\n\n    return isBrowser ? logImageInBrowser({\n      image,\n      message,\n      scale\n    }) : logImageInNode({\n      image,\n      message,\n      scale\n    });\n  }\n\n  settings() {\n    if (console.table) {\n      console.table(this._storage.config);\n    } else {\n      console.log(this._storage.config);\n    }\n  }\n\n  get(setting) {\n    return this._storage.config[setting];\n  }\n\n  set(setting, value) {\n    this._storage.updateConfiguration({\n      [setting]: value\n    });\n  }\n\n  time(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n  }\n\n  timeEnd(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.timeEnd ? console.timeEnd : console.info);\n  }\n\n  timeStamp(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n  }\n\n  group(logLevel, message, opts = {\n    collapsed: false\n  }) {\n    opts = normalizeArguments({\n      logLevel,\n      message,\n      opts\n    });\n    const {\n      collapsed\n    } = opts;\n    opts.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n    return this._getLogFunction(opts);\n  }\n\n  groupCollapsed(logLevel, message, opts = {}) {\n    return this.group(logLevel, message, Object.assign({}, opts, {\n      collapsed: true\n    }));\n  }\n\n  groupEnd(logLevel) {\n    return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n  }\n\n  withGroup(logLevel, message, func) {\n    this.group(logLevel, message)();\n\n    try {\n      func();\n    } finally {\n      this.groupEnd(logLevel)();\n    }\n  }\n\n  trace() {\n    if (console.trace) {\n      console.trace();\n    }\n  }\n\n  _shouldLog(logLevel) {\n    return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n  }\n\n  _getLogFunction(logLevel, message, method, args = [], opts) {\n    if (this._shouldLog(logLevel)) {\n      opts = normalizeArguments({\n        logLevel,\n        message,\n        args,\n        opts\n      });\n      method = method || opts.method;\n      assert(method);\n      opts.total = this.getTotal();\n      opts.delta = this.getDelta();\n      this._deltaTs = getHiResTimestamp();\n      const tag = opts.tag || opts.message;\n\n      if (opts.once) {\n        if (!cache[tag]) {\n          cache[tag] = getHiResTimestamp();\n        } else {\n          return noop;\n        }\n      }\n\n      message = decorateMessage(this.id, opts.message, opts);\n      return method.bind(console, message, ...opts.args);\n    }\n\n    return noop;\n  }\n\n}\nLog.VERSION = VERSION;\n\nfunction normalizeLogLevel(logLevel) {\n  if (!logLevel) {\n    return 0;\n  }\n\n  let resolvedLevel;\n\n  switch (typeof logLevel) {\n    case 'number':\n      resolvedLevel = logLevel;\n      break;\n\n    case 'object':\n      resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n      break;\n\n    default:\n      return 0;\n  }\n\n  assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n  return resolvedLevel;\n}\n\nexport function normalizeArguments(opts) {\n  const {\n    logLevel,\n    message\n  } = opts;\n  opts.logLevel = normalizeLogLevel(logLevel);\n  const args = opts.args ? Array.from(opts.args) : [];\n\n  while (args.length && args.shift() !== message) {}\n\n  opts.args = args;\n\n  switch (typeof logLevel) {\n    case 'string':\n    case 'function':\n      if (message !== undefined) {\n        args.unshift(message);\n      }\n\n      opts.message = logLevel;\n      break;\n\n    case 'object':\n      Object.assign(opts, logLevel);\n      break;\n\n    default:\n  }\n\n  if (typeof opts.message === 'function') {\n    opts.message = opts.message();\n  }\n\n  const messageType = typeof opts.message;\n  assert(messageType === 'string' || messageType === 'object');\n  return Object.assign(opts, opts.opts);\n}\n\nfunction decorateMessage(id, message, opts) {\n  if (typeof message === 'string') {\n    const time = opts.time ? leftPad(formatTime(opts.total)) : '';\n    message = opts.time ? \"\".concat(id, \": \").concat(time, \"  \").concat(message) : \"\".concat(id, \": \").concat(message);\n    message = addColor(message, opts.color, opts.background);\n  }\n\n  return message;\n}\n\nfunction logImageInNode({\n  image,\n  message = '',\n  scale = 1\n}) {\n  let asciify = null;\n\n  try {\n    asciify = module.require('asciify-image');\n  } catch (error) {}\n\n  if (asciify) {\n    return () => asciify(image, {\n      fit: 'box',\n      width: \"\".concat(Math.round(80 * scale), \"%\")\n    }).then(data => console.log(data));\n  }\n\n  return noop;\n}\n\nfunction logImageInBrowser({\n  image,\n  message = '',\n  scale = 1\n}) {\n  if (typeof image === 'string') {\n    const img = new Image();\n\n    img.onload = () => {\n      const args = formatImage(img, message, scale);\n      console.log(...args);\n    };\n\n    img.src = image;\n    return noop;\n  }\n\n  const element = image.nodeName || '';\n\n  if (element.toLowerCase() === 'img') {\n    console.log(...formatImage(image, message, scale));\n    return noop;\n  }\n\n  if (element.toLowerCase() === 'canvas') {\n    const img = new Image();\n\n    img.onload = () => console.log(...formatImage(img, message, scale));\n\n    img.src = image.toDataURL();\n    return noop;\n  }\n\n  return noop;\n}\n//# sourceMappingURL=log.js.map","export function autobind(obj, predefined = ['constructor']) {\n  const proto = Object.getPrototypeOf(obj);\n  const propNames = Object.getOwnPropertyNames(proto);\n\n  for (const key of propNames) {\n    if (typeof obj[key] === 'function') {\n      if (!predefined.find(name => key === name)) {\n        obj[key] = obj[key].bind(obj);\n      }\n    }\n  }\n}\n//# sourceMappingURL=autobind.js.map","// probe.gl Log compatible loggers\nimport {Log} from 'probe.gl';\n\nexport const probeLog = new Log({id: 'loaders.gl'});\n\n// Logs nothing\nexport class NullLog {\n  log() {\n    return () => {};\n  }\n  info() {\n    return () => {};\n  }\n  warn() {\n    return () => {};\n  }\n  error() {\n    return () => {};\n  }\n}\n\n// Logs to console\nexport class ConsoleLog {\n  console;\n\n  constructor() {\n    this.console = console; // eslint-disable-line\n  }\n  log(...args) {\n    return this.console.log.bind(this.console, ...args);\n  }\n  info(...args) {\n    return this.console.info.bind(this.console, ...args);\n  }\n  warn(...args) {\n    return this.console.warn.bind(this.console, ...args);\n  }\n  error(...args) {\n    return this.console.error.bind(this.console, ...args);\n  }\n}\n","import type {LoaderOptions} from '@loaders.gl/loader-utils';\nimport {ConsoleLog} from './loggers';\n\nexport const DEFAULT_LOADER_OPTIONS: LoaderOptions = {\n  // baseUri\n  fetch: null,\n  mimeType: undefined,\n  nothrow: false,\n  log: new ConsoleLog(), // A probe.gl compatible (`log.log()()` syntax) that just logs to console\n\n  CDN: 'https://unpkg.com/@loaders.gl',\n  worker: true, // By default, use worker if provided by loader.\n  maxConcurrency: 3, // How many worker instances should be created for each loader.\n  maxMobileConcurrency: 1, // How many worker instances should be created for each loader on mobile devices.\n  reuseWorkers: true, // By default reuse workers,\n  _workerType: '', // 'test' to use locally generated workers\n\n  limit: 0,\n  _limitMB: 0,\n  batchSize: 'auto',\n  batchDebounceMs: 0,\n  metadata: false, // TODO - currently only implemented for parseInBatches, adds initial metadata batch,\n  transforms: []\n};\n\nexport const REMOVED_LOADER_OPTIONS = {\n  throws: 'nothrow',\n  dataType: '(no longer used)',\n  uri: 'baseUri',\n  // Warn if fetch options are used on top-level\n  method: 'fetch.method',\n  headers: 'fetch.headers',\n  body: 'fetch.body',\n  mode: 'fetch.mode',\n  credentials: 'fetch.credentials',\n  cache: 'fetch.cache',\n  redirect: 'fetch.redirect',\n  referrer: 'fetch.referrer',\n  referrerPolicy: 'fetch.referrerPolicy',\n  integrity: 'fetch.integrity',\n  keepalive: 'fetch.keepalive',\n  signal: 'fetch.signal'\n};\n","import type {Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {global} from '@loaders.gl/loader-utils';\nimport {isPureObject, isObject} from '../../javascript-utils/is-type';\nimport {fetchFile} from '../fetch/fetch-file';\nimport {probeLog, NullLog} from './loggers';\nimport {DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS} from './option-defaults';\n/**\n * Global state for loaders.gl. Stored on `global.loaders._state`\n */\ntype GlobalLoaderState = {\n  loaderRegistry: Loader[];\n  globalOptions: {[key: string]: any};\n};\n\n/**\n * Helper for safely accessing global loaders.gl variables\n * Wraps initialization of global variable in function to defeat overly aggressive tree-shakers\n */\nexport function getGlobalLoaderState(): GlobalLoaderState {\n  // @ts-ignore\n  global.loaders = global.loaders || {};\n  // @ts-ignore\n  const {loaders} = global;\n\n  // Add _state object to keep separate from modules added to global.loaders\n  loaders._state = loaders._state || {};\n  return loaders._state;\n}\n\n// Store global loader options on the global object to increase chances of cross loaders-version interoperability\n// NOTE: This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\nconst getGlobalLoaderOptions = () => {\n  const state = getGlobalLoaderState();\n  // Ensure all default loader options from this library are mentioned\n  state.globalOptions = state.globalOptions || {...DEFAULT_LOADER_OPTIONS};\n  return state.globalOptions;\n};\n\n/**\n * Set global loader options\n * @param options\n */\nexport function setGlobalOptions(options: object): void {\n  const state = getGlobalLoaderState();\n  const globalOptions = getGlobalLoaderOptions();\n  state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n}\n\n/**\n * Merges options with global opts and loader defaults, also injects baseUri\n * @param options\n * @param loader\n * @param loaders\n * @param url\n */\nexport function normalizeOptions(\n  options: object,\n  loader: Loader,\n  loaders?: Loader[],\n  url?: string\n): object {\n  loaders = loaders || [];\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n\n  validateOptions(options, loaders);\n  return normalizeOptionsInternal(loader, options, url);\n}\n\n/**\n * Gets the current fetch function from options and context\n * @param options\n * @param context\n */\nexport function getFetchFunction(\n  options?: LoaderOptions,\n  context?: Omit<LoaderContext, 'fetch'> & Partial<Pick<LoaderContext, 'fetch'>>\n) {\n  const globalOptions = getGlobalLoaderOptions();\n\n  const fetchOptions = options || globalOptions;\n\n  // options.fetch can be a function\n  if (typeof fetchOptions.fetch === 'function') {\n    return fetchOptions.fetch;\n  }\n\n  // options.fetch can be an options object\n  if (isObject(fetchOptions.fetch)) {\n    return (url) => fetchFile(url, fetchOptions);\n  }\n\n  // else refer to context (from parent loader) if available\n  if (context?.fetch) {\n    return context?.fetch;\n  }\n\n  // else return the default fetch function\n  return fetchFile;\n}\n\n// VALIDATE OPTIONS\n\n/**\n * Warn for unsupported options\n * @param options\n * @param loaders\n */\nfunction validateOptions(options: LoaderOptions, loaders: Loader[]) {\n  // Check top level options\n  validateOptionsObject(options, null, DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS, loaders);\n  for (const loader of loaders) {\n    // Get the scoped, loader specific options from the user supplied options\n    const idOptions = (options && options[loader.id]) || {};\n\n    // Get scoped, loader specific default and deprecated options from the selected loader\n    const loaderOptions = (loader.options && loader.options[loader.id]) || {};\n    const deprecatedOptions =\n      (loader.deprecatedOptions && loader.deprecatedOptions[loader.id]) || {};\n\n    // Validate loader specific options\n    validateOptionsObject(idOptions, loader.id, loaderOptions, deprecatedOptions, loaders);\n  }\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction validateOptionsObject(\n  options,\n  id: string | null,\n  defaultOptions,\n  deprecatedOptions,\n  loaders: Loader[]\n) {\n  const loaderName = id || 'Top level';\n  const prefix = id ? `${id}.` : '';\n\n  for (const key in options) {\n    // If top level option value is an object it could options for a loader, so ignore\n    const isSubOptions = !id && isObject(options[key]);\n    const isBaseUriOption = key === 'baseUri' && !id;\n    const isWorkerUrlOption = key === 'workerUrl' && id;\n    // <loader>.workerUrl requires special handling as it is now auto-generated and no longer specified as a default option.\n    if (!(key in defaultOptions) && !isBaseUriOption && !isWorkerUrlOption) {\n      // Issue deprecation warnings\n      if (key in deprecatedOptions) {\n        probeLog.warn(\n          `${loaderName} loader option \\'${prefix}${key}\\' no longer supported, use \\'${deprecatedOptions[key]}\\'`\n        )();\n      } else if (!isSubOptions) {\n        const suggestion = findSimilarOption(key, loaders);\n        probeLog.warn(\n          `${loaderName} loader option \\'${prefix}${key}\\' not recognized. ${suggestion}`\n        )();\n      }\n    }\n  }\n}\n\nfunction findSimilarOption(optionKey, loaders) {\n  const lowerCaseOptionKey = optionKey.toLowerCase();\n  let bestSuggestion = '';\n  for (const loader of loaders) {\n    for (const key in loader.options) {\n      if (optionKey === key) {\n        return `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n      const lowerCaseKey = key.toLowerCase();\n      const isPartialMatch =\n        lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n      if (isPartialMatch) {\n        bestSuggestion = bestSuggestion || `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n    }\n  }\n  return bestSuggestion;\n}\n\nfunction normalizeOptionsInternal(loader, options, url?: string) {\n  const loaderDefaultOptions = loader.options || {};\n\n  const mergedOptions = {...loaderDefaultOptions};\n\n  addUrlOptions(mergedOptions, url);\n\n  // LOGGING: options.log can be set to `null` to defeat logging\n  if (mergedOptions.log === null) {\n    mergedOptions.log = new NullLog();\n  }\n\n  mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n  mergeNestedFields(mergedOptions, options);\n\n  return mergedOptions;\n}\n\n// Merge nested options objects\nfunction mergeNestedFields(mergedOptions, options) {\n  for (const key in options) {\n    // Check for nested options\n    // object in options => either no key in defaultOptions or object in defaultOptions\n    if (key in options) {\n      const value = options[key];\n      if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n        mergedOptions[key] = {\n          ...mergedOptions[key],\n          ...options[key]\n        };\n      } else {\n        mergedOptions[key] = options[key];\n      }\n    }\n    // else: No need to merge nested opts, and the initial merge already copied over the nested options\n  }\n}\n\n// Harvest information from the url\n// TODO - baseUri should be a directory, i.e. remove file component from baseUri\n// TODO - extract extension?\n// TODO - extract query parameters?\n// TODO - should these be injected on context instead of options?\nfunction addUrlOptions(options, url?: string) {\n  if (url && !('baseUri' in options)) {\n    options.baseUri = url;\n  }\n}\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\n\n/** Throws an `Error` with the optional `message` if `condition` is falsy */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loaders.gl assertion failed.');\n  }\n}\n","import {assert} from '../env-utils/assert';\n\nconst workerURLCache = new Map();\n\n/**\n * Creates a loadable URL from worker source or URL\n * that can be used to create `Worker` instances.\n * Due to CORS issues it may be necessary to wrap a URL in a small importScripts\n * @param props\n * @param props.source Worker source\n * @param props.url Worker URL\n * @returns loadable url\n */\nexport function getLoadableWorkerURL(props: {source?: string; url?: string}) {\n  assert((props.source && !props.url) || (!props.source && props.url)); // Either source or url must be defined\n\n  let workerURL = workerURLCache.get(props.source || props.url);\n  if (!workerURL) {\n    // Differentiate worker urls from worker source code\n    if (props.url) {\n      workerURL = getLoadableWorkerURLFromURL(props.url);\n      workerURLCache.set(props.url, workerURL);\n    }\n\n    if (props.source) {\n      workerURL = getLoadableWorkerURLFromSource(props.source);\n      workerURLCache.set(props.source, workerURL);\n    }\n  }\n\n  assert(workerURL);\n  return workerURL;\n}\n\n/**\n * Build a loadable worker URL from worker URL\n * @param url\n * @returns loadable URL\n */\nfunction getLoadableWorkerURLFromURL(url: string): string {\n  // A local script url, we can use it to initialize a Worker directly\n  if (!url.startsWith('http')) {\n    return url;\n  }\n\n  // A remote script, we need to use `importScripts` to load from different origin\n  const workerSource = buildScriptSource(url);\n  return getLoadableWorkerURLFromSource(workerSource);\n}\n\n/**\n * Build a loadable worker URL from worker source\n * @param workerSource\n * @returns loadable url\n */\nfunction getLoadableWorkerURLFromSource(workerSource: string): string {\n  // NOTE: webworkify was previously used\n  // const blob = webworkify(workerSource, {bare: true});\n  const blob = new Blob([workerSource], {type: 'application/javascript'});\n  return URL.createObjectURL(blob);\n}\n\n/**\n * Per spec, worker cannot be initialized with a script from a different origin\n * However a local worker script can still import scripts from other origins,\n * so we simply build a wrapper script.\n *\n * @param workerUrl\n * @returns source\n */\nfunction buildScriptSource(workerUrl: string): string {\n  return `\\\ntry {\n  importScripts('${workerUrl}');\n} catch (error) {\n  console.error(error);\n  throw error;\n}`;\n}\n","// NOTE - there is a copy of this function is both in core and loader-utils\n// core does not need all the utils in loader-utils, just this one.\n\n/**\n * Returns an array of Transferrable objects that can be used with postMessage\n * https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n * @param object data to be sent via postMessage\n * @param recursive - not for application use\n * @param transfers - not for application use\n * @returns a transfer list that can be passed to postMessage\n */\nexport function getTransferList(\n  object: any,\n  recursive: boolean = true,\n  transfers?: Set<any>\n): Transferable[] {\n  // Make sure that items in the transfer list is unique\n  const transfersSet = transfers || new Set();\n\n  if (!object) {\n    // ignore\n  } else if (isTransferable(object)) {\n    transfersSet.add(object);\n  } else if (isTransferable(object.buffer)) {\n    // Typed array\n    transfersSet.add(object.buffer);\n  } else if (ArrayBuffer.isView(object)) {\n    // object is a TypeArray viewing into a SharedArrayBuffer (not transferable)\n    // Do not iterate through the content in this case\n  } else if (recursive && typeof object === 'object') {\n    for (const key in object) {\n      // Avoid perf hit - only go one level deep\n      getTransferList(object[key], recursive, transfersSet);\n    }\n  }\n\n  // If transfers is defined, is internal recursive call\n  // Otherwise it's called by the user\n  return transfers === undefined ? Array.from(transfersSet) : [];\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Transferable\nfunction isTransferable(object) {\n  if (!object) {\n    return false;\n  }\n  if (object instanceof ArrayBuffer) {\n    return true;\n  }\n  if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n    return true;\n  }\n  if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n    return true;\n  }\n  // @ts-ignore\n  if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n    return true;\n  }\n  return false;\n}\n","import {assert} from '../env-utils/assert';\nimport {getLoadableWorkerURL} from '../worker-utils/get-loadable-worker-url';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst NOOP = () => {};\n\nexport type WorkerThreadProps = {\n  name: string;\n  source?: string;\n  url?: string;\n};\n\n/**\n * Represents one worker thread\n */\nexport default class WorkerThread {\n  readonly name: string;\n  readonly source: string | undefined;\n  readonly url: string | undefined;\n  terminated: boolean = false;\n  worker: Worker;\n  onMessage: (message: any) => void;\n  onError: (error: Error) => void;\n\n  private _loadableURL: string = '';\n\n  static isSupported(): boolean {\n    return typeof Worker !== 'undefined';\n  }\n\n  constructor(props: WorkerThreadProps) {\n    const {name, source, url} = props;\n    assert(source || url); // Either source or url must be defined\n    this.name = name;\n    this.source = source;\n    this.url = url;\n    this.onMessage = NOOP;\n    this.onError = (error) => console.log(error); // eslint-disable-line\n\n    this.worker = this._createBrowserWorker();\n  }\n\n  /**\n   * Terminate this worker thread\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    this.onMessage = NOOP;\n    this.onError = NOOP;\n    // @ts-ignore\n    this.worker.terminate();\n    this.terminated = true;\n  }\n\n  get isRunning() {\n    return Boolean(this.onMessage);\n  }\n\n  /**\n   * Send a message to this worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   * @param transferList If not supplied, calculated automatically by traversing data\n   */\n  postMessage(data: any, transferList?: any[]): void {\n    transferList = transferList || getTransferList(data);\n    // @ts-ignore\n    this.worker.postMessage(data, transferList);\n  }\n\n  // PRIVATE\n\n  /**\n   * Generate a standard Error from an ErrorEvent\n   * @param {ErrorEvent} event\n   */\n  _getErrorFromErrorEvent(event) {\n    // Note Error object does not have the expected fields if loading failed completely\n    // https://developer.mozilla.org/en-US/docs/Web/API/Worker#Event_handlers\n    // https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n    let message = 'Failed to load ';\n    message += `worker ${this.name}. `;\n    if (event.message) {\n      message += `${event.message} in `;\n    }\n    // const hasFilename = event.filename && !event.filename.startsWith('blob:');\n    // message += hasFilename ? event.filename : this.source.slice(0, 100);\n    if (event.lineno) {\n      message += `:${event.lineno}:${event.colno}`;\n    }\n    return new Error(message);\n  }\n\n  /**\n   * Creates a worker thread on the browser\n   */\n  _createBrowserWorker() {\n    this._loadableURL = getLoadableWorkerURL({source: this.source, url: this.url});\n    const worker = new Worker(this._loadableURL, {name: this.name});\n\n    worker.onmessage = (event) => {\n      if (!event.data) {\n        this.onError(new Error('No data received'));\n      } else {\n        this.onMessage(event.data);\n      }\n    };\n    // This callback represents an uncaught exception in the worker thread\n    worker.onerror = (error) => {\n      this.onError(this._getErrorFromErrorEvent(error));\n      this.terminated = true;\n    };\n    // TODO - not clear when this would be called, for now just log in case it happens\n    worker.onmessageerror = (event) => console.error(event); // eslint-disable-line\n\n    return worker;\n  }\n}\n","import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport WorkerThread from './worker-thread';\nimport {assert} from '../env-utils/assert';\n\n/**\n * Represents one Job handled by a WorkerPool or WorkerFarm\n */\nexport default class WorkerJob {\n  readonly name: string;\n  readonly workerThread: WorkerThread;\n  isRunning: boolean;\n  /** Promise that resolves when Job is done */\n  readonly result: Promise<any>;\n\n  private _resolve: (value: any) => void;\n  private _reject: (reason?: any) => void;\n\n  constructor(jobName: string, workerThread: WorkerThread) {\n    this.name = jobName;\n    this.workerThread = workerThread;\n    this.isRunning = true;\n    this._resolve = () => {};\n    this._reject = () => {};\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  /**\n   * Send a message to the job's worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   */\n  postMessage(type: WorkerMessageType, payload: WorkerMessagePayload): void {\n    this.workerThread.postMessage({\n      source: 'loaders.gl', // Lets worker ignore unrelated messages\n      type,\n      payload\n    });\n  }\n\n  /**\n   * Call to resolve the `result` Promise with the supplied value\n   */\n  done(value): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._resolve(value);\n  }\n\n  /**\n   * Call to reject the `result` Promise with the supplied error\n   */\n  error(error): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._reject(error);\n  }\n}\n","import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport {isMobile} from '../env-utils/globals';\nimport WorkerThread from './worker-thread';\nimport WorkerJob from './worker-job';\n\n/** WorkerPool onDebug Callback Parameters */\ntype OnDebugParameters = {\n  message: string;\n  worker: string;\n  name: string;\n  job: string;\n  backlog: number;\n  workerThread: WorkerThread;\n};\n\n/** WorkerPool Properties */\nexport type WorkerPoolProps = {\n  name?: string;\n  source?: string; // | Function;\n  url?: string;\n  maxConcurrency?: number;\n  maxMobileConcurrency?: number;\n  onDebug?: (options: OnDebugParameters) => any;\n  reuseWorkers?: boolean;\n};\n\n/** Private helper types */\ntype OnMessage = (job: WorkerJob, type: WorkerMessageType, payload: WorkerMessagePayload) => void;\ntype OnError = (job: WorkerJob, error: Error) => void;\n\ntype QueuedJob = {\n  name: string;\n  onMessage: OnMessage;\n  onError: OnError;\n  onStart: (value: any) => void; // Resolve job start promise\n};\n\n/**\n * Process multiple data messages with small pool of identical workers\n */\nexport default class WorkerPool {\n  name: string = 'unnamed';\n  source?: string; // | Function;\n  url?: string;\n  maxConcurrency: number = 1;\n  maxMobileConcurrency: number = 1;\n  onDebug: (options: OnDebugParameters) => any = () => {};\n  reuseWorkers: boolean = true;\n\n  private props: WorkerPoolProps = {};\n  private jobQueue: QueuedJob[] = [];\n  private idleQueue: WorkerThread[] = [];\n  private count = 0;\n  private isDestroyed = false;\n\n  /**\n   * @param processor - worker function\n   * @param maxConcurrency - max count of workers\n   */\n  constructor(props: WorkerPoolProps) {\n    this.source = props.source;\n    this.url = props.url;\n    this.setProps(props);\n  }\n\n  /**\n   * Terminates all workers in the pool\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    // Destroy idle workers, active Workers will be destroyed on completion\n    this.idleQueue.forEach((worker) => worker.destroy());\n    this.isDestroyed = true;\n  }\n\n  setProps(props: WorkerPoolProps) {\n    this.props = {...this.props, ...props};\n\n    if (props.name !== undefined) {\n      this.name = props.name;\n    }\n    if (props.maxConcurrency !== undefined) {\n      this.maxConcurrency = props.maxConcurrency;\n    }\n    if (props.maxMobileConcurrency !== undefined) {\n      this.maxMobileConcurrency = props.maxMobileConcurrency;\n    }\n    if (props.reuseWorkers !== undefined) {\n      this.reuseWorkers = props.reuseWorkers;\n    }\n    if (props.onDebug !== undefined) {\n      this.onDebug = props.onDebug;\n    }\n  }\n\n  async startJob(\n    name: string,\n    onMessage: OnMessage = (job, type, data) => job.done(data),\n    onError: OnError = (job, error) => job.error(error)\n  ): Promise<WorkerJob> {\n    // Promise resolves when thread starts working on this job\n    const startPromise = new Promise<WorkerJob>((onStart) => {\n      // Promise resolves when thread completes or fails working on this job\n      this.jobQueue.push({name, onMessage, onError, onStart});\n      return this;\n    });\n    this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    return await startPromise;\n  }\n\n  // PRIVATE\n\n  /**\n   * Starts first queued job if worker is available or can be created\n   * Called when job is started and whenever a worker returns to the idleQueue\n   */\n  async _startQueuedJob(): Promise<void> {\n    if (!this.jobQueue.length) {\n      return;\n    }\n\n    const workerThread = this._getAvailableWorker();\n    if (!workerThread) {\n      return;\n    }\n\n    // We have a worker, dequeue and start the job\n    const queuedJob = this.jobQueue.shift();\n    if (queuedJob) {\n      // Emit a debug event\n      // @ts-ignore\n      this.onDebug({\n        message: 'Starting job',\n        name: queuedJob.name,\n        workerThread,\n        backlog: this.jobQueue.length\n      });\n\n      // Create a worker job to let the app access thread and manage job completion\n      const job = new WorkerJob(queuedJob.name, workerThread);\n\n      // Set the worker thread's message handlers\n      workerThread.onMessage = (data) => queuedJob.onMessage(job, data.type, data.payload);\n      workerThread.onError = (error) => queuedJob.onError(job, error);\n\n      // Resolve the start promise so that the app can start sending messages to worker\n      queuedJob.onStart(job);\n\n      // Wait for the app to signal that the job is complete, then return worker to queue\n      try {\n        await job.result;\n      } finally {\n        this.returnWorkerToQueue(workerThread);\n      }\n    }\n  }\n\n  /**\n   * Returns a worker to the idle queue\n   * Destroys the worker if\n   *  - pool is destroyed\n   *  - if this pool doesn't reuse workers\n   *  - if maxConcurrency has been lowered\n   * @param worker\n   */\n  returnWorkerToQueue(worker: WorkerThread) {\n    const shouldDestroyWorker =\n      this.isDestroyed || !this.reuseWorkers || this.count > this._getMaxConcurrency();\n\n    if (shouldDestroyWorker) {\n      worker.destroy();\n      this.count--;\n    } else {\n      this.idleQueue.push(worker);\n    }\n\n    if (!this.isDestroyed) {\n      this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    }\n  }\n\n  /**\n   * Returns idle worker or creates new worker if maxConcurrency has not been reached\n   */\n  _getAvailableWorker(): WorkerThread | null {\n    // If a worker has completed and returned to the queue, it can be used\n    if (this.idleQueue.length > 0) {\n      return this.idleQueue.shift() || null;\n    }\n\n    // Create fresh worker if we haven't yet created the max amount of worker threads for this worker source\n    if (this.count < this._getMaxConcurrency()) {\n      this.count++;\n      const name = `${this.name.toLowerCase()} (#${this.count} of ${this.maxConcurrency})`;\n      return new WorkerThread({name, source: this.source, url: this.url});\n    }\n\n    // No worker available, have to wait\n    return null;\n  }\n\n  _getMaxConcurrency() {\n    return isMobile ? this.maxMobileConcurrency : this.maxConcurrency;\n  }\n}\n","import WorkerPool from './worker-pool';\nimport WorkerThread from './worker-thread';\n\n/**\n * @param maxConcurrency {number} - max count of workers\n */\nexport type WorkerFarmProps = {\n  maxConcurrency?: number;\n  maxMobileConcurrency?: number;\n  reuseWorkers?: boolean;\n  onDebug?: () => void;\n};\n\nconst DEFAULT_PROPS: WorkerFarmProps = {\n  maxConcurrency: 3,\n  maxMobileConcurrency: 1,\n  onDebug: () => {},\n  reuseWorkers: true\n};\n\n/**\n * Process multiple jobs with a \"farm\" of different workers in worker pools.\n */\nexport default class WorkerFarm {\n  private props: WorkerFarmProps;\n  private workerPools = new Map<string, WorkerPool>();\n  // singleton\n  private static _workerFarm?: WorkerFarm;\n\n  /** Check if Workers are supported */\n  static isSupported(): boolean {\n    return WorkerThread.isSupported();\n  }\n\n  /** Get the singleton instance of the global worker farm */\n  static getWorkerFarm(props: WorkerFarmProps = {}): WorkerFarm {\n    WorkerFarm._workerFarm = WorkerFarm._workerFarm || new WorkerFarm({});\n    WorkerFarm._workerFarm.setProps(props);\n    return WorkerFarm._workerFarm;\n  }\n\n  /** get global instance with WorkerFarm.getWorkerFarm() */\n  private constructor(props: WorkerFarmProps) {\n    this.props = {...DEFAULT_PROPS};\n    this.setProps(props);\n    /** @type Map<string, WorkerPool>} */\n    this.workerPools = new Map();\n  }\n\n  /**\n   * Terminate all workers in the farm\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    for (const workerPool of this.workerPools.values()) {\n      workerPool.destroy();\n    }\n  }\n\n  /**\n   * Set props used when initializing worker pools\n   * @param props\n   */\n  setProps(props: WorkerFarmProps): void {\n    this.props = {...this.props, ...props};\n    // Update worker pool props\n    for (const workerPool of this.workerPools.values()) {\n      workerPool.setProps(this._getWorkerPoolProps());\n    }\n  }\n\n  /**\n   * Returns a worker pool for the specified worker\n   * @param options - only used first time for a specific worker name\n   * @param options.name - the name of the worker - used to identify worker pool\n   * @param options.url -\n   * @param options.source -\n   * @example\n   *   const job = WorkerFarm.getWorkerFarm().getWorkerPool({name, url}).startJob(...);\n   */\n  getWorkerPool(options: {name: string; source?: string; url?: string}): WorkerPool {\n    const {name, source, url} = options;\n    let workerPool = this.workerPools.get(name);\n    if (!workerPool) {\n      workerPool = new WorkerPool({\n        name,\n        source,\n        url\n      });\n      workerPool.setProps(this._getWorkerPoolProps());\n      this.workerPools.set(name, workerPool);\n    }\n    return workerPool;\n  }\n\n  _getWorkerPoolProps() {\n    return {\n      maxConcurrency: this.props.maxConcurrency,\n      maxMobileConcurrency: this.props.maxMobileConcurrency,\n      reuseWorkers: this.props.reuseWorkers,\n      onDebug: this.props.onDebug\n    };\n  }\n}\n","import type {WorkerJob, WorkerMessageType, WorkerMessagePayload} from '@loaders.gl/worker-utils';\nimport type {Loader, LoaderOptions, LoaderContext} from '../../types';\nimport {WorkerFarm, getWorkerURL} from '@loaders.gl/worker-utils';\n\n/**\n * Determines if a loader can parse with worker\n * @param loader\n * @param options\n */\nexport function canParseWithWorker(loader: Loader, options?: LoaderOptions) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n\n  return loader.worker && options?.worker;\n}\n\n/**\n * this function expects that the worker function sends certain messages,\n * this can be automated if the worker is wrapper by a call to createLoaderWorker in @loaders.gl/loader-utils.\n */\nexport async function parseWithWorker(\n  loader: Loader,\n  data,\n  options?: LoaderOptions,\n  context?: LoaderContext,\n  parseOnMainThread?: (arrayBuffer: ArrayBuffer, options: {[key: string]: any}) => Promise<void>\n) {\n  const name = loader.id; // TODO\n  const url = getWorkerURL(loader, options);\n\n  const workerFarm = WorkerFarm.getWorkerFarm(options);\n  const workerPool = workerFarm.getWorkerPool({name, url});\n\n  // options.log object contains functions which cannot be transferred\n  // TODO - decide how to handle logging on workers\n  options = JSON.parse(JSON.stringify(options));\n\n  const job = await workerPool.startJob(\n    'process-on-worker',\n    // eslint-disable-next-line\n    onMessage.bind(null, parseOnMainThread)\n  );\n\n  job.postMessage('process', {\n    // @ts-ignore\n    input: data,\n    options\n  });\n\n  const result = await job.result;\n  return await result.result;\n}\n\n/**\n * Handle worker's responses to the main thread\n * @param job\n * @param type\n * @param payload\n */\nasync function onMessage(\n  parseOnMainThread,\n  job: WorkerJob,\n  type: WorkerMessageType,\n  payload: WorkerMessagePayload\n) {\n  switch (type) {\n    case 'done':\n      job.done(payload);\n      break;\n\n    case 'error':\n      job.error(payload.error);\n      break;\n\n    case 'process':\n      // Worker is asking for main thread to parseO\n      const {id, input, options} = payload;\n      try {\n        const result = await parseOnMainThread(input, options);\n        job.postMessage('done', {id, result});\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'unknown error';\n        job.postMessage('error', {id, error: message});\n      }\n      break;\n\n    default:\n      // eslint-disable-next-line\n      console.warn(`parse-with-worker unknown message ${type}`);\n  }\n}\n","import type {WorkerObject, WorkerOptions} from '../../types';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\nconst NPM_TAG = 'latest';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : NPM_TAG;\n\n/**\n * Gets worker object's name (for debugging in Chrome thread inspector window)\n */\nexport function getWorkerName(worker: WorkerObject): string {\n  const warning = worker.version !== VERSION ? ` (worker-utils@${VERSION})` : '';\n  return `${worker.name}@${worker.version}${warning}`;\n}\n\n/**\n * Generate a worker URL based on worker object and options\n * @returns A URL to one of the following:\n * - a published worker on unpkg CDN\n * - a local test worker\n * - a URL provided by the user in options\n */\nexport function getWorkerURL(worker: WorkerObject, options: WorkerOptions = {}): string {\n  const workerOptions = options[worker.id] || {};\n\n  const workerFile = `${worker.id}-worker.js`;\n\n  let url = workerOptions.workerUrl;\n\n  // If URL is test, generate local loaders.gl url\n  // @ts-ignore _workerType\n  if (options._workerType === 'test') {\n    url = `modules/${worker.module}/dist/${workerFile}`;\n  }\n\n  // If url override is not provided, generate a URL to published version on npm CDN unpkg.com\n  if (!url) {\n    // GENERATE\n    let version = worker.version;\n    // On master we need to load npm alpha releases published with the `beta` tag\n    if (version === 'latest') {\n      // throw new Error('latest worker version specified');\n      version = NPM_TAG;\n    }\n    const versionTag = version ? `@${version}` : '';\n    url = `https://unpkg.com/@loaders.gl/${worker.module}${versionTag}/dist/${workerFile}`;\n  }\n\n  assert(url);\n\n  // Allow user to override location\n  return url;\n}\n","import {TypedArray} from '../../types';\nimport * as node from './buffer-utils';\n\n/**\n * Convert an object to an array buffer\n */\nexport function toArrayBuffer(data: any): ArrayBuffer {\n  // Note: Should be called first, Buffers can trigger other detections below\n  if (node.isBuffer(data)) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    data = node.bufferToArrayBuffer(data);\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return data;\n  }\n\n  // Careful - Node Buffers look like Uint8Arrays (keep after isBuffer)\n  if (ArrayBuffer.isView(data)) {\n    if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n      return data.buffer;\n    }\n    return data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n  }\n\n  if (typeof data === 'string') {\n    const text = data;\n    const uint8Array = new TextEncoder().encode(text);\n    return uint8Array.buffer;\n  }\n\n  // HACK to support Blob polyfill\n  if (data && typeof data === 'object' && data._toArrayBuffer) {\n    return data._toArrayBuffer();\n  }\n\n  throw new Error('toArrayBuffer');\n}\n\n/**\n * compare two binary arrays for equality\n * @param {ArrayBuffer} a\n * @param {ArrayBuffer} b\n * @param {number} byteLength\n */\nexport function compareArrayBuffers(\n  arrayBuffer1: ArrayBuffer,\n  arrayBuffer2: ArrayBuffer,\n  byteLength?: number\n): boolean {\n  byteLength = byteLength || arrayBuffer1.byteLength;\n  if (arrayBuffer1.byteLength < byteLength || arrayBuffer2.byteLength < byteLength) {\n    return false;\n  }\n  const array1 = new Uint8Array(arrayBuffer1);\n  const array2 = new Uint8Array(arrayBuffer2);\n  for (let i = 0; i < array1.length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Concatenate a sequence of ArrayBuffers\n * @return A concatenated ArrayBuffer\n */\nexport function concatenateArrayBuffers(...sources: (ArrayBuffer | Uint8Array)[]): ArrayBuffer {\n  // Make sure all inputs are wrapped in typed arrays\n  const sourceArrays = sources.map((source2) =>\n    source2 instanceof ArrayBuffer ? new Uint8Array(source2) : source2\n  );\n\n  // Get length of all inputs\n  const byteLength = sourceArrays.reduce((length, typedArray) => length + typedArray.byteLength, 0);\n\n  // Allocate array with space for all inputs\n  const result = new Uint8Array(byteLength);\n\n  // Copy the subarrays\n  let offset = 0;\n  for (const sourceArray of sourceArrays) {\n    result.set(sourceArray, offset);\n    offset += sourceArray.byteLength;\n  }\n\n  // We work with ArrayBuffers, discard the typed array wrapper\n  return result.buffer;\n}\n\n/**\n * Concatenate arbitrary count of typed arrays\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n * @param {...*} arrays - list of arrays. All arrays should be the same type\n * @return A concatenated TypedArray\n */\nexport function concatenateTypedArrays<T>(...typedArrays: T[]): T {\n  // @ts-ignore\n  const arrays = typedArrays as TypedArray[];\n  // @ts-ignore\n  const TypedArrayConstructor = (arrays && arrays.length > 1 && arrays[0].constructor) || null;\n  if (!TypedArrayConstructor) {\n    throw new Error(\n      '\"concatenateTypedArrays\" - incorrect quantity of arguments or arguments have incompatible data types'\n    );\n  }\n\n  const sumLength = arrays.reduce((acc, value) => acc + value.length, 0);\n  // @ts-ignore typescript does not like dynamic constructors\n  const result = new TypedArrayConstructor(sumLength);\n  let offset = 0;\n  for (const array of arrays) {\n    result.set(array, offset);\n    offset += array.length;\n  }\n  return result;\n}\n\n/**\n * Copy a view of an ArrayBuffer into new ArrayBuffer with byteOffset = 0\n * @param arrayBuffer\n * @param byteOffset\n * @param byteLength\n */\nexport function sliceArrayBuffer(\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number,\n  byteLength?: number\n): ArrayBuffer {\n  const subArray =\n    byteLength !== undefined\n      ? new Uint8Array(arrayBuffer).subarray(byteOffset, byteOffset + byteLength)\n      : new Uint8Array(arrayBuffer).subarray(byteOffset);\n  const arrayCopy = new Uint8Array(subArray);\n  return arrayCopy.buffer;\n}\n","import * as node from '../node/buffer';\n\n/**\n * Check for Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n */\nexport function isBuffer(value: any): boolean {\n  return value && typeof value === 'object' && value.isBuffer;\n}\n\n/**\n * Converts to Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function toBuffer(data: any): Buffer {\n  return node.toBuffer ? node.toBuffer(data) : data;\n}\n\n/**\n * Converts Node.js `Buffer` to `ArrayBuffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function bufferToArrayBuffer(data: any): ArrayBuffer {\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    return node.toArrayBuffer(data);\n  }\n  return data;\n}\n","import {concatenateArrayBuffers} from '../binary-utils/array-buffer-utils';\n\n// GENERAL UTILITIES\n\n/**\n * Iterate over async iterator, without resetting iterator if end is not reached\n * - forEach intentionally does not reset iterator if exiting loop prematurely\n *   so that iteration can continue in a second loop\n * - It is recommended to use a standard for-await as last loop to ensure\n *   iterator gets properly reset\n *\n * TODO - optimize using sync iteration if argument is an Iterable?\n *\n * @param iterator\n * @param visitor\n */\nexport async function forEach(iterator, visitor) {\n  // eslint-disable-next-line\n  while (true) {\n    const {done, value} = await iterator.next();\n    if (done) {\n      iterator.return();\n      return;\n    }\n    const cancel = visitor(value);\n    if (cancel) {\n      return;\n    }\n  }\n}\n\n// Breaking big data into iterable chunks, concatenating iterable chunks into big data objects\n\n/**\n * Concatenates all data chunks yielded by an (async) iterator\n * This function can e.g. be used to enable atomic parsers to work on (async) iterator inputs\n */\n\nexport async function concatenateArrayBuffersAsync(\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n): Promise<ArrayBuffer> {\n  const arrayBuffers: ArrayBuffer[] = [];\n  for await (const chunk of asyncIterator) {\n    arrayBuffers.push(chunk);\n  }\n  return concatenateArrayBuffers(...arrayBuffers);\n}\n\nexport async function concatenateStringsAsync(\n  asyncIterator: AsyncIterable<string> | Iterable<string>\n): Promise<string> {\n  const strings: string[] = [];\n  for await (const chunk of asyncIterator) {\n    strings.push(chunk);\n  }\n  return strings.join('');\n}\n","import type {IteratorOptions} from './make-iterator';\n\nconst DEFAULT_CHUNK_SIZE = 256 * 1024;\n\n/**\n * Returns an iterator that breaks a big ArrayBuffer into chunks and yields them one-by-one\n * @param blob ArrayBuffer to iterate over\n * @param options\n * @param options.chunkSize\n */\nexport function* makeArrayBufferIterator(\n  arrayBuffer: ArrayBuffer,\n  options: IteratorOptions = {}\n): Iterable<ArrayBuffer> {\n  const {chunkSize = DEFAULT_CHUNK_SIZE} = options;\n\n  let byteOffset = 0;\n\n  while (byteOffset < arrayBuffer.byteLength) {\n    // Create a chunk of the right size\n    const chunkByteLength = Math.min(arrayBuffer.byteLength - byteOffset, chunkSize);\n    const chunk = new ArrayBuffer(chunkByteLength);\n\n    // Copy data from the big chunk\n    const sourceArray = new Uint8Array(arrayBuffer, byteOffset, chunkByteLength);\n    const chunkArray = new Uint8Array(chunk);\n    chunkArray.set(sourceArray);\n\n    // yield the chunk\n    byteOffset += chunkByteLength;\n    yield chunk;\n  }\n}\n","import type {Readable} from 'stream';\nimport {isBrowser, toArrayBuffer} from '@loaders.gl/loader-utils';\n\nexport type StreamIteratorOptions = {\n  _streamReadAhead?: boolean;\n};\n\n/**\n * Returns an async iterable that reads from a stream (works in both Node.js and browsers)\n * @param stream stream to iterator over\n */\nexport function makeStreamIterator(\n  stream: ReadableStream | Readable,\n  options?: StreamIteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  return isBrowser\n    ? makeBrowserStreamIterator(stream as ReadableStream, options)\n    : makeNodeStreamIterator(stream as Readable, options);\n}\n\n/**\n * Returns an async iterable that reads from a DOM (browser) stream\n * @param stream stream to iterate from\n * @see https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate\n */\nasync function* makeBrowserStreamIterator(\n  stream: ReadableStream,\n  options?: StreamIteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  // WhatWG: stream is supposed to have a `getIterator` method\n  // if (typeof stream.getIterator === 'function') {\n  //   return stream.getIterator();\n  // }\n  // if (typeof stream[Symbol.asyncIterator] === 'function') {\n  //   return makeToArrayBufferIterator(stream);\n  // }\n\n  // In the browser, we first need to get a lock on the stream\n  const reader = stream.getReader();\n\n  let nextBatchPromise: Promise<{done?: boolean; value?: Uint8Array}> | undefined;\n\n  try {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const currentBatchPromise = nextBatchPromise || reader.read();\n      // Issue a read for an additional batch, while we await the next batch\n      // Idea is to make fetching happen in parallel with processing / parsing\n      if (options?._streamReadAhead) {\n        nextBatchPromise = reader.read();\n      }\n      // Read from the stream\n      // value is a Uint8Array\n      const {done, value} = await currentBatchPromise;\n      // Exit if we're done\n      if (done) {\n        return;\n      }\n      // Else yield the chunk\n      yield toArrayBuffer(value);\n    }\n  } catch (error) {\n    // TODO - examples makes it look like this should always be called,\n    // but that generates exceptions so only call it if we do not reach the end\n    reader.releaseLock();\n  }\n}\n\n/**\n * Returns an async iterable that reads from a DOM (browser) stream\n * @param stream stream to iterate from\n * @note Requires Node.js >= 10\n */\nasync function* makeNodeStreamIterator(\n  stream: Readable,\n  options?: StreamIteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  // Hacky test for node version to ensure we don't call bad polyfills\n  // NODE 10+: stream is an asyncIterator\n  for await (const chunk of stream) {\n    yield toArrayBuffer(chunk); // Coerce each chunk to ArrayBuffer\n  }\n}\n/* TODO - remove NODE < 10\n * @see https://github.com/bustle/streaming-iterables, MIT license\n *\n  if (typeof stream[Symbol.asyncIterator] === 'function') {\n    return;\n  }\n\n  // TODO - check if is this ever used in Node 10+?\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const data = stream.read();\n    if (data !== null) {\n      yield toArrayBuffer(data);\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (stream._readableState?.ended) {\n      return;\n    }\n    await onceReadable(stream);\n  }\n\nasync function onceReadable(stream: Readable): Promise<any> {\n  return new Promise((resolve) => {\n    stream.once('readable', resolve);\n  });\n}\n  */\n","import type {ReadStream} from 'fs';\n\nimport {makeStringIterator} from './make-string-iterator';\nimport {makeArrayBufferIterator} from './make-array-buffer-iterator';\nimport {makeBlobIterator} from './make-blob-iterator';\nimport type {StreamIteratorOptions} from './make-stream-iterator';\nimport {makeStreamIterator} from './make-stream-iterator';\nimport {isBlob, isReadableStream, isResponse} from '../../javascript-utils/is-type';\n\n/**\n * @param [options.chunkSize]\n */\nexport type IteratorOptions = StreamIteratorOptions & {\n  chunkSize?: number;\n};\n\n/**\n * Returns an iterator that breaks its input into chunks and yields them one-by-one.\n * @param data\n * @param options\n * @returns\n * This function can e.g. be used to enable data sources that can only be read atomically\n * (such as `Blob` and `File` via `FileReader`) to still be parsed in batches.\n */\nexport function makeIterator(\n  data: ArrayBuffer | string | Blob | Response | ReadableStream | ReadStream,\n  options?: IteratorOptions\n): AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer> {\n  if (typeof data === 'string') {\n    // Note: Converts string chunks to binary\n    return makeStringIterator(data, options);\n  }\n  if (data instanceof ArrayBuffer) {\n    return makeArrayBufferIterator(data, options);\n  }\n  if (isBlob(data)) {\n    return makeBlobIterator(data as Blob, options);\n  }\n  if (isReadableStream(data)) {\n    return makeStreamIterator(data as ReadableStream, options);\n  }\n  if (isResponse(data)) {\n    const response = data as Response;\n    return makeStreamIterator(response.body as ReadableStream, options);\n  }\n  throw new Error('makeIterator');\n}\n","import type {IteratorOptions} from './make-iterator';\n\nconst DEFAULT_CHUNK_SIZE = 256 * 1024;\n\n/**\n * Returns an iterator that breaks a big string into chunks and yields them one-by-one as ArrayBuffers\n * @param blob string to iterate over\n * @param options\n * @param options.chunkSize\n */\nexport function* makeStringIterator(\n  string: string,\n  options?: IteratorOptions\n): Iterable<ArrayBuffer> {\n  const chunkSize = options?.chunkSize || DEFAULT_CHUNK_SIZE;\n\n  let offset = 0;\n  const textEncoder = new TextEncoder();\n  while (offset < string.length) {\n    // Create a chunk of the right size\n    const chunkLength = Math.min(string.length - offset, chunkSize);\n    const chunk = string.slice(offset, offset + chunkLength);\n    offset += chunkLength;\n\n    // yield an ArrayBuffer chunk\n    yield textEncoder.encode(chunk);\n  }\n}\n","import type {IteratorOptions} from './make-iterator';\n\nconst DEFAULT_CHUNK_SIZE = 1024 * 1024; // 1MB — biggest value that keeps UI responsive\n\n/**\n * Returns an iterator that breaks a big Blob into chunks and yields them one-by-one\n * @param blob Blob or File object\n * @param options\n * @param options.chunkSize\n */\nexport async function* makeBlobIterator(\n  blob: Blob,\n  options?: IteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  const chunkSize = options?.chunkSize || DEFAULT_CHUNK_SIZE;\n\n  let offset = 0;\n  while (offset < blob.size) {\n    const end = offset + chunkSize;\n\n    const chunk = await blob.slice(offset, end).arrayBuffer();\n\n    offset = end;\n    yield chunk;\n  }\n}\n","import type {\n  DataType,\n  SyncDataType,\n  BatchableDataType,\n  Loader,\n  LoaderOptions\n} from '@loaders.gl/loader-utils';\nimport {concatenateArrayBuffersAsync} from '@loaders.gl/loader-utils';\nimport {\n  isResponse,\n  isReadableStream,\n  isAsyncIterable,\n  isIterable,\n  isIterator,\n  isBlob,\n  isBuffer\n} from '../../javascript-utils/is-type';\nimport {makeIterator} from '../../iterators/make-iterator/make-iterator';\nimport {checkResponse, makeResponse} from '../utils/response-utils';\n\nconst ERR_DATA = 'Cannot convert supplied data type';\n\n// eslint-disable-next-line complexity\nexport function getArrayBufferOrStringFromDataSync(\n  data: SyncDataType,\n  loader: Loader,\n  options: LoaderOptions\n): ArrayBuffer | string {\n  if (loader.text && typeof data === 'string') {\n    return data;\n  }\n\n  if (isBuffer(data)) {\n    // @ts-ignore\n    data = data.buffer;\n  }\n\n  if (data instanceof ArrayBuffer) {\n    const arrayBuffer = data;\n    if (loader.text && !loader.binary) {\n      const textDecoder = new TextDecoder('utf8');\n      return textDecoder.decode(arrayBuffer);\n    }\n    return arrayBuffer;\n  }\n\n  // We may need to handle offsets\n  if (ArrayBuffer.isView(data)) {\n    // TextDecoder is invoked on typed arrays and will handle offsets\n    if (loader.text && !loader.binary) {\n      const textDecoder = new TextDecoder('utf8');\n      return textDecoder.decode(data);\n    }\n\n    let arrayBuffer = data.buffer;\n\n    // Since we are returning the underlying arrayBuffer, we must create a new copy\n    // if this typed array / Buffer is a partial view into the ArryayBuffer\n    // TODO - this is a potentially unnecessary copy\n    const byteLength = data.byteLength || data.length;\n    if (data.byteOffset !== 0 || byteLength !== arrayBuffer.byteLength) {\n      // console.warn(`loaders.gl copying arraybuffer of length ${byteLength}`);\n      arrayBuffer = arrayBuffer.slice(data.byteOffset, data.byteOffset + byteLength);\n    }\n    return arrayBuffer;\n  }\n\n  throw new Error(ERR_DATA);\n}\n\n// Convert async iterator to a promise\nexport async function getArrayBufferOrStringFromData(\n  data: DataType,\n  loader: Loader,\n  options: LoaderOptions\n): Promise<ArrayBuffer | string> {\n  const isArrayBuffer = data instanceof ArrayBuffer || ArrayBuffer.isView(data);\n  if (typeof data === 'string' || isArrayBuffer) {\n    return getArrayBufferOrStringFromDataSync(data as string | ArrayBuffer, loader, options);\n  }\n\n  // Blobs and files are FileReader compatible\n  if (isBlob(data)) {\n    data = await makeResponse(data);\n  }\n\n  if (isResponse(data)) {\n    const response = data as Response;\n    await checkResponse(response);\n    return loader.binary ? await response.arrayBuffer() : await response.text();\n  }\n\n  if (isReadableStream(data)) {\n    // @ts-expect-error TS2559 options type\n    data = makeIterator(data as ReadableStream, options);\n  }\n\n  if (isIterable(data) || isAsyncIterable(data)) {\n    // Assume arrayBuffer iterator - attempt to concatenate\n    return concatenateArrayBuffersAsync(data as AsyncIterable<ArrayBuffer>);\n  }\n\n  throw new Error(ERR_DATA);\n}\n\nexport async function getAsyncIterableFromData(\n  data: BatchableDataType,\n  options: LoaderOptions\n): Promise<AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>> {\n  if (isIterator(data)) {\n    return data as AsyncIterable<ArrayBuffer>;\n  }\n\n  if (isResponse(data)) {\n    const response = data as Response;\n    // Note Since this function is not async, we currently can't load error message, just status\n    await checkResponse(response);\n    // TODO - bug in polyfill, body can be a Promise under Node.js\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const body = await response.body;\n    // TODO - body can be null?\n    return makeIterator(body as ReadableStream<Uint8Array>, options as any);\n  }\n\n  if (isBlob(data) || isReadableStream(data)) {\n    return makeIterator(data as Blob | ReadableStream, options as any);\n  }\n\n  if (isAsyncIterable(data)) {\n    return data[Symbol.asyncIterator]();\n  }\n\n  return getIterableFromData(data);\n}\n\nexport async function getReadableStream(data: BatchableDataType): Promise<ReadableStream> {\n  if (isReadableStream(data)) {\n    return data as ReadableStream;\n  }\n  if (isResponse(data)) {\n    // @ts-ignore\n    return data.body;\n  }\n  const response = await makeResponse(data);\n  // @ts-ignore\n  return response.body;\n}\n\n// HELPERS\n\nfunction getIterableFromData(data) {\n  // generate an iterator that emits a single chunk\n  if (ArrayBuffer.isView(data)) {\n    return (function* oneChunk() {\n      yield data.buffer;\n    })();\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return (function* oneChunk() {\n      yield data;\n    })();\n  }\n\n  if (isIterator(data)) {\n    return data;\n  }\n\n  if (isIterable(data)) {\n    return data[Symbol.iterator]();\n  }\n\n  throw new Error(ERR_DATA);\n}\n","import {Loader} from '@loaders.gl/loader-utils';\nimport {normalizeLoader} from '../loader-utils/normalize-loader';\nimport {getGlobalLoaderState} from '../loader-utils/option-utils';\n\n// Store global registered loaders on the global object to increase chances of cross loaders-version interoperability\n// This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\nconst getGlobalLoaderRegistry = () => {\n  const state = getGlobalLoaderState();\n  state.loaderRegistry = state.loaderRegistry || [];\n  return state.loaderRegistry;\n};\n\nexport function registerLoaders(loaders: Loader[]) {\n  const loaderRegistry = getGlobalLoaderRegistry();\n\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n\n  for (const loader of loaders) {\n    const normalizedLoader = normalizeLoader(loader);\n    if (!loaderRegistry.find((registeredLoader) => normalizedLoader === registeredLoader)) {\n      // add to the beginning of the loaderRegistry, so the last registeredLoader get picked\n      loaderRegistry.unshift(normalizedLoader);\n    }\n  }\n}\n\nexport function getRegisteredLoaders(): Loader[] {\n  return getGlobalLoaderRegistry();\n}\n\n// For testing\nexport function _unregisterLoaders() {\n  const state = getGlobalLoaderState();\n  state.loaderRegistry = [];\n}\n","import type {LoaderContext, LoaderOptions, Loader} from '@loaders.gl/loader-utils';\nimport {compareArrayBuffers} from '@loaders.gl/loader-utils';\nimport {normalizeLoader} from '../loader-utils/normalize-loader';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\nimport {getRegisteredLoaders} from './register-loaders';\nimport {isBlob} from '../../javascript-utils/is-type';\n\nconst EXT_PATTERN = /\\.([^.]+)$/;\n\n// TODO - Need a variant that peeks at streams for parseInBatches\n// TODO - Detect multiple matching loaders? Use heuristics to grade matches?\n// TODO - Allow apps to pass context to disambiguate between multiple matches (e.g. multiple .json formats)?\n\n/**\n * Find a loader that matches file extension and/or initial file content\n * Search the loaders array argument for a loader that matches url extension or initial data\n * Returns: a normalized loader\n * @param data data to assist\n * @param loaders\n * @param options\n * @param context used internally, applications should not provide this parameter\n */\nexport async function selectLoader(\n  data: Response | Blob | ArrayBuffer | string,\n  loaders: Loader[] | Loader = [],\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<Loader | null> {\n  if (!validHTTPResponse(data)) {\n    return null;\n  }\n\n  // First make a sync attempt, disabling exceptions\n  let loader = selectLoaderSync(data, loaders, {...options, nothrow: true}, context);\n  if (loader) {\n    return loader;\n  }\n\n  // For Blobs and Files, try to asynchronously read a small initial slice and test again with that\n  // to see if we can detect by initial content\n  if (isBlob(data)) {\n    data = await (data as Blob).slice(0, 10).arrayBuffer();\n    loader = selectLoaderSync(data, loaders, options, context);\n  }\n\n  // no loader available\n  if (!loader && !options?.nothrow) {\n    throw new Error(getNoValidLoaderMessage(data));\n  }\n\n  return loader;\n}\n\n/**\n * Find a loader that matches file extension and/or initial file content\n * Search the loaders array argument for a loader that matches url extension or initial data\n * Returns: a normalized loader\n * @param data data to assist\n * @param loaders\n * @param options\n * @param context used internally, applications should not provide this parameter\n */\nexport function selectLoaderSync(\n  data: Response | Blob | ArrayBuffer | string,\n  loaders: Loader[] | Loader = [],\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Loader | null {\n  if (!validHTTPResponse(data)) {\n    return null;\n  }\n\n  // eslint-disable-next-line complexity\n  // if only a single loader was provided (not as array), force its use\n  // TODO - Should this behavior be kept and documented?\n  if (loaders && !Array.isArray(loaders)) {\n    // TODO - remove support for legacy loaders\n    return normalizeLoader(loaders);\n  }\n\n  // Build list of candidate loaders that will be searched in order for a match\n  let candidateLoaders: Loader[] = [];\n  // First search supplied loaders\n  if (loaders) {\n    candidateLoaders = candidateLoaders.concat(loaders);\n  }\n  // Then fall back to registered loaders\n  if (!options?.ignoreRegisteredLoaders) {\n    candidateLoaders.push(...getRegisteredLoaders());\n  }\n\n  // TODO - remove support for legacy loaders\n  normalizeLoaders(candidateLoaders);\n\n  const loader = selectLoaderInternal(data, candidateLoaders, options, context);\n\n  // no loader available\n  if (!loader && !options?.nothrow) {\n    throw new Error(getNoValidLoaderMessage(data));\n  }\n\n  return loader;\n}\n\n/** Implements loaders selection logic */\nfunction selectLoaderInternal(\n  data: Response | Blob | ArrayBuffer | string,\n  loaders: Loader[],\n  options?: LoaderOptions,\n  context?: LoaderContext\n) {\n  const {url, type} = getResourceUrlAndType(data);\n\n  const testUrl = url || context?.url;\n\n  let loader: Loader | null = null;\n\n  // if options.mimeType is supplied, it takes precedence\n  if (options?.mimeType) {\n    loader = findLoaderByMIMEType(loaders, options?.mimeType);\n  }\n  // Look up loader by url\n  loader = loader || findLoaderByUrl(loaders, testUrl);\n  // Look up loader by mime type\n  loader = loader || findLoaderByMIMEType(loaders, type);\n  // Look for loader via initial bytes (Note: not always accessible (e.g. Response, stream, async iterator)\n  loader = loader || findLoaderByInitialBytes(loaders, data);\n  // Look up loader by fallback mime type\n  loader = loader || findLoaderByMIMEType(loaders, options?.fallbackMimeType);\n\n  return loader;\n}\n\n/** Check HTTP Response */\nfunction validHTTPResponse(data: any): boolean {\n  // HANDLE HTTP status\n  if (data instanceof Response) {\n    // 204 - NO CONTENT. This handles cases where e.g. a tile server responds with 204 for a missing tile\n    if (data.status === 204) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getNoValidLoaderMessage(data): string {\n  const {url, type} = getResourceUrlAndType(data);\n\n  let message = 'No valid loader found';\n  if (data) {\n    message += ` data: \"${getFirstCharacters(data)}\", contentType: \"${type}\"`;\n  }\n  if (url) {\n    message += ` url: ${url}`;\n  }\n  return message;\n}\n\nfunction normalizeLoaders(loaders: Loader[]): void {\n  for (const loader of loaders) {\n    normalizeLoader(loader);\n  }\n}\n\n// TODO - Would be nice to support http://example.com/file.glb?parameter=1\n// E.g: x = new URL('http://example.com/file.glb?load=1'; x.pathname\nfunction findLoaderByUrl(loaders: Loader[], url?: string): Loader | null {\n  // Get extension\n  const match = url && EXT_PATTERN.exec(url);\n  const extension = match && match[1];\n  return extension ? findLoaderByExtension(loaders, extension) : null;\n}\n\nfunction findLoaderByExtension(loaders: Loader[], extension: string): Loader | null {\n  extension = extension.toLowerCase();\n\n  for (const loader of loaders) {\n    for (const loaderExtension of loader.extensions) {\n      if (loaderExtension.toLowerCase() === extension) {\n        return loader;\n      }\n    }\n  }\n  return null;\n}\n\nfunction findLoaderByMIMEType(loaders, mimeType) {\n  for (const loader of loaders) {\n    if (loader.mimeTypes && loader.mimeTypes.includes(mimeType)) {\n      return loader;\n    }\n\n    // Support referring to loaders using the \"unregistered tree\"\n    // https://en.wikipedia.org/wiki/Media_type#Unregistered_tree\n    if (mimeType === `application/x.${loader.id}`) {\n      return loader;\n    }\n  }\n  return null;\n}\n\nfunction findLoaderByInitialBytes(loaders, data) {\n  if (!data) {\n    return null;\n  }\n\n  for (const loader of loaders) {\n    if (typeof data === 'string') {\n      if (testDataAgainstText(data, loader)) {\n        return loader;\n      }\n    } else if (ArrayBuffer.isView(data)) {\n      // Typed Arrays can have offsets into underlying buffer\n      if (testDataAgainstBinary(data.buffer, data.byteOffset, loader)) {\n        return loader;\n      }\n    } else if (data instanceof ArrayBuffer) {\n      const byteOffset = 0;\n      if (testDataAgainstBinary(data, byteOffset, loader)) {\n        return loader;\n      }\n    }\n    // TODO Handle streaming case (requires creating a new AsyncIterator)\n  }\n  return null;\n}\n\nfunction testDataAgainstText(data, loader) {\n  if (loader.testText) {\n    return loader.testText(data);\n  }\n\n  const tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n  return tests.some((test) => data.startsWith(test));\n}\n\nfunction testDataAgainstBinary(data, byteOffset, loader) {\n  const tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n  return tests.some((test) => testBinary(data, byteOffset, loader, test));\n}\n\nfunction testBinary(data, byteOffset, loader, test) {\n  if (test instanceof ArrayBuffer) {\n    return compareArrayBuffers(test, data, test.byteLength);\n  }\n  switch (typeof test) {\n    case 'function':\n      return test(data, loader);\n\n    case 'string':\n      // Magic bytes check: If `test` is a string, check if binary data starts with that strings\n      const magic = getMagicString(data, byteOffset, test.length);\n      return test === magic;\n\n    default:\n      return false;\n  }\n}\n\nfunction getFirstCharacters(data, length = 5) {\n  if (typeof data === 'string') {\n    return data.slice(0, length);\n  } else if (ArrayBuffer.isView(data)) {\n    // Typed Arrays can have offsets into underlying buffer\n    return getMagicString(data.buffer, data.byteOffset, length);\n  } else if (data instanceof ArrayBuffer) {\n    const byteOffset = 0;\n    return getMagicString(data, byteOffset, length);\n  }\n  return '';\n}\n\nfunction getMagicString(arrayBuffer, byteOffset, length) {\n  if (arrayBuffer.byteLength < byteOffset + length) {\n    return '';\n  }\n  const dataView = new DataView(arrayBuffer);\n  let magic = '';\n  for (let i = 0; i < length; i++) {\n    magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n  }\n  return magic;\n}\n","import type {DataType, Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {assert, validateWorkerVersion} from '@loaders.gl/worker-utils';\nimport {parseWithWorker, canParseWithWorker} from '@loaders.gl/loader-utils';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {normalizeOptions} from '../loader-utils/option-utils';\nimport {getArrayBufferOrStringFromData} from '../loader-utils/get-data';\nimport {getLoaderContext, getLoadersFromContext} from '../loader-utils/loader-context';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\nimport {selectLoader} from './select-loader';\n\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\nexport async function parse(\n  data: DataType | Promise<DataType>,\n  loaders?: Loader | Loader[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<any> {\n  assert(!context || typeof context === 'object'); // parse no longer accepts final url\n\n  // Signature: parse(data, options, context | url)\n  // Uses registered loaders\n  if (loaders && !Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders as LoaderOptions;\n    loaders = undefined;\n  }\n\n  data = await data; // Resolve any promise\n  options = options || {};\n\n  // Extract a url for auto detection\n  const {url} = getResourceUrlAndType(data);\n\n  // Chooses a loader (and normalizes it)\n  // Also use any loaders in the context, new loaders take priority\n  const typedLoaders = loaders as Loader | Loader[] | undefined;\n  const candidateLoaders = getLoadersFromContext(typedLoaders, context);\n  // todo hacky type cast\n  const loader = await selectLoader(data as ArrayBuffer, candidateLoaders, options);\n  // Note: if no loader was found, if so just return null\n  if (!loader) {\n    return null;\n  }\n\n  // Normalize options\n  options = normalizeOptions(options, loader, candidateLoaders, url);\n\n  // Get a context (if already present, will be unchanged)\n  context = getLoaderContext({url, parse, loaders: candidateLoaders}, options, context);\n\n  return await parseWithLoader(loader, data, options, context);\n}\n\n// TODO: support progress and abort\n// TODO - should accept loader.parseAsyncIterator and concatenate.\nasync function parseWithLoader(loader, data, options, context) {\n  validateWorkerVersion(loader);\n\n  data = await getArrayBufferOrStringFromData(data, loader, options);\n\n  // First check for synchronous text parser, wrap results in promises\n  if (loader.parseTextSync && typeof data === 'string') {\n    options.dataType = 'text';\n    return loader.parseTextSync(data, options, context, loader);\n  }\n\n  // If we have a workerUrl and the loader can parse the given options efficiently in a worker\n  if (canParseWithWorker(loader, options)) {\n    return await parseWithWorker(loader, data, options, context, parse);\n  }\n\n  // Check for asynchronous parser\n  if (loader.parseText && typeof data === 'string') {\n    return await loader.parseText(data, options, context, loader);\n  }\n\n  if (loader.parse) {\n    return await loader.parse(data, options, context, loader);\n  }\n\n  // This should not happen, all sync loaders should also offer `parse` function\n  assert(!loader.parseSync);\n\n  // TBD - If asynchronous parser not available, return null\n  throw new Error(`${loader.id} loader - no parser found and worker is disabled`);\n}\n","import type {Loader, LoaderOptions, LoaderContext} from '@loaders.gl/loader-utils';\nimport {getFetchFunction} from './option-utils';\n\n/**\n * \"sub\" loaders invoked by other loaders get a \"context\" injected on `this`\n * The context will inject core methods like `parse` and contain information\n * about loaders and options passed in to the top-level `parse` call.\n *\n * @param context\n * @param options\n * @param previousContext\n */\nexport function getLoaderContext(\n  context: Omit<LoaderContext, 'fetch'> & Partial<Pick<LoaderContext, 'fetch'>>,\n  options?: LoaderOptions,\n  previousContext: LoaderContext | null = null\n): LoaderContext {\n  // For recursive calls, we already have a context\n  // TODO - add any additional loaders to context?\n  if (previousContext) {\n    return previousContext;\n  }\n\n  const resolvedContext: LoaderContext = {\n    fetch: getFetchFunction(options, context),\n    ...context\n  };\n\n  // Recursive loading does not use single loader\n  if (!Array.isArray(resolvedContext.loaders)) {\n    resolvedContext.loaders = null;\n  }\n\n  return resolvedContext;\n}\n\n// eslint-disable-next-line complexity\nexport function getLoadersFromContext(\n  loaders: Loader[] | Loader | undefined,\n  context?: LoaderContext\n) {\n  // A single non-array loader is force selected, but only on top-level (context === null)\n  if (!context && loaders && !Array.isArray(loaders)) {\n    return loaders;\n  }\n\n  // Create a merged list\n  let candidateLoaders;\n  if (loaders) {\n    candidateLoaders = Array.isArray(loaders) ? loaders : [loaders];\n  }\n  if (context && context.loaders) {\n    const contextLoaders = Array.isArray(context.loaders) ? context.loaders : [context.loaders];\n    candidateLoaders = candidateLoaders ? [...candidateLoaders, ...contextLoaders] : contextLoaders;\n  }\n  // If no loaders, return null to look in globally registered loaders\n  return candidateLoaders && candidateLoaders.length ? candidateLoaders : null;\n}\n","import type {WorkerObject} from '../../types';\nimport {assert} from '../env-utils/assert';\nimport {VERSION} from '../env-utils/version';\n\n/**\n * Check if worker is compatible with this library version\n * @param worker\n * @param libVersion\n * @returns `true` if the two versions are compatible\n */\nexport function validateWorkerVersion(\n  worker: WorkerObject,\n  coreVersion: string = VERSION\n): boolean {\n  assert(worker, 'no worker provided');\n\n  const workerVersion = worker.version;\n  if (!coreVersion || !workerVersion) {\n    return false;\n  }\n\n  // TODO enable when fix the __version__ injection\n  // const coreVersions = parseVersion(coreVersion);\n  // const workerVersions = parseVersion(workerVersion);\n  // assert(\n  //   coreVersion.major === workerVersion.major && coreVersion.minor <= workerVersion.minor,\n  //   `worker: ${worker.name} is not compatible. ${coreVersion.major}.${\n  //     coreVersion.minor\n  //   }+ is required.`\n  // );\n\n  return true;\n}\n\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction parseVersion(version) {\n  const parts = version.split('.').map(Number);\n  return {major: parts[0], minor: parts[1]};\n}\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n\n// Change to `latest` on production branches\nconst DEFAULT_VERSION = 'beta';\ndeclare let __VERSION__;\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : DEFAULT_VERSION;\nif (typeof __VERSION__ === 'undefined') {\n  // eslint-disable-next-line\n  console.error(\n    'loaders.gl: The __VERSION__ variable is not injected using babel plugin. Latest unstable workers would be fetched from the CDN.'\n  );\n}\n","import type {DataType, Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {isBlob} from '../../javascript-utils/is-type';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {getFetchFunction} from '../loader-utils/option-utils';\n\nimport {parse} from './parse';\n\n/**\n * Parses `data` using a specified loader\n * Note: Load does duplicate a lot of parse.\n * it can also call fetchFile on string urls, which `parse` won't do.\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\n// implementation signature\nexport async function load(\n  url: string | DataType,\n  loaders?: Loader | Loader[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<any> {\n  // Signature: load(url, options)\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders as LoaderOptions;\n    loaders = undefined;\n  }\n\n  // Select fetch function\n  const fetch = getFetchFunction(options);\n\n  // at this point, `url` could be already loaded binary data\n  let data = url;\n  // url is a string, fetch the url\n  if (typeof url === 'string') {\n    data = await fetch(url);\n    // URL is Blob or File, fetchFile handles it (alt: we could generate ObjectURL here)\n  }\n\n  if (isBlob(url)) {\n    // The fetch response object will contain blob.name\n    data = await fetch(url);\n  }\n\n  // Data is loaded (at least we have a `Response` object) so time to hand over to `parse`\n  return await parse(data, loaders, options);\n}\n","export default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(\"math.gl assertion \".concat(message));\n  }\n}\n//# sourceMappingURL=assert.js.map","import assert from './assert';\nconst RADIANS_TO_DEGREES = 1 / Math.PI * 180;\nconst DEGREES_TO_RADIANS = 1 / 180 * Math.PI;\nconst config = {};\nconfig.EPSILON = 1e-12;\nconfig.debug = false;\nconfig.precision = 4;\nconfig.printTypes = false;\nconfig.printDegrees = false;\nconfig.printRowMajor = true;\nexport { config };\nexport function configure(options = {}) {\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n\n  return config;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nexport function formatValue(value, {\n  precision = config.precision || 4\n} = {}) {\n  value = round(value);\n  return \"\".concat(parseFloat(value.toPrecision(precision)));\n}\nexport function isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value) && !(value instanceof DataView);\n}\n\nfunction duplicateArray(array) {\n  return array.clone ? array.clone() : new Array(array.length);\n}\n\nexport function clone(array) {\n  return array.clone ? array.clone() : new Array(...array);\n}\n\nfunction map(value, func, result) {\n  if (isArray(value)) {\n    result = result || duplicateArray(value);\n\n    for (let i = 0; i < result.length && i < value.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n\n    return result;\n  }\n\n  return func(value);\n}\n\nexport function toRadians(degrees) {\n  return radians(degrees);\n}\nexport function toDegrees(radians) {\n  return degrees(radians);\n}\nexport function radians(degrees, result) {\n  return map(degrees, degrees => degrees * DEGREES_TO_RADIANS, result);\n}\nexport function degrees(radians, result) {\n  return map(radians, radians => radians * RADIANS_TO_DEGREES, result);\n}\nexport function sin(radians) {\n  return map(radians, angle => Math.sin(angle));\n}\nexport function cos(radians) {\n  return map(radians, angle => Math.cos(angle));\n}\nexport function tan(radians) {\n  return map(radians, angle => Math.tan(angle));\n}\nexport function asin(radians) {\n  return map(radians, angle => Math.asin(angle));\n}\nexport function acos(radians) {\n  return map(radians, angle => Math.acos(angle));\n}\nexport function atan(radians) {\n  return map(radians, angle => Math.atan(angle));\n}\nexport function clamp(value, min, max) {\n  return map(value, value => Math.max(min, Math.min(max, value)));\n}\nexport function lerp(a, b, t) {\n  if (isArray(a)) {\n    return a.map((ai, i) => lerp(ai, b[i], t));\n  }\n\n  return t * b + (1 - t) * a;\n}\nexport function equals(a, b, epsilon) {\n  const oldEpsilon = config.EPSILON;\n\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n\n  try {\n    if (a === b) {\n      return true;\n    }\n\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < a.length; ++i) {\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n\n    if (Number.isFinite(a) && Number.isFinite(b)) {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n    }\n\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\nexport function exactEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\nexport function withEpsilon(EPSILON, func) {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = EPSILON;\n  let value;\n\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n\n  return value;\n}\n//# sourceMappingURL=common.js.map","function _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    var instance = Reflect.construct(cls, Array.from(arguments));\n    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n    return instance;\n  }\n\n  ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n\nimport { config, formatValue, equals, isArray } from '../../lib/common';\nimport assert from '../../lib/assert';\nexport default class MathArray extends _extendableBuiltin(Array) {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  from(arrayOrObject) {\n    return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n\n    return this.check();\n  }\n\n  to(arrayOrObject) {\n    if (arrayOrObject === this) {\n      return this;\n    }\n\n    return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n  }\n\n  toTarget(target) {\n    return target ? this.to(target) : this;\n  }\n\n  toArray(array = [], offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      array[offset + i] = this[i];\n    }\n\n    return array;\n  }\n\n  toFloat32Array() {\n    return new Float32Array(this);\n  }\n\n  toString() {\n    return this.formatString(config);\n  }\n\n  formatString(opts) {\n    let string = '';\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n\n    return \"\".concat(opts.printTypes ? this.constructor.name : '', \"[\").concat(string, \"]\");\n  }\n\n  equals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  exactEquals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  negate() {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n\n    return this.check();\n  }\n\n  lerp(a, b, t) {\n    if (t === undefined) {\n      t = b;\n      b = a;\n      a = this;\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      this[i] = ai + t * (b[i] - ai);\n    }\n\n    return this.check();\n  }\n\n  min(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n\n    return this.check();\n  }\n\n  max(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n\n    return this.check();\n  }\n\n  clamp(minVector, maxVector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n\n    return this.check();\n  }\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  scale(scale) {\n    if (Array.isArray(scale)) {\n      return this.multiply(scale);\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scale;\n    }\n\n    return this.check();\n  }\n\n  sub(a) {\n    return this.subtract(a);\n  }\n\n  setScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n\n    return this.check();\n  }\n\n  addScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n\n    return this.check();\n  }\n\n  subScalar(a) {\n    return this.addScalar(-a);\n  }\n\n  multiplyScalar(scalar) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n\n    return this.check();\n  }\n\n  divideScalar(a) {\n    return this.scale(1 / a);\n  }\n\n  clampScalar(min, max) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n\n    return this.check();\n  }\n\n  multiplyByScalar(scalar) {\n    return this.scale(scalar);\n  }\n\n  get elements() {\n    return this;\n  }\n\n  check() {\n    if (config.debug && !this.validate()) {\n      throw new Error(\"math.gl: \".concat(this.constructor.name, \" some fields set to invalid numbers'\"));\n    }\n\n    return this;\n  }\n\n  validate() {\n    let valid = this.length === this.ELEMENTS;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(this[i]);\n    }\n\n    return valid;\n  }\n\n}\n//# sourceMappingURL=math-array.js.map","import { config } from './common';\nexport function validateVector(v, length) {\n  if (v.length !== length) {\n    return false;\n  }\n\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function checkNumber(value) {\n  if (!Number.isFinite(value)) {\n    throw new Error(\"Invalid number \".concat(value));\n  }\n\n  return value;\n}\nexport function checkVector(v, length, callerName = '') {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(\"math.gl: \".concat(callerName, \" some fields set to invalid numbers'\"));\n  }\n\n  return v;\n}\nconst map = {};\nexport function deprecated(method, version) {\n  if (!map[method]) {\n    map[method] = true;\n    console.warn(\"\".concat(method, \" has been removed in version \").concat(version, \", see upgrade guide for more information\"));\n  }\n}\n//# sourceMappingURL=validators.js.map","import MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\nexport default class Vector extends MathArray {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  copy(vector) {\n    assert(false);\n    return this;\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  set x(value) {\n    this[0] = checkNumber(value);\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  set y(value) {\n    this[1] = checkNumber(value);\n  }\n\n  len() {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  magnitude() {\n    return this.len();\n  }\n\n  lengthSquared() {\n    let length = 0;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      length += this[i] * this[i];\n    }\n\n    return length;\n  }\n\n  magnitudeSquared() {\n    return this.lengthSquared();\n  }\n\n  distance(mathArray) {\n    return Math.sqrt(this.distanceSquared(mathArray));\n  }\n\n  distanceSquared(mathArray) {\n    let length = 0;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const dist = this[i] - mathArray[i];\n      length += dist * dist;\n    }\n\n    return checkNumber(length);\n  }\n\n  dot(mathArray) {\n    let product = 0;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      product += this[i] * mathArray[i];\n    }\n\n    return checkNumber(product);\n  }\n\n  normalize() {\n    const length = this.magnitude();\n\n    if (length !== 0) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= length;\n      }\n    }\n\n    return this.check();\n  }\n\n  multiply(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  divide(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  lengthSq() {\n    return this.lengthSquared();\n  }\n\n  distanceTo(vector) {\n    return this.distance(vector);\n  }\n\n  distanceToSquared(vector) {\n    return this.distanceSquared(vector);\n  }\n\n  getComponent(i) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    return checkNumber(this[i]);\n  }\n\n  setComponent(i, value) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    this[i] = value;\n    return this.check();\n  }\n\n  addVectors(a, b) {\n    return this.copy(a).add(b);\n  }\n\n  subVectors(a, b) {\n    return this.copy(a).subtract(b);\n  }\n\n  multiplyVectors(a, b) {\n    return this.copy(a).multiply(b);\n  }\n\n  addScaledVector(a, b) {\n    return this.add(new this.constructor(a).multiplyScalar(b));\n  }\n\n}\n//# sourceMappingURL=vector.js.map","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","export function vec2_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const w = m[3] * x + m[7] * y || 1.0;\n  out[0] = (m[0] * x + m[4] * y) / w;\n  out[1] = (m[1] * x + m[5] * y) / w;\n  return out;\n}\nexport function vec3_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n  return out;\n}\nexport function vec3_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  return out;\n}\nexport function vec4_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\nexport function vec4_transformMat3(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[3] * y + m[6] * z;\n  out[1] = m[1] * x + m[4] * y + m[7] * z;\n  out[2] = m[2] * x + m[5] * y + m[8] * z;\n  out[3] = a[3];\n  return out;\n}\n//# sourceMappingURL=gl-matrix-extras.js.map","import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nconst ORIGIN = [0, 0, 0];\nconst constants = {};\nexport default class Vector3 extends Vector {\n  static get ZERO() {\n    return constants.ZERO = constants.ZERO || Object.freeze(new Vector3(0, 0, 0, 0));\n  }\n\n  constructor(x = 0, y = 0, z = 0) {\n    super(-0, -0, -0);\n\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object;\n  }\n\n  get ELEMENTS() {\n    return 3;\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({\n    radians,\n    origin = ORIGIN\n  }) {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({\n    radians,\n    origin = ORIGIN\n  }) {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({\n    radians,\n    origin = ORIGIN\n  }) {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  transformAsPoint(matrix4) {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformAsVector(matrix4) {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n}\n//# sourceMappingURL=vector3.js.map","import MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport { config } from '../../lib/common';\nimport assert from '../../lib/assert';\nexport default class Matrix extends MathArray {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  get RANK() {\n    assert(false);\n    return 0;\n  }\n\n  toString() {\n    let string = '[';\n\n    if (config.printRowMajor) {\n      string += 'row-major:';\n\n      for (let row = 0; row < this.RANK; ++row) {\n        for (let col = 0; col < this.RANK; ++col) {\n          string += \" \".concat(this[col * this.RANK + row]);\n        }\n      }\n    } else {\n      string += 'column-major:';\n\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        string += \" \".concat(this[i]);\n      }\n    }\n\n    string += ']';\n    return string;\n  }\n\n  getElementIndex(row, col) {\n    return col * this.RANK + row;\n  }\n\n  getElement(row, col) {\n    return this[col * this.RANK + row];\n  }\n\n  setElement(row, col, value) {\n    this[col * this.RANK + row] = checkNumber(value);\n    return this;\n  }\n\n  getColumn(columnIndex, result = new Array(this.RANK).fill(-0)) {\n    const firstIndex = columnIndex * this.RANK;\n\n    for (let i = 0; i < this.RANK; ++i) {\n      result[i] = this[firstIndex + i];\n    }\n\n    return result;\n  }\n\n  setColumn(columnIndex, columnVector) {\n    const firstIndex = columnIndex * this.RANK;\n\n    for (let i = 0; i < this.RANK; ++i) {\n      this[firstIndex + i] = columnVector[i];\n    }\n\n    return this;\n  }\n\n}\n//# sourceMappingURL=matrix.js.map","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import { checkVector, deprecated } from '../lib/validators';\nimport Matrix from './base/matrix';\nimport { vec2_transformMat4AsVector, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL0ROW3: 3,\n  COL1ROW0: 4,\n  COL1ROW1: 5,\n  COL1ROW2: 6,\n  COL1ROW3: 7,\n  COL2ROW0: 8,\n  COL2ROW1: 9,\n  COL2ROW2: 10,\n  COL2ROW3: 11,\n  COL3ROW0: 12,\n  COL3ROW1: 13,\n  COL3ROW2: 14,\n  COL3ROW3: 15\n});\nconst constants = {};\nexport default class Matrix4 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix4(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix4(ZERO));\n    return constants.ZERO;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  get ELEMENTS() {\n    return 16;\n  }\n\n  get RANK() {\n    return 4;\n  }\n\n  constructor(array) {\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  setRowMajor(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result) {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  fromQuaternion(q) {\n    mat4.fromQuat(this, q);\n    return this.check();\n  }\n\n  frustum({\n    left,\n    right,\n    bottom,\n    top,\n    near,\n    far\n  }) {\n    if (far === Infinity) {\n      Matrix4._computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4.frustum(this, left, right, bottom, top, near, far);\n    }\n\n    return this.check();\n  }\n\n  static _computeInfinitePerspectiveOffCenter(result, left, right, bottom, top, near) {\n    const column0Row0 = 2.0 * near / (right - left);\n    const column1Row1 = 2.0 * near / (top - bottom);\n    const column2Row0 = (right + left) / (right - left);\n    const column2Row1 = (top + bottom) / (top - bottom);\n    const column2Row2 = -1.0;\n    const column2Row3 = -1.0;\n    const column3Row2 = -2.0 * near;\n    result[0] = column0Row0;\n    result[1] = 0.0;\n    result[2] = 0.0;\n    result[3] = 0.0;\n    result[4] = 0.0;\n    result[5] = column1Row1;\n    result[6] = 0.0;\n    result[7] = 0.0;\n    result[8] = column2Row0;\n    result[9] = column2Row1;\n    result[10] = column2Row2;\n    result[11] = column2Row3;\n    result[12] = 0.0;\n    result[13] = 0.0;\n    result[14] = column3Row2;\n    result[15] = 0.0;\n    return result;\n  }\n\n  lookAt(eye, center, up) {\n    if (arguments.length === 1) {\n      ({\n        eye,\n        center,\n        up\n      } = eye);\n    }\n\n    center = center || [0, 0, 0];\n    up = up || [0, 1, 0];\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  ortho({\n    left,\n    right,\n    bottom,\n    top,\n    near = 0.1,\n    far = 500\n  }) {\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  orthographic({\n    fovy = 45 * Math.PI / 180,\n    aspect = 1,\n    focalDistance = 1,\n    near = 0.1,\n    far = 500\n  }) {\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY);\n    const right = top * aspect;\n    return new Matrix4().ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  perspective({\n    fovy = undefined,\n    fov = 45 * Math.PI / 180,\n    aspect = 1,\n    near = 0.1,\n    far = 500\n  } = {}) {\n    fovy = fovy || fov;\n\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  determinant() {\n    return mat4.determinant(this);\n  }\n\n  getScale(result = [-0, -0, -0]) {\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    return result;\n  }\n\n  getTranslation(result = [-0, -0, -0]) {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  getRotation(result = [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0], scaleResult = null) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  getRotationMatrix3(result = [-0, -0, -0, -0, -0, -0, -0, -0, -0], scaleResult = null) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = this[4] * inverseScale0;\n    result[4] = this[5] * inverseScale1;\n    result[5] = this[6] * inverseScale2;\n    result[6] = this[8] * inverseScale0;\n    result[7] = this[9] * inverseScale1;\n    result[8] = this[10] * inverseScale2;\n    return result;\n  }\n\n  transpose() {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  multiplyLeft(a) {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotateX(radians) {\n    mat4.rotateX(this, this, radians);\n    return this.check();\n  }\n\n  rotateY(radians) {\n    mat4.rotateY(this, this, radians);\n    return this.check();\n  }\n\n  rotateZ(radians) {\n    mat4.rotateZ(this, this, radians);\n    return this.check();\n  }\n\n  rotateXYZ([rx, ry, rz]) {\n    return this.rotateX(rx).rotateY(ry).rotateZ(rz);\n  }\n\n  rotateAxis(radians, axis) {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat4.scale(this, this, factor);\n    } else {\n      mat4.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat4.translate(this, this, vec);\n    return this.check();\n  }\n\n  transform(vector, result) {\n    if (vector.length === 4) {\n      result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n      checkVector(result, 4);\n      return result;\n    }\n\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformAsPoint(vector, result) {\n    const {\n      length\n    } = vector;\n\n    switch (length) {\n      case 2:\n        result = vec2.transformMat4(result || [-0, -0], vector, this);\n        break;\n\n      case 3:\n        result = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n        break;\n\n      default:\n        throw new Error('Illegal vector');\n    }\n\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  transformAsVector(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n\n      case 3:\n        result = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n\n      default:\n        throw new Error('Illegal vector');\n    }\n\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  makeRotationX(radians) {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x, y, z) {\n    return this.identity().translate([x, y, z]);\n  }\n\n  transformPoint(vector, result) {\n    deprecated('Matrix4.transformPoint', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformVector(vector, result) {\n    deprecated('Matrix4.transformVector', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformDirection(vector, result) {\n    deprecated('Matrix4.transformDirection', '3.0');\n    return this.transformAsVector(vector, result);\n  }\n\n}\n//# sourceMappingURL=matrix4.js.map","export default {\n  EPSILON1: 1e-1,\n  EPSILON2: 1e-2,\n  EPSILON3: 1e-3,\n  EPSILON4: 1e-4,\n  EPSILON5: 1e-5,\n  EPSILON6: 1e-6,\n  EPSILON7: 1e-7,\n  EPSILON8: 1e-8,\n  EPSILON9: 1e-9,\n  EPSILON10: 1e-10,\n  EPSILON11: 1e-11,\n  EPSILON12: 1e-12,\n  EPSILON13: 1e-13,\n  EPSILON14: 1e-14,\n  EPSILON15: 1e-15,\n  EPSILON16: 1e-16,\n  EPSILON17: 1e-17,\n  EPSILON18: 1e-18,\n  EPSILON19: 1e-19,\n  EPSILON20: 1e-20,\n  PI_OVER_TWO: Math.PI / 2,\n  PI_OVER_FOUR: Math.PI / 4,\n  PI_OVER_SIX: Math.PI / 6,\n  TWO_PI: Math.PI * 2\n};\n//# sourceMappingURL=math-utils.js.map","export const WGS84_RADIUS_X = 6378137.0;\nexport const WGS84_RADIUS_Y = 6378137.0;\nexport const WGS84_RADIUS_Z = 6356752.3142451793;\nexport const WGS84_CONSTANTS = {\n  radii: [WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z],\n  radiiSquared: [WGS84_RADIUS_X * WGS84_RADIUS_X, WGS84_RADIUS_Y * WGS84_RADIUS_Y, WGS84_RADIUS_Z * WGS84_RADIUS_Z],\n  oneOverRadii: [1.0 / WGS84_RADIUS_X, 1.0 / WGS84_RADIUS_Y, 1.0 / WGS84_RADIUS_Z],\n  oneOverRadiiSquared: [1.0 / (WGS84_RADIUS_X * WGS84_RADIUS_X), 1.0 / (WGS84_RADIUS_Y * WGS84_RADIUS_Y), 1.0 / (WGS84_RADIUS_Z * WGS84_RADIUS_Z)],\n  maximumRadius: Math.max(WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z),\n  centerToleranceSquared: 1e-1\n};\n//# sourceMappingURL=constants.js.map","import { Vector3, isArray, toRadians, toDegrees, config } from '@math.gl/core';\nimport { WGS84_CONSTANTS } from './constants';\n\nconst noop = x => x;\n\nconst scratchVector = new Vector3();\nexport function fromCartographic(cartographic, result, map = noop) {\n  if (isArray(cartographic)) {\n    result[0] = map(cartographic[0]);\n    result[1] = map(cartographic[1]);\n    result[2] = cartographic[2];\n  } else if ('longitude' in cartographic) {\n    result[0] = map(cartographic.longitude);\n    result[1] = map(cartographic.latitude);\n    result[2] = cartographic.height;\n  } else {\n    result[0] = map(cartographic.x);\n    result[1] = map(cartographic.y);\n    result[2] = cartographic.z;\n  }\n\n  return result;\n}\nexport function fromCartographicToRadians(cartographic, vector = scratchVector) {\n  return fromCartographic(cartographic, vector, config._cartographicRadians ? noop : toRadians);\n}\nexport function fromCartographicToDegrees(cartographic, vector = scratchVector) {\n  return fromCartographic(cartographic, vector, config._cartographicRadians ? toDegrees : noop);\n}\nexport function toCartographic(vector, cartographic, map = noop) {\n  if (isArray(cartographic)) {\n    cartographic[0] = map(vector[0]);\n    cartographic[1] = map(vector[1]);\n    cartographic[2] = vector[2];\n  } else if ('longitude' in cartographic) {\n    cartographic.longitude = map(vector[0]);\n    cartographic.latitude = map(vector[1]);\n    cartographic.height = vector[2];\n  } else {\n    cartographic.x = map(vector[0]);\n    cartographic.y = map(vector[1]);\n    cartographic.z = vector[2];\n  }\n\n  return cartographic;\n}\nexport function toCartographicFromRadians(vector, cartographic) {\n  return toCartographic(vector, cartographic, config._cartographicRadians ? noop : toDegrees);\n}\nexport function toCartographicFromDegrees(vector, cartographic) {\n  return toCartographic(vector, cartographic, config._cartographicRadians ? toRadians : noop);\n}\nexport function isWGS84(vector) {\n  if (!vector) {\n    return false;\n  }\n\n  scratchVector.from(vector);\n  const {\n    oneOverRadiiSquared,\n    centerToleranceSquared\n  } = WGS84_CONSTANTS;\n  const x2 = vector[0] * vector[0] * oneOverRadiiSquared[0];\n  const y2 = vector[1] * vector[1] * oneOverRadiiSquared[1];\n  const z2 = vector[2] * vector[2] * oneOverRadiiSquared[2];\n  return Math.abs(x2 + y2 + z2 - 1) < centerToleranceSquared;\n}\n//# sourceMappingURL=type-utils.js.map","import { Vector3, assert, _MathUtils } from '@math.gl/core';\nimport * as vec3 from 'gl-matrix/vec3';\nconst scratchVector = new Vector3();\nconst scaleToGeodeticSurfaceIntersection = new Vector3();\nconst scaleToGeodeticSurfaceGradient = new Vector3();\nexport default function scaleToGeodeticSurface(cartesian, ellipsoid, result = new Vector3()) {\n  const {\n    oneOverRadii,\n    oneOverRadiiSquared,\n    centerToleranceSquared\n  } = ellipsoid;\n  scratchVector.from(cartesian);\n  const positionX = cartesian.x;\n  const positionY = cartesian.y;\n  const positionZ = cartesian.z;\n  const oneOverRadiiX = oneOverRadii.x;\n  const oneOverRadiiY = oneOverRadii.y;\n  const oneOverRadiiZ = oneOverRadii.z;\n  const x2 = positionX * positionX * oneOverRadiiX * oneOverRadiiX;\n  const y2 = positionY * positionY * oneOverRadiiY * oneOverRadiiY;\n  const z2 = positionZ * positionZ * oneOverRadiiZ * oneOverRadiiZ;\n  const squaredNorm = x2 + y2 + z2;\n  const ratio = Math.sqrt(1.0 / squaredNorm);\n\n  if (!Number.isFinite(ratio)) {\n    return undefined;\n  }\n\n  const intersection = scaleToGeodeticSurfaceIntersection;\n  intersection.copy(cartesian).scale(ratio);\n\n  if (squaredNorm < centerToleranceSquared) {\n    return intersection.to(result);\n  }\n\n  const oneOverRadiiSquaredX = oneOverRadiiSquared.x;\n  const oneOverRadiiSquaredY = oneOverRadiiSquared.y;\n  const oneOverRadiiSquaredZ = oneOverRadiiSquared.z;\n  const gradient = scaleToGeodeticSurfaceGradient;\n  gradient.set(intersection.x * oneOverRadiiSquaredX * 2.0, intersection.y * oneOverRadiiSquaredY * 2.0, intersection.z * oneOverRadiiSquaredZ * 2.0);\n  let lambda = (1.0 - ratio) * cartesian.len() / (0.5 * gradient.len());\n  let correction = 0.0;\n  let xMultiplier;\n  let yMultiplier;\n  let zMultiplier;\n  let func;\n\n  do {\n    lambda -= correction;\n    xMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredX);\n    yMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredY);\n    zMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredZ);\n    const xMultiplier2 = xMultiplier * xMultiplier;\n    const yMultiplier2 = yMultiplier * yMultiplier;\n    const zMultiplier2 = zMultiplier * zMultiplier;\n    const xMultiplier3 = xMultiplier2 * xMultiplier;\n    const yMultiplier3 = yMultiplier2 * yMultiplier;\n    const zMultiplier3 = zMultiplier2 * zMultiplier;\n    func = x2 * xMultiplier2 + y2 * yMultiplier2 + z2 * zMultiplier2 - 1.0;\n    const denominator = x2 * xMultiplier3 * oneOverRadiiSquaredX + y2 * yMultiplier3 * oneOverRadiiSquaredY + z2 * zMultiplier3 * oneOverRadiiSquaredZ;\n    const derivative = -2.0 * denominator;\n    correction = func / derivative;\n  } while (Math.abs(func) > _MathUtils.EPSILON12);\n\n  return scratchVector.scale([xMultiplier, yMultiplier, zMultiplier]).to(result);\n}\n//# sourceMappingURL=scale-to-geodetic-surface.js.map","import { Vector3, assert, equals as equalsEpsilon } from '@math.gl/core';\nconst EPSILON14 = 1e-14;\nconst scratchOrigin = new Vector3();\nconst VECTOR_PRODUCT_LOCAL_FRAME = {\n  up: {\n    south: 'east',\n    north: 'west',\n    west: 'south',\n    east: 'north'\n  },\n  down: {\n    south: 'west',\n    north: 'east',\n    west: 'north',\n    east: 'south'\n  },\n  south: {\n    up: 'west',\n    down: 'east',\n    west: 'down',\n    east: 'up'\n  },\n  north: {\n    up: 'east',\n    down: 'west',\n    west: 'up',\n    east: 'down'\n  },\n  west: {\n    up: 'north',\n    down: 'south',\n    north: 'down',\n    south: 'up'\n  },\n  east: {\n    up: 'south',\n    down: 'north',\n    north: 'up',\n    south: 'down'\n  }\n};\nconst degeneratePositionLocalFrame = {\n  north: [-1, 0, 0],\n  east: [0, 1, 0],\n  up: [0, 0, 1],\n  south: [1, 0, 0],\n  west: [0, -1, 0],\n  down: [0, 0, -1]\n};\nconst scratchAxisVectors = {\n  east: new Vector3(),\n  north: new Vector3(),\n  up: new Vector3(),\n  west: new Vector3(),\n  south: new Vector3(),\n  down: new Vector3()\n};\nconst scratchVector1 = new Vector3();\nconst scratchVector2 = new Vector3();\nconst scratchVector3 = new Vector3();\nexport default function localFrameToFixedFrame(ellipsoid, firstAxis, secondAxis, thirdAxis, cartesianOrigin, result) {\n  const thirdAxisInferred = VECTOR_PRODUCT_LOCAL_FRAME[firstAxis] && VECTOR_PRODUCT_LOCAL_FRAME[firstAxis][secondAxis];\n  assert(thirdAxisInferred && (!thirdAxis || thirdAxis === thirdAxisInferred));\n  let firstAxisVector;\n  let secondAxisVector;\n  let thirdAxisVector;\n  const origin = scratchOrigin.copy(cartesianOrigin);\n  const atPole = equalsEpsilon(origin.x, 0.0, EPSILON14) && equalsEpsilon(origin.y, 0.0, EPSILON14);\n\n  if (atPole) {\n    const sign = Math.sign(origin.z);\n    firstAxisVector = scratchVector1.fromArray(degeneratePositionLocalFrame[firstAxis]);\n\n    if (firstAxis !== 'east' && firstAxis !== 'west') {\n      firstAxisVector.scale(sign);\n    }\n\n    secondAxisVector = scratchVector2.fromArray(degeneratePositionLocalFrame[secondAxis]);\n\n    if (secondAxis !== 'east' && secondAxis !== 'west') {\n      secondAxisVector.scale(sign);\n    }\n\n    thirdAxisVector = scratchVector3.fromArray(degeneratePositionLocalFrame[thirdAxis]);\n\n    if (thirdAxis !== 'east' && thirdAxis !== 'west') {\n      thirdAxisVector.scale(sign);\n    }\n  } else {\n    const {\n      up,\n      east,\n      north\n    } = scratchAxisVectors;\n    east.set(-origin.y, origin.x, 0.0).normalize();\n    ellipsoid.geodeticSurfaceNormal(origin, up);\n    north.copy(up).cross(east);\n    const {\n      down,\n      west,\n      south\n    } = scratchAxisVectors;\n    down.copy(up).scale(-1);\n    west.copy(east).scale(-1);\n    south.copy(north).scale(-1);\n    firstAxisVector = scratchAxisVectors[firstAxis];\n    secondAxisVector = scratchAxisVectors[secondAxis];\n    thirdAxisVector = scratchAxisVectors[thirdAxis];\n  }\n\n  result[0] = firstAxisVector.x;\n  result[1] = firstAxisVector.y;\n  result[2] = firstAxisVector.z;\n  result[3] = 0.0;\n  result[4] = secondAxisVector.x;\n  result[5] = secondAxisVector.y;\n  result[6] = secondAxisVector.z;\n  result[7] = 0.0;\n  result[8] = thirdAxisVector.x;\n  result[9] = thirdAxisVector.y;\n  result[10] = thirdAxisVector.z;\n  result[11] = 0.0;\n  result[12] = origin.x;\n  result[13] = origin.y;\n  result[14] = origin.z;\n  result[15] = 1.0;\n  return result;\n}\n//# sourceMappingURL=ellipsoid-transform.js.map","import { Vector3, Matrix4, toRadians, toDegrees, assert, equals, _MathUtils } from '@math.gl/core';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z } from '../constants';\nimport { fromCartographicToRadians, toCartographicFromRadians } from '../type-utils';\nimport scaleToGeodeticSurface from './helpers/scale-to-geodetic-surface';\nimport localFrameToFixedFrame from './helpers/ellipsoid-transform';\nconst scratchVector = new Vector3();\nconst scratchNormal = new Vector3();\nconst scratchK = new Vector3();\nconst scratchPosition = new Vector3();\nconst scratchHeight = new Vector3();\nconst scratchCartesian = new Vector3();\nlet wgs84;\nexport default class Ellipsoid {\n  static get WGS84() {\n    wgs84 = wgs84 || new Ellipsoid(WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z);\n    return wgs84;\n  }\n\n  constructor(x = 0.0, y = 0.0, z = 0.0) {\n    assert(x >= 0.0);\n    assert(y >= 0.0);\n    assert(z >= 0.0);\n    this.radii = new Vector3(x, y, z);\n    this.radiiSquared = new Vector3(x * x, y * y, z * z);\n    this.radiiToTheFourth = new Vector3(x * x * x * x, y * y * y * y, z * z * z * z);\n    this.oneOverRadii = new Vector3(x === 0.0 ? 0.0 : 1.0 / x, y === 0.0 ? 0.0 : 1.0 / y, z === 0.0 ? 0.0 : 1.0 / z);\n    this.oneOverRadiiSquared = new Vector3(x === 0.0 ? 0.0 : 1.0 / (x * x), y === 0.0 ? 0.0 : 1.0 / (y * y), z === 0.0 ? 0.0 : 1.0 / (z * z));\n    this.minimumRadius = Math.min(x, y, z);\n    this.maximumRadius = Math.max(x, y, z);\n    this.centerToleranceSquared = _MathUtils.EPSILON1;\n\n    if (this.radiiSquared.z !== 0) {\n      this.squaredXOverSquaredZ = this.radiiSquared.x / this.radiiSquared.z;\n    }\n\n    Object.freeze(this);\n  }\n\n  equals(right) {\n    return this === right || Boolean(right && this.radii.equals(right.radii));\n  }\n\n  toString() {\n    return this.radii.toString();\n  }\n\n  cartographicToCartesian(cartographic, result = [0, 0, 0]) {\n    const normal = scratchNormal;\n    const k = scratchK;\n    const [,, height] = cartographic;\n    this.geodeticSurfaceNormalCartographic(cartographic, normal);\n    k.copy(this.radiiSquared).scale(normal);\n    const gamma = Math.sqrt(normal.dot(k));\n    k.scale(1 / gamma);\n    normal.scale(height);\n    k.add(normal);\n    return k.to(result);\n  }\n\n  cartesianToCartographic(cartesian, result = [0, 0, 0]) {\n    scratchCartesian.from(cartesian);\n    const point = this.scaleToGeodeticSurface(scratchCartesian, scratchPosition);\n\n    if (!point) {\n      return undefined;\n    }\n\n    const normal = this.geodeticSurfaceNormal(point, scratchNormal);\n    const h = scratchHeight;\n    h.copy(scratchCartesian).subtract(point);\n    const longitude = Math.atan2(normal.y, normal.x);\n    const latitude = Math.asin(normal.z);\n    const height = Math.sign(vec3.dot(h, scratchCartesian)) * vec3.length(h);\n    return toCartographicFromRadians([longitude, latitude, height], result);\n  }\n\n  eastNorthUpToFixedFrame(origin, result = new Matrix4()) {\n    return localFrameToFixedFrame(this, 'east', 'north', 'up', origin, result);\n  }\n\n  localFrameToFixedFrame(firstAxis, secondAxis, thirdAxis, origin, result = new Matrix4()) {\n    return localFrameToFixedFrame(this, firstAxis, secondAxis, thirdAxis, origin, result);\n  }\n\n  geocentricSurfaceNormal(cartesian, result = [0, 0, 0]) {\n    return scratchVector.from(cartesian).normalize().to(result);\n  }\n\n  geodeticSurfaceNormalCartographic(cartographic, result = [0, 0, 0]) {\n    const cartographicVectorRadians = fromCartographicToRadians(cartographic);\n    const longitude = cartographicVectorRadians[0];\n    const latitude = cartographicVectorRadians[1];\n    const cosLatitude = Math.cos(latitude);\n    scratchVector.set(cosLatitude * Math.cos(longitude), cosLatitude * Math.sin(longitude), Math.sin(latitude)).normalize();\n    return scratchVector.to(result);\n  }\n\n  geodeticSurfaceNormal(cartesian, result = [0, 0, 0]) {\n    return scratchVector.from(cartesian).scale(this.oneOverRadiiSquared).normalize().to(result);\n  }\n\n  scaleToGeodeticSurface(cartesian, result) {\n    return scaleToGeodeticSurface(cartesian, this, result);\n  }\n\n  scaleToGeocentricSurface(cartesian, result = [0, 0, 0]) {\n    scratchPosition.from(cartesian);\n    const positionX = scratchPosition.x;\n    const positionY = scratchPosition.y;\n    const positionZ = scratchPosition.z;\n    const oneOverRadiiSquared = this.oneOverRadiiSquared;\n    const beta = 1.0 / Math.sqrt(positionX * positionX * oneOverRadiiSquared.x + positionY * positionY * oneOverRadiiSquared.y + positionZ * positionZ * oneOverRadiiSquared.z);\n    return scratchPosition.multiplyScalar(beta).to(result);\n  }\n\n  transformPositionToScaledSpace(position, result = [0, 0, 0]) {\n    return scratchPosition.from(position).scale(this.oneOverRadii).to(result);\n  }\n\n  transformPositionFromScaledSpace(position, result = [0, 0, 0]) {\n    return scratchPosition.from(position).scale(this.radii).to(result);\n  }\n\n  getSurfaceNormalIntersectionWithZAxis(position, buffer = 0.0, result = [0, 0, 0]) {\n    assert(equals(this.radii.x, this.radii.y, _MathUtils.EPSILON15));\n    assert(this.radii.z > 0);\n    scratchPosition.from(position);\n    const z = scratchPosition.z * (1 - this.squaredXOverSquaredZ);\n\n    if (Math.abs(z) >= this.radii.z - buffer) {\n      return undefined;\n    }\n\n    return scratchPosition.set(0.0, 0.0, z).to(result);\n  }\n\n}\n//# sourceMappingURL=ellipsoid.js.map","export function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n","import type {ImageTypeEnum} from '../../types';\nimport {global, isBrowser} from '../utils/globals';\n\n// @ts-ignore TS2339: Property does not exist on type\nconst {_parseImageNode} = global;\n\nconst IMAGE_SUPPORTED = typeof Image !== 'undefined'; // NOTE: \"false\" positives if jsdom is installed\nconst IMAGE_BITMAP_SUPPORTED = typeof ImageBitmap !== 'undefined';\nconst NODE_IMAGE_SUPPORTED = Boolean(_parseImageNode);\nconst DATA_SUPPORTED = isBrowser ? true : NODE_IMAGE_SUPPORTED;\n\n/**\n * Checks if a loaders.gl image type is supported\n * @param type image type string\n */\nexport function isImageTypeSupported(type: string): boolean {\n  switch (type) {\n    case 'auto':\n      // Should only ever be false in Node.js, if polyfills have not been installed...\n      return IMAGE_BITMAP_SUPPORTED || IMAGE_SUPPORTED || DATA_SUPPORTED;\n\n    case 'imagebitmap':\n      return IMAGE_BITMAP_SUPPORTED;\n    case 'image':\n      return IMAGE_SUPPORTED;\n    case 'data':\n      return DATA_SUPPORTED;\n\n    default:\n      throw new Error(`@loaders.gl/images: image ${type} not supported in this environment`);\n  }\n}\n\n/**\n * Returns the \"most performant\" supported image type on this platform\n * @returns image type string\n */\nexport function getDefaultImageType(): ImageTypeEnum {\n  if (IMAGE_BITMAP_SUPPORTED) {\n    return 'imagebitmap';\n  }\n  if (IMAGE_SUPPORTED) {\n    return 'image';\n  }\n  if (DATA_SUPPORTED) {\n    return 'data';\n  }\n\n  // This should only happen in Node.js\n  throw new Error('Install \\'@loaders.gl/polyfills\\' to parse images under Node.js');\n}\n","import type {ImageType, ImageTypeEnum, ImageDataType} from '../../types';\n\nexport function isImage(image: ImageType): boolean {\n  return Boolean(getImageTypeOrNull(image));\n}\n\nexport function deleteImage(image: ImageType): void {\n  switch (getImageType(image)) {\n    case 'imagebitmap':\n      (image as ImageBitmap).close();\n      break;\n    default:\n    // Nothing to do for images and image data objects\n  }\n}\n\nexport function getImageType(image: ImageType): ImageTypeEnum {\n  const format = getImageTypeOrNull(image);\n  if (!format) {\n    throw new Error('Not an image');\n  }\n  return format;\n}\n\nexport function getImageSize(image: ImageType): {width: number; height: number} {\n  return getImageData(image);\n}\n\nexport function getImageData(image: ImageType): ImageDataType | ImageData {\n  switch (getImageType(image)) {\n    case 'data':\n      return image as unknown as ImageData;\n\n    case 'image':\n    case 'imagebitmap':\n      // Extract the image data from the image via a canvas\n      const canvas = document.createElement('canvas');\n      // TODO - reuse the canvas?\n      const context = canvas.getContext('2d');\n      if (!context) {\n        throw new Error('getImageData');\n      }\n      // @ts-ignore\n      canvas.width = image.width;\n      // @ts-ignore\n      canvas.height = image.height;\n      // @ts-ignore\n      context.drawImage(image, 0, 0);\n      // @ts-ignore\n      return context.getImageData(0, 0, image.width, image.height);\n\n    default:\n      throw new Error('getImageData');\n  }\n}\n\n// PRIVATE\n\n// eslint-disable-next-line complexity\nfunction getImageTypeOrNull(image) {\n  if (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    return 'imagebitmap';\n  }\n  if (typeof Image !== 'undefined' && image instanceof Image) {\n    return 'image';\n  }\n  if (image && typeof image === 'object' && image.data && image.width && image.height) {\n    return 'data';\n  }\n  return null;\n}\n","// SVG parsing has limitations, e.g:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=606319\n\nconst SVG_DATA_URL_PATTERN = /^data:image\\/svg\\+xml/;\nconst SVG_URL_PATTERN = /\\.svg((\\?|#).*)?$/;\n\nexport function isSVG(url) {\n  return url && (SVG_DATA_URL_PATTERN.test(url) || SVG_URL_PATTERN.test(url));\n}\n\nexport function getBlobOrSVGDataUrl(arrayBuffer, url) {\n  if (isSVG(url)) {\n    // Prepare a properly tagged data URL, and load using normal mechanism\n    const textDecoder = new TextDecoder();\n    let xmlText = textDecoder.decode(arrayBuffer);\n    // TODO Escape in browser to support e.g. Chinese characters\n    try {\n      if (typeof unescape === 'function' && typeof encodeURIComponent === 'function') {\n        xmlText = unescape(encodeURIComponent(xmlText));\n      }\n    } catch (error) {\n      throw new Error((error as Error).message);\n    }\n    // base64 encoding is safer. utf-8 fails in some browsers\n    const src = `data:image/svg+xml;base64,${btoa(xmlText)}`;\n    return src;\n  }\n  return getBlob(arrayBuffer, url);\n}\n\nexport function getBlob(arrayBuffer, url) {\n  if (isSVG(url)) {\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=606319\n    // return new Blob([new Uint8Array(arrayBuffer)], {type: 'image/svg+xml'});\n    throw new Error('SVG cannot be parsed directly to imagebitmap');\n  }\n  // TODO - how to determine mime type? Param? Sniff here?\n  return new Blob([new Uint8Array(arrayBuffer)]); // MIME type not needed?\n}\n","import {getBlobOrSVGDataUrl} from './svg-utils';\n\n// Parses html image from array buffer\nexport default async function parseToImage(arrayBuffer, options, url) {\n  // Note: image parsing requires conversion to Blob (for createObjectURL).\n  // Potentially inefficient for not using `response.blob()` (and for File / Blob inputs)...\n  // But presumably not worth adding 'blob' flag to loader objects?\n\n  const blobOrDataUrl = getBlobOrSVGDataUrl(arrayBuffer, url);\n  const URL = self.URL || self.webkitURL;\n  const objectUrl = typeof blobOrDataUrl !== 'string' && URL.createObjectURL(blobOrDataUrl);\n  try {\n    return await loadToImage(objectUrl || blobOrDataUrl, options);\n  } finally {\n    if (objectUrl) {\n      URL.revokeObjectURL(objectUrl);\n    }\n  }\n}\n\nexport async function loadToImage(url, options) {\n  const image = new Image();\n  image.src = url;\n\n  // The `image.onload()` callback does not guarantee that the image has been decoded\n  // so a main thread \"freeze\" can be incurred when using the image for the first time.\n  // `Image.decode()` returns a promise that completes when image is decoded.\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decode\n  // Note: When calling `img.decode()`, we do not need to wait for `img.onload()`\n  // Note: `HTMLImageElement.decode()` is not available in Edge and IE11\n  if (options.image && options.image.decode && image.decode) {\n    await image.decode();\n    return image;\n  }\n\n  // Create a promise that tracks onload/onerror callbacks\n  return await new Promise((resolve, reject) => {\n    try {\n      image.onload = () => resolve(image);\n      image.onerror = (err) => reject(new Error(`Could not load image ${url}: ${err}`));\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n","import {isSVG, getBlob} from './svg-utils';\nimport parseToImage from './parse-to-image';\n\nconst EMPTY_OBJECT = {};\n\nlet imagebitmapOptionsSupported = true;\n\n/**\n * Asynchronously parses an array buffer into an ImageBitmap - this contains the decoded data\n * ImageBitmaps are supported on worker threads, but not supported on Edge, IE11 and Safari\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap#Browser_compatibility\n *\n * TODO - createImageBitmap supports source rect (5 param overload), pass through?\n */\nexport default async function parseToImageBitmap(arrayBuffer, options, url) {\n  let blob;\n\n  // Cannot parse SVG directly to ImageBitmap, parse to Image first\n  if (isSVG(url)) {\n    // Note: this only works on main thread\n    const image = await parseToImage(arrayBuffer, options, url);\n    blob = image;\n  } else {\n    // Create blob from the array buffer\n    blob = getBlob(arrayBuffer, url);\n  }\n\n  const imagebitmapOptions = options && options.imagebitmap;\n\n  return await safeCreateImageBitmap(blob, imagebitmapOptions);\n}\n\n/**\n * Safely creates an imageBitmap with options\n * *\n * Firefox crashes if imagebitmapOptions is supplied\n * Avoid supplying if not provided or supported, remember if not supported\n */\nasync function safeCreateImageBitmap(blob, imagebitmapOptions = null) {\n  if (isEmptyObject(imagebitmapOptions) || !imagebitmapOptionsSupported) {\n    imagebitmapOptions = null;\n  }\n\n  if (imagebitmapOptions) {\n    try {\n      // @ts-ignore Options\n      return await createImageBitmap(blob, imagebitmapOptions);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n      imagebitmapOptionsSupported = false;\n    }\n  }\n\n  return await createImageBitmap(blob);\n}\n\nfunction isEmptyObject(object) {\n  // @ts-ignore\n  for (const key in object || EMPTY_OBJECT) {\n    return false;\n  }\n  return true;\n}\n","// Attributions\n// * Based on binary-gltf-utils under MIT license: Copyright (c) 2016-17 Karl Cheng\n\n// TODO: make these functions work for Node.js buffers?\n// Quarantine references to Buffer to prevent bundler from adding big polyfills\n// import {bufferToArrayBuffer} from '../node/buffer-to-array-buffer';\n// TODO - this should be handled in @loaders.gl/polyfills\n\n/** MIME type, width and height extracted from binary compressed image data */\nexport type BinaryImageMetadata = {\n  mimeType: string;\n  width: number;\n  height: number;\n};\n\nconst BIG_ENDIAN = false;\nconst LITTLE_ENDIAN = true;\n\n/**\n * Extracts `{mimeType, width and height}` from a memory buffer containing a known image format\n * Currently supports `image/png`, `image/jpeg`, `image/bmp` and `image/gif`.\n * @param binaryData image file memory to parse\n * @returns metadata or null if memory is not a valid image file format layout.\n */\nexport function getBinaryImageMetadata(\n  binaryData: DataView | ArrayBuffer\n): BinaryImageMetadata | null {\n  const dataView = toDataView(binaryData);\n  return (\n    getPngMetadata(dataView) ||\n    getJpegMetadata(dataView) ||\n    getGifMetadata(dataView) ||\n    getBmpMetadata(dataView)\n  );\n}\n\n// PNG\n\nfunction getPngMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check file contains the first 4 bytes of the PNG signature.\n  const isPng = dataView.byteLength >= 24 && dataView.getUint32(0, BIG_ENDIAN) === 0x89504e47;\n  if (!isPng) {\n    return null;\n  }\n\n  // Extract size from a binary PNG file\n  return {\n    mimeType: 'image/png',\n    width: dataView.getUint32(16, BIG_ENDIAN),\n    height: dataView.getUint32(20, BIG_ENDIAN)\n  };\n}\n\n// GIF\n\n// Extract size from a binary GIF file\n// TODO: GIF is not this simple\nfunction getGifMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check first 4 bytes of the GIF signature (\"GIF8\").\n  const isGif = dataView.byteLength >= 10 && dataView.getUint32(0, BIG_ENDIAN) === 0x47494638;\n  if (!isGif) {\n    return null;\n  }\n\n  // GIF is little endian.\n  return {\n    mimeType: 'image/gif',\n    width: dataView.getUint16(6, LITTLE_ENDIAN),\n    height: dataView.getUint16(8, LITTLE_ENDIAN)\n  };\n}\n\n// BMP\n\n// TODO: BMP is not this simple\nexport function getBmpMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check magic number is valid (first 2 characters should be \"BM\").\n  // The mandatory bitmap file header is 14 bytes long.\n  const isBmp =\n    dataView.byteLength >= 14 &&\n    dataView.getUint16(0, BIG_ENDIAN) === 0x424d &&\n    dataView.getUint32(2, LITTLE_ENDIAN) === dataView.byteLength;\n\n  if (!isBmp) {\n    return null;\n  }\n\n  // BMP is little endian.\n  return {\n    mimeType: 'image/bmp',\n    width: dataView.getUint32(18, LITTLE_ENDIAN),\n    height: dataView.getUint32(22, LITTLE_ENDIAN)\n  };\n}\n\n// JPEG\n\n// Extract width and height from a binary JPEG file\nfunction getJpegMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check file contains the JPEG \"start of image\" (SOI) marker\n  // followed by another marker.\n  const isJpeg =\n    dataView.byteLength >= 3 &&\n    dataView.getUint16(0, BIG_ENDIAN) === 0xffd8 &&\n    dataView.getUint8(2) === 0xff;\n\n  if (!isJpeg) {\n    return null;\n  }\n\n  const {tableMarkers, sofMarkers} = getJpegMarkers();\n\n  // Exclude the two byte SOI marker.\n  let i = 2;\n  while (i + 9 < dataView.byteLength) {\n    const marker = dataView.getUint16(i, BIG_ENDIAN);\n\n    // The frame that contains the width and height of the JPEG image.\n    if (sofMarkers.has(marker)) {\n      return {\n        mimeType: 'image/jpeg',\n        height: dataView.getUint16(i + 5, BIG_ENDIAN), // Number of lines\n        width: dataView.getUint16(i + 7, BIG_ENDIAN) // Number of pixels per line\n      };\n    }\n\n    // Miscellaneous tables/data preceding the frame header.\n    if (!tableMarkers.has(marker)) {\n      return null;\n    }\n\n    // Length includes size of length parameter but not the two byte header.\n    i += 2;\n    i += dataView.getUint16(i, BIG_ENDIAN);\n  }\n\n  return null;\n}\n\nfunction getJpegMarkers() {\n  // Tables/misc header markers.\n  // DQT, DHT, DAC, DRI, COM, APP_n\n  const tableMarkers = new Set([0xffdb, 0xffc4, 0xffcc, 0xffdd, 0xfffe]);\n  for (let i = 0xffe0; i < 0xfff0; ++i) {\n    tableMarkers.add(i);\n  }\n\n  // SOF markers and DHP marker.\n  // These markers are after tables/misc data.\n  const sofMarkers = new Set([\n    0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc9, 0xffca, 0xffcb, 0xffcd, 0xffce,\n    0xffcf, 0xffde\n  ]);\n\n  return {tableMarkers, sofMarkers};\n}\n\n// TODO - move into image module?\nfunction toDataView(data) {\n  if (data instanceof DataView) {\n    return data;\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new DataView(data.buffer);\n  }\n\n  // TODO: make these functions work for Node.js buffers?\n  // if (bufferToArrayBuffer) {\n  //   data = bufferToArrayBuffer(data);\n  // }\n\n  // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n  if (data instanceof ArrayBuffer) {\n    return new DataView(data);\n  }\n  throw new Error('toDataView');\n}\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport parseImage from './lib/parsers/parse-image';\nimport {getBinaryImageMetadata} from './lib/category-api/binary-image-api';\n\nconst EXTENSIONS = ['png', 'jpg', 'jpeg', 'gif', 'webp', 'bmp', 'ico', 'svg'];\nconst MIME_TYPES = [\n  'image/png',\n  'image/jpeg',\n  'image/gif',\n  'image/webp',\n  'image/bmp',\n  'image/vnd.microsoft.icon',\n  'image/svg+xml'\n];\n\n/**\n * Loads a platform-specific image type\n * Note: This type can be used as input data to WebGL texture creation\n */\nexport const ImageLoader = {\n  id: 'image',\n  module: 'images',\n  name: 'Images',\n  version: VERSION,\n  mimeTypes: MIME_TYPES,\n  extensions: EXTENSIONS,\n  parse: parseImage,\n  // TODO: byteOffset, byteLength;\n  tests: [(arrayBuffer) => Boolean(getBinaryImageMetadata(new DataView(arrayBuffer)))],\n  options: {\n    image: {\n      type: 'auto',\n      decode: true // if format is HTML\n    }\n    // imagebitmap: {} - passes (platform dependent) parameters to ImageBitmap constructor\n  }\n};\n\nexport const _typecheckImageLoader: LoaderWithParser = ImageLoader;\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n","import {assert} from '../utils/assert';\nimport {isImageTypeSupported, getDefaultImageType} from '../category-api/image-type';\nimport {getImageData} from '../category-api/parsed-image-api';\nimport parseToImage from './parse-to-image';\nimport parseToImageBitmap from './parse-to-image-bitmap';\nimport parseToNodeImage from './parse-to-node-image';\n\n// Parse to platform defined image type (data on node, ImageBitmap or HTMLImage on browser)\n// eslint-disable-next-line complexity\nexport default async function parseImage(arrayBuffer, options, context) {\n  options = options || {};\n  const imageOptions = options.image || {};\n\n  // The user can request a specific output format via `options.image.type`\n  const imageType = imageOptions.type || 'auto';\n\n  const {url} = context || {};\n\n  // Note: For options.image.type === `data`, we may still need to load as `image` or `imagebitmap`\n  const loadType = getLoadableImageType(imageType);\n\n  let image;\n  switch (loadType) {\n    case 'imagebitmap':\n      image = await parseToImageBitmap(arrayBuffer, options, url);\n      break;\n    case 'image':\n      image = await parseToImage(arrayBuffer, options, url);\n      break;\n    case 'data':\n      // Node.js loads imagedata directly\n      image = await parseToNodeImage(arrayBuffer, options);\n      break;\n    default:\n      assert(false);\n  }\n\n  // Browser: if options.image.type === 'data', we can now extract data from the loaded image\n  if (imageType === 'data') {\n    image = getImageData(image);\n  }\n\n  return image;\n}\n\n// Get a loadable image type from image type\nfunction getLoadableImageType(type) {\n  switch (type) {\n    case 'auto':\n    case 'data':\n      // Browser: For image data we need still need to load using an image format\n      // Node: the default image type is `data`.\n      return getDefaultImageType();\n    default:\n      // Throw an error if not supported\n      isImageTypeSupported(type);\n      return type;\n  }\n}\n","import {global} from '../utils/globals';\nimport {assert} from '../utils/assert';\nimport {getBinaryImageMetadata} from '../category-api/binary-image-api';\n\n// Use polyfills if installed to p[arsed image using get-pixels\nexport default function parseToNodeImage(arrayBuffer, options) {\n  const {mimeType} = getBinaryImageMetadata(arrayBuffer) || {};\n\n  // @ts-ignore\n  const {_parseImageNode} = global;\n  assert(_parseImageNode); // '@loaders.gl/polyfills not installed'\n\n  return _parseImageNode(arrayBuffer, mimeType, options);\n}\n","import type {Loader, LoaderOptions} from '@loaders.gl/loader-utils';\nimport type {DracoParseOptions} from './lib/draco-parser';\n// import type {DracoMeshData} from './types';\nimport {VERSION} from './lib/utils/version';\n\nexport type DracoLoaderOptions = LoaderOptions & {\n  draco?: DracoParseOptions & {\n    decoderType?: 'wasm' | 'js';\n    libraryPath?: string;\n    extraAttributes?;\n    attributeNameEntry?: string;\n  };\n};\n\nconst DEFAULT_DRACO_OPTIONS: DracoLoaderOptions = {\n  draco: {\n    decoderType: typeof WebAssembly === 'object' ? 'wasm' : 'js', // 'js' for IE11\n    libraryPath: 'libs/',\n    extraAttributes: {},\n    attributeNameEntry: undefined\n  }\n};\n\n/**\n * Worker loader for Draco3D compressed geometries\n */\nexport const DracoLoader = {\n  name: 'Draco',\n  id: 'draco',\n  module: 'draco',\n  version: VERSION,\n  worker: true,\n  extensions: ['drc'],\n  mimeTypes: ['application/octet-stream'],\n  binary: true,\n  tests: ['DRACO'],\n  options: DEFAULT_DRACO_OPTIONS\n};\n\nexport const _TypecheckDracoLoader: Loader = DracoLoader;\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n","import {assert} from '../../utils/assert';\nimport Field from './field';\n\nexport type SchemaMetadata = Map<string, any>;\n\n/**\n * ArrowJS `Schema` API-compatible class for row-based tables (returned from `DataTable`)\n * https://loaders.gl/arrowjs/docs/api-reference/schema\n */\nexport default class Schema {\n  fields: Field[];\n  // TODO - Arrow just allows Map<string, string>\n  metadata: SchemaMetadata;\n\n  constructor(fields: Field[], metadata?: SchemaMetadata) {\n    assert(Array.isArray(fields));\n    checkNames(fields);\n    // For kepler fields, create arrow compatible `Fields` that have kepler fields as `metadata`\n    this.fields = fields;\n    this.metadata = metadata || new Map();\n  }\n\n  // TODO - arrow only seems to compare fields, not metadata\n  compareTo(other: Schema): boolean {\n    if (this.metadata !== other.metadata) {\n      return false;\n    }\n    if (this.fields.length !== other.fields.length) {\n      return false;\n    }\n    for (let i = 0; i < this.fields.length; ++i) {\n      if (!this.fields[i].compareTo(other.fields[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  select(...columnNames: string[]): Schema {\n    // Ensure column names reference valid fields\n    const nameMap = Object.create(null);\n    for (const name of columnNames) {\n      nameMap[name] = true;\n    }\n    const selectedFields = this.fields.filter((field) => nameMap[field.name]);\n    return new Schema(selectedFields, this.metadata);\n  }\n\n  selectAt(...columnIndices: number[]): Schema {\n    // Ensure column indices reference valid fields\n    const selectedFields = columnIndices.map((index) => this.fields[index]).filter(Boolean);\n    return new Schema(selectedFields, this.metadata);\n  }\n\n  assign(schemaOrFields: Schema | Field[]): Schema {\n    let fields: Field[];\n    let metadata: SchemaMetadata = this.metadata;\n\n    if (schemaOrFields instanceof Schema) {\n      const otherSchema = schemaOrFields;\n      fields = otherSchema.fields;\n      metadata = mergeMaps(mergeMaps(new Map(), this.metadata), otherSchema.metadata);\n    } else {\n      fields = schemaOrFields;\n    }\n\n    // Create a merged list of fields, overwrite fields in place, new fields at end\n    const fieldMap: {[key: string]: Field} = Object.create(null);\n\n    for (const field of this.fields) {\n      fieldMap[field.name] = field;\n    }\n\n    for (const field of fields) {\n      fieldMap[field.name] = field;\n    }\n\n    const mergedFields = Object.values(fieldMap);\n\n    return new Schema(mergedFields, metadata);\n  }\n}\n\n// Warn if any duplicated field names\nfunction checkNames(fields) {\n  const usedNames = {};\n  for (const field of fields) {\n    if (usedNames[field.name]) {\n      // eslint-disable-next-line\n      console.warn('Schema: duplicated field name', field.name, field);\n    }\n    usedNames[field.name] = true;\n  }\n}\n\nfunction mergeMaps<T>(m1: T, m2: T): T {\n  // @ts-ignore\n  return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport function assert(condition: boolean, message?: string) {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n","// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n  /** The default placeholder type */\n  NONE = 0,\n  /** A NULL type having no physical storage */\n  Null = 1,\n  /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n  Int = 2,\n  /** 2, 4, or 8-byte floating point value */\n  Float = 3,\n  /** Variable-length bytes (no guarantee of UTF8-ness) */\n  Binary = 4,\n  /** UTF8 variable-length string as List<Char> */\n  Utf8 = 5,\n  /** Boolean as 1 bit, LSB bit-packed ordering */\n  Bool = 6,\n  /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n  Decimal = 7,\n  /** int32_t days or int64_t milliseconds since the UNIX epoch */\n  Date = 8,\n  /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n  Time = 9,\n  /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n  Timestamp = 10,\n  /** YEAR_MONTH or DAY_TIME interval in SQL style */\n  Interval = 11,\n  /** A list of some logical data type */\n  List = 12,\n  /** Struct of logical types */\n  Struct = 13,\n  /** Union of logical types */\n  Union = 14,\n  /** Fixed-size binary. Each value occupies the same number of bytes */\n  FixedSizeBinary = 15,\n  /** Fixed-size list. Each value occupies the same number of bytes */\n  FixedSizeList = 16,\n  /** Map of named logical types */\n  Map = 17,\n\n  /** Dictionary aka Category type */\n  Dictionary = -1,\n  Int8 = -2,\n  Int16 = -3,\n  Int32 = -4,\n  Int64 = -5,\n  Uint8 = -6,\n  Uint16 = -7,\n  Uint32 = -8,\n  Uint64 = -9,\n  Float16 = -10,\n  Float32 = -11,\n  Float64 = -12,\n  DateDay = -13,\n  DateMillisecond = -14,\n  TimestampSecond = -15,\n  TimestampMillisecond = -16,\n  TimestampMicrosecond = -17,\n  TimestampNanosecond = -18,\n  TimeSecond = -19,\n  TimeMillisecond = -20,\n  TimeMicrosecond = -21,\n  TimeNanosecond = -22,\n  DenseUnion = -23,\n  SparseUnion = -24,\n  IntervalDayTime = -25,\n  IntervalYearMonth = -26\n}\n","// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\nimport {Type} from './enum';\n\nimport Field from './field';\n\nexport {Type} from './enum';\n\nexport type TypedIntArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray;\n\nexport type TypedFloatArray = Float32Array | Float64Array;\n\nexport type TypedArray = TypedIntArray | TypedFloatArray;\n\nexport type AnyArrayType = Array<any> | TypedIntArray | TypedFloatArray;\n\nexport class DataType {\n  static isNull(x: any): boolean {\n    return x && x.typeId === Type.Null;\n  }\n  static isInt(x: any): boolean {\n    return x && x.typeId === Type.Int;\n  }\n  static isFloat(x: any): boolean {\n    return x && x.typeId === Type.Float;\n  }\n  static isBinary(x: any): boolean {\n    return x && x.typeId === Type.Binary;\n  }\n  static isUtf8(x: any): boolean {\n    return x && x.typeId === Type.Utf8;\n  }\n  static isBool(x: any): boolean {\n    return x && x.typeId === Type.Bool;\n  }\n  static isDecimal(x: any): boolean {\n    return x && x.typeId === Type.Decimal;\n  }\n  static isDate(x: any): boolean {\n    return x && x.typeId === Type.Date;\n  }\n  static isTime(x: any): boolean {\n    return x && x.typeId === Type.Time;\n  }\n  static isTimestamp(x: any): boolean {\n    return x && x.typeId === Type.Timestamp;\n  }\n  static isInterval(x: any): boolean {\n    return x && x.typeId === Type.Interval;\n  }\n  static isList(x: any): boolean {\n    return x && x.typeId === Type.List;\n  }\n  static isStruct(x: any): boolean {\n    return x && x.typeId === Type.Struct;\n  }\n  static isUnion(x: any): boolean {\n    return x && x.typeId === Type.Union;\n  }\n  static isFixedSizeBinary(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeBinary;\n  }\n  static isFixedSizeList(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeList;\n  }\n  static isMap(x: any): boolean {\n    return x && x.typeId === Type.Map;\n  }\n  static isDictionary(x: any): boolean {\n    return x && x.typeId === Type.Dictionary;\n  }\n\n  get typeId(): Type {\n    return Type.NONE;\n  }\n\n  // get ArrayType(): AnyArrayType {\n  //   return Int8Array;\n  // }\n\n  // get ArrayType() { return Array; }\n  compareTo(other: DataType): boolean {\n    // TODO\n    return this === other; // comparer.visit(this, other);\n  }\n}\n\n// NULL\n\nexport class Null extends DataType {\n  get typeId(): Type {\n    return Type.Null;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Null';\n  }\n  toString(): string {\n    return 'Null';\n  }\n}\n\n// BOOLEANS\n\nexport class Bool extends DataType {\n  get typeId(): Type {\n    return Type.Bool;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Bool';\n  }\n  toString(): string {\n    return 'Bool';\n  }\n}\n\n// INTS\n\nexport class Int extends DataType {\n  readonly isSigned: boolean;\n  readonly bitWidth: number;\n  constructor(isSigned, bitWidth) {\n    super();\n    this.isSigned = isSigned;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Int;\n  }\n  // get ArrayType() {\n  //   switch (this.bitWidth) {\n  //     case 8:\n  //       return this.isSigned ? Int8Array : Uint8Array;\n  //     case 16:\n  //       return this.isSigned ? Int16Array : Uint16Array;\n  //     case 32:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     case 64:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Int';\n  }\n  toString(): string {\n    return `${this.isSigned ? 'I' : 'Ui'}nt${this.bitWidth}`;\n  }\n}\n\nexport class Int8 extends Int {\n  constructor() {\n    super(true, 8);\n  }\n}\nexport class Int16 extends Int {\n  constructor() {\n    super(true, 16);\n  }\n}\nexport class Int32 extends Int {\n  constructor() {\n    super(true, 32);\n  }\n}\nexport class Int64 extends Int {\n  constructor() {\n    super(true, 64);\n  }\n}\nexport class Uint8 extends Int {\n  constructor() {\n    super(false, 8);\n  }\n}\nexport class Uint16 extends Int {\n  constructor() {\n    super(false, 16);\n  }\n}\nexport class Uint32 extends Int {\n  constructor() {\n    super(false, 32);\n  }\n}\nexport class Uint64 extends Int {\n  constructor() {\n    super(false, 64);\n  }\n}\n\n// FLOATS\n\nconst Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\n\nexport class Float extends DataType {\n  readonly precision: number;\n  constructor(precision) {\n    super();\n    this.precision = precision;\n  }\n  get typeId(): Type {\n    return Type.Float;\n  }\n  // get ArrayType() {\n  //   switch (this.precision) {\n  //     case Precision.HALF:\n  //       return Uint16Array;\n  //     case Precision.SINGLE:\n  //       return Float32Array;\n  //     case Precision.DOUBLE:\n  //       return Float64Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Float';\n  }\n  toString(): string {\n    return `Float${this.precision}`;\n  }\n}\n\nexport class Float16 extends Float {\n  constructor() {\n    super(Precision.HALF);\n  }\n}\nexport class Float32 extends Float {\n  constructor() {\n    super(Precision.SINGLE);\n  }\n}\nexport class Float64 extends Float {\n  constructor() {\n    super(Precision.DOUBLE);\n  }\n}\n\nexport class Binary extends DataType {\n  constructor() {\n    super();\n  }\n  get typeId() {\n    return Type.Binary;\n  }\n  toString() {\n    return 'Binary';\n  }\n  get [Symbol.toStringTag]() {\n    return 'Binary';\n  }\n}\n\n// STRINGS\n\nexport class Utf8 extends DataType {\n  get typeId(): Type {\n    return Type.Utf8;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Utf8';\n  }\n  toString(): string {\n    return 'Utf8';\n  }\n}\n\n// DATES, TIMES AND INTERVALS\n\nconst DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\n\nexport class Date extends DataType {\n  readonly unit: number;\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Date;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Date';\n  }\n  toString(): string {\n    return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`;\n  }\n}\n\nexport class DateDay extends Date {\n  constructor() {\n    super(DateUnit.DAY);\n  }\n}\nexport class DateMillisecond extends Date {\n  constructor() {\n    super(DateUnit.MILLISECOND);\n  }\n}\n\nconst TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\n\nexport class Time extends DataType {\n  readonly unit: number;\n  readonly bitWidth: number;\n\n  constructor(unit, bitWidth) {\n    super();\n    this.unit = unit;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Time;\n  }\n  toString(): string {\n    return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Time';\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n}\n\nexport class TimeSecond extends Time {\n  constructor() {\n    super(TimeUnit.SECOND, 32);\n  }\n}\nexport class TimeMillisecond extends Time {\n  constructor() {\n    super(TimeUnit.MILLISECOND, 32);\n  }\n}\n// export class TimeMicrosecond extends Time { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n// export class TimeNanosecond extends Time { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\nexport class Timestamp extends DataType {\n  readonly unit: any;\n  readonly timezone: any;\n\n  constructor(unit: any, timezone = null) {\n    super();\n    this.unit = unit;\n    this.timezone = timezone;\n  }\n  get typeId(): Type {\n    return Type.Timestamp;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Timestamp';\n  }\n  toString(): string {\n    return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ''}>`;\n  }\n}\n\nexport class TimestampSecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.SECOND, timezone);\n  }\n}\nexport class TimestampMillisecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MILLISECOND, timezone);\n  }\n}\nexport class TimestampMicrosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MICROSECOND, timezone);\n  }\n}\nexport class TimestampNanosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.NANOSECOND, timezone);\n  }\n}\n\nconst IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\n\nexport class Interval extends DataType {\n  readonly unit: number;\n  constructor(unit: number) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Interval;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Interval';\n  }\n  toString(): string {\n    return `Interval<${IntervalUnit[this.unit]}>`;\n  }\n}\n\nexport class IntervalDayTime extends Interval {\n  constructor() {\n    super(IntervalUnit.DAY_TIME);\n  }\n}\nexport class IntervalYearMonth extends Interval {\n  constructor() {\n    super(IntervalUnit.YEAR_MONTH);\n  }\n}\n\nexport class FixedSizeList extends DataType {\n  readonly listSize: number;\n  readonly children: Field[];\n\n  constructor(listSize: number, child: Field) {\n    super();\n    this.listSize = listSize;\n    this.children = [child];\n  }\n  get typeId(): Type {\n    return Type.FixedSizeList;\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  // get ArrayType() {\n  //   return this.valueType.ArrayType;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'FixedSizeList';\n  }\n  toString(): string {\n    return `FixedSizeList[${this.listSize}]<${this.valueType}>`;\n  }\n}\n","import {DataType} from './type';\n\n/**\n * ArrowJS `Field` API-compatible class for row-based tables\n * https://loaders.gl/arrowjs/docs/api-reference/field\n * A field holds name, nullable, and metadata information about a table \"column\"\n * A Schema is essentially a list of fields\n */\nexport default class Field {\n  name: string;\n  type: DataType;\n  nullable: boolean;\n  metadata: Map<string, string>;\n\n  constructor(\n    name: string,\n    type: DataType,\n    nullable = false,\n    metadata: Map<string, string> = new Map()\n  ) {\n    this.name = name;\n    this.type = type;\n    this.nullable = nullable;\n    this.metadata = metadata;\n  }\n\n  get typeId(): number {\n    return this.type && this.type.typeId;\n  }\n\n  clone(): Field {\n    return new Field(this.name, this.type, this.nullable, this.metadata);\n  }\n\n  compareTo(other: this): boolean {\n    return (\n      this.name === other.name &&\n      this.type === other.type &&\n      this.nullable === other.nullable &&\n      this.metadata === other.metadata\n    );\n  }\n\n  toString(): string {\n    return `${this.type}${this.nullable ? ', nullable' : ''}${\n      this.metadata ? `, metadata: ${this.metadata}` : ''\n    }`;\n  }\n}\n","import {Schema, Field, FixedSizeList, getArrowTypeFromTypedArray} from '@loaders.gl/schema';\n\nimport {MeshAttribute, DracoAttribute, DracoLoaderData, DracoMetadataEntry} from '../draco-types';\n\nexport function makeSchemaFromAttributes(\n  attributes: {[attributeName: string]: MeshAttribute},\n  loaderData: DracoLoaderData,\n  indices?: MeshAttribute\n): Schema {\n  const metadataMap = makeMetadata(loaderData.metadata);\n  const fields: Field[] = [];\n  const namedLoaderDataAttributes = transformAttributesLoaderData(loaderData.attributes);\n  for (const attributeName in attributes) {\n    const attribute = attributes[attributeName];\n    const field = getArrowFieldFromAttribute(\n      attributeName,\n      attribute,\n      namedLoaderDataAttributes[attributeName]\n    );\n    fields.push(field);\n  }\n  if (indices) {\n    const indicesField = getArrowFieldFromAttribute('indices', indices);\n    fields.push(indicesField);\n  }\n  return new Schema(fields, metadataMap);\n}\n\nfunction transformAttributesLoaderData(loaderData: {[key: number]: DracoAttribute}): {\n  [attributeName: string]: DracoAttribute;\n} {\n  const result: {[attributeName: string]: DracoAttribute} = {};\n  for (const key in loaderData) {\n    const dracoAttribute = loaderData[key];\n    result[dracoAttribute.name || 'undefined'] = dracoAttribute;\n  }\n  return result;\n}\n\nfunction getArrowFieldFromAttribute(\n  attributeName: string,\n  attribute: MeshAttribute,\n  loaderData?: DracoAttribute\n): Field {\n  const metadataMap = loaderData ? makeMetadata(loaderData.metadata) : undefined;\n  const type = getArrowTypeFromTypedArray(attribute.value);\n  return new Field(\n    attributeName,\n    new FixedSizeList(attribute.size, new Field('value', type)),\n    false,\n    metadataMap\n  );\n}\n\nfunction makeMetadata(metadata: {[key: string]: DracoMetadataEntry}): Map<string, string> {\n  const metadataMap = new Map();\n  for (const key in metadata) {\n    metadataMap.set(`${key}.string`, JSON.stringify(metadata[key]));\n  }\n\n  return metadataMap;\n}\n","import type {TypedArray} from '../../types';\nimport {DataType, Float32, Float64, Int16, Int32, Int8, Uint16, Uint32, Uint8} from '../schema';\n\nexport function getArrowTypeFromTypedArray(array: TypedArray): DataType {\n  switch (array.constructor) {\n    case Int8Array:\n      return new Int8();\n    case Uint8Array:\n      return new Uint8();\n    case Int16Array:\n      return new Int16();\n    case Uint16Array:\n      return new Uint16();\n    case Int32Array:\n      return new Int32();\n    case Uint32Array:\n      return new Uint32();\n    case Float32Array:\n      return new Float32();\n    case Float64Array:\n      return new Float64();\n    default:\n      throw new Error('array type not supported');\n  }\n}\n","/* eslint-disable camelcase */\n\n// Draco types (input)\nimport type {\n  Draco3D,\n  Decoder,\n  Mesh,\n  PointCloud,\n  PointAttribute,\n  Metadata,\n  MetadataQuerier,\n  DracoInt32Array,\n  draco_DataType\n} from '../draco3d/draco3d-types';\n\n// Parsed data types (output)\nimport type {\n  TypedArray,\n  // standard mesh output data\n  MeshData,\n  MeshAttribute,\n  // standard mesh with draco metadata\n  DracoMeshData,\n  DracoLoaderData,\n  DracoAttribute,\n  DracoMetadataEntry,\n  DracoQuantizationTransform,\n  DracoOctahedronTransform\n} from './draco-types';\n\nimport {getMeshBoundingBox} from '@loaders.gl/schema';\nimport {makeSchemaFromAttributes} from './utils/schema-attribute-utils';\n\n/**\n * @param topology - How triangle indices should be generated (mesh only)\n * @param attributeNameEntry\n * @param extraAttributes\n * @param quantizedAttributes\n * @param octahedronAttributes\n */\nexport type DracoParseOptions = {\n  topology?: 'triangle-list' | 'triangle-strip';\n  attributeNameEntry?: string;\n  extraAttributes?: {[uniqueId: string]: number};\n  quantizedAttributes?: ('POSITION' | 'NORMAL' | 'COLOR' | 'TEX_COORD' | 'GENERIC')[];\n  octahedronAttributes?: ('POSITION' | 'NORMAL' | 'COLOR' | 'TEX_COORD' | 'GENERIC')[];\n};\n\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst GEOMETRY_TYPE = {\n  TRIANGULAR_MESH: 0,\n  POINT_CLOUD: 1\n};\n\n// Native Draco attribute names to GLTF attribute names.\nconst DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP = {\n  POSITION: 'POSITION',\n  NORMAL: 'NORMAL',\n  COLOR: 'COLOR_0',\n  TEX_COORD: 'TEXCOORD_0'\n};\n\nconst DRACO_DATA_TYPE_TO_TYPED_ARRAY_MAP = {\n  1: Int8Array,\n  2: Uint8Array,\n  3: Int16Array,\n  4: Uint16Array,\n  5: Int32Array,\n  6: Uint32Array,\n  9: Float32Array\n};\n\nconst INDEX_ITEM_SIZE = 4;\n\nexport default class DracoParser {\n  draco: Draco3D;\n  decoder: Decoder;\n  metadataQuerier: MetadataQuerier;\n\n  // draco - the draco decoder, either import `draco3d` or load dynamically\n  constructor(draco: Draco3D) {\n    this.draco = draco;\n    this.decoder = new this.draco.Decoder();\n    this.metadataQuerier = new this.draco.MetadataQuerier();\n  }\n\n  /**\n   * Destroy draco resources\n   */\n  destroy(): void {\n    this.draco.destroy(this.decoder);\n    this.draco.destroy(this.metadataQuerier);\n  }\n\n  /**\n   * NOTE: caller must call `destroyGeometry` on the return value after using it\n   * @param arrayBuffer\n   * @param options\n   */\n  parseSync(arrayBuffer: ArrayBuffer, options: DracoParseOptions = {}): DracoMeshData {\n    const buffer = new this.draco.DecoderBuffer();\n    buffer.Init(new Int8Array(arrayBuffer), arrayBuffer.byteLength);\n\n    this._disableAttributeTransforms(options);\n\n    const geometry_type = this.decoder.GetEncodedGeometryType(buffer);\n    const dracoGeometry =\n      geometry_type === this.draco.TRIANGULAR_MESH\n        ? new this.draco.Mesh()\n        : new this.draco.PointCloud();\n\n    try {\n      let dracoStatus;\n      switch (geometry_type) {\n        case this.draco.TRIANGULAR_MESH:\n          dracoStatus = this.decoder.DecodeBufferToMesh(buffer, dracoGeometry as Mesh);\n          break;\n\n        case this.draco.POINT_CLOUD:\n          dracoStatus = this.decoder.DecodeBufferToPointCloud(buffer, dracoGeometry);\n          break;\n\n        default:\n          throw new Error('DRACO: Unknown geometry type.');\n      }\n\n      if (!dracoStatus.ok() || !dracoGeometry.ptr) {\n        const message = `DRACO decompression failed: ${dracoStatus.error_msg()}`;\n        // console.error(message);\n        throw new Error(message);\n      }\n\n      const loaderData = this._getDracoLoaderData(dracoGeometry, geometry_type, options);\n\n      const geometry = this._getMeshData(dracoGeometry, loaderData, options);\n\n      const boundingBox = getMeshBoundingBox(geometry.attributes);\n\n      const schema = makeSchemaFromAttributes(geometry.attributes, loaderData, geometry.indices);\n\n      const data: DracoMeshData = {\n        loader: 'draco',\n        loaderData,\n        header: {\n          vertexCount: dracoGeometry.num_points(),\n          boundingBox\n        },\n        ...geometry,\n        schema\n      };\n      return data;\n    } finally {\n      this.draco.destroy(buffer);\n      if (dracoGeometry) {\n        this.draco.destroy(dracoGeometry);\n      }\n    }\n  }\n\n  // Draco specific \"loader data\"\n\n  /**\n   * Extract\n   * @param dracoGeometry\n   * @param geometry_type\n   * @param options\n   * @returns\n   */\n  _getDracoLoaderData(\n    dracoGeometry: Mesh | PointCloud,\n    geometry_type,\n    options: DracoParseOptions\n  ): DracoLoaderData {\n    const metadata = this._getTopLevelMetadata(dracoGeometry);\n    const attributes = this._getDracoAttributes(dracoGeometry, options);\n\n    return {\n      geometry_type,\n      num_attributes: dracoGeometry.num_attributes(),\n      num_points: dracoGeometry.num_points(),\n      num_faces: dracoGeometry instanceof this.draco.Mesh ? dracoGeometry.num_faces() : 0,\n      metadata,\n      attributes\n    };\n  }\n\n  /**\n   * Extract all draco provided information and metadata for each attribute\n   * @param dracoGeometry\n   * @param options\n   * @returns\n   */\n  _getDracoAttributes(\n    dracoGeometry: Mesh | PointCloud,\n    options: DracoParseOptions\n  ): {[unique_id: number]: DracoAttribute} {\n    const dracoAttributes: {[unique_id: number]: DracoAttribute} = {};\n\n    for (let attributeId = 0; attributeId < dracoGeometry.num_attributes(); attributeId++) {\n      // Note: Draco docs do not seem clear on `GetAttribute` ids just being a zero-based index,\n      // but it does seems to work this way\n      const dracoAttribute = this.decoder.GetAttribute(dracoGeometry, attributeId);\n\n      const metadata = this._getAttributeMetadata(dracoGeometry, attributeId);\n\n      dracoAttributes[dracoAttribute.unique_id()] = {\n        unique_id: dracoAttribute.unique_id(),\n        attribute_type: dracoAttribute.attribute_type(),\n        data_type: dracoAttribute.data_type(),\n        num_components: dracoAttribute.num_components(),\n\n        byte_offset: dracoAttribute.byte_offset(),\n        byte_stride: dracoAttribute.byte_stride(),\n        normalized: dracoAttribute.normalized(),\n        attribute_index: attributeId,\n\n        metadata\n      };\n\n      // Add transformation parameters for any attributes app wants untransformed\n      const quantization = this._getQuantizationTransform(dracoAttribute, options);\n      if (quantization) {\n        dracoAttributes[dracoAttribute.unique_id()].quantization_transform = quantization;\n      }\n\n      const octahedron = this._getOctahedronTransform(dracoAttribute, options);\n      if (octahedron) {\n        dracoAttributes[dracoAttribute.unique_id()].octahedron_transform = octahedron;\n      }\n    }\n\n    return dracoAttributes;\n  }\n\n  /**\n   * Get standard loaders.gl mesh category data\n   * Extracts the geometry from draco\n   * @param dracoGeometry\n   * @param options\n   */\n  _getMeshData(\n    dracoGeometry: Mesh | PointCloud,\n    loaderData: DracoLoaderData,\n    options: DracoParseOptions\n  ): MeshData {\n    const attributes = this._getMeshAttributes(loaderData, dracoGeometry, options);\n\n    const positionAttribute = attributes.POSITION;\n    if (!positionAttribute) {\n      throw new Error('DRACO: No position attribute found.');\n    }\n\n    // For meshes, we need indices to define the faces.\n    if (dracoGeometry instanceof this.draco.Mesh) {\n      switch (options.topology) {\n        case 'triangle-strip':\n          return {\n            topology: 'triangle-strip',\n            mode: 4, // GL.TRIANGLES\n            attributes,\n            indices: {\n              value: this._getTriangleStripIndices(dracoGeometry),\n              size: 1\n            }\n          };\n        case 'triangle-list':\n        default:\n          return {\n            topology: 'triangle-list',\n            mode: 5, // GL.TRIANGLE_STRIP\n            attributes,\n            indices: {\n              value: this._getTriangleListIndices(dracoGeometry),\n              size: 1\n            }\n          };\n      }\n    }\n\n    // PointCloud - must come last as Mesh inherits from PointCloud\n    return {\n      topology: 'point-list',\n      mode: 0, // GL.POINTS\n      attributes\n    };\n  }\n\n  _getMeshAttributes(\n    loaderData: DracoLoaderData,\n    dracoGeometry: Mesh | PointCloud,\n    options: DracoParseOptions\n  ): {[attributeName: string]: MeshAttribute} {\n    const attributes: {[key: string]: MeshAttribute} = {};\n\n    for (const loaderAttribute of Object.values(loaderData.attributes)) {\n      const attributeName = this._deduceAttributeName(loaderAttribute, options);\n      loaderAttribute.name = attributeName;\n      const {value, size} = this._getAttributeValues(dracoGeometry, loaderAttribute);\n      attributes[attributeName] = {\n        value,\n        size,\n        byteOffset: loaderAttribute.byte_offset,\n        byteStride: loaderAttribute.byte_stride,\n        normalized: loaderAttribute.normalized\n      };\n    }\n\n    return attributes;\n  }\n\n  // MESH INDICES EXTRACTION\n\n  /**\n   * For meshes, we need indices to define the faces.\n   * @param dracoGeometry\n   */\n  _getTriangleListIndices(dracoGeometry: Mesh) {\n    // Example on how to retrieve mesh and attributes.\n    const numFaces = dracoGeometry.num_faces();\n    const numIndices = numFaces * 3;\n    const byteLength = numIndices * INDEX_ITEM_SIZE;\n\n    const ptr = this.draco._malloc(byteLength);\n    try {\n      this.decoder.GetTrianglesUInt32Array(dracoGeometry, byteLength, ptr);\n      return new Uint32Array(this.draco.HEAPF32.buffer, ptr, numIndices).slice();\n    } finally {\n      this.draco._free(ptr);\n    }\n  }\n\n  /**\n   * For meshes, we need indices to define the faces.\n   * @param dracoGeometry\n   */\n  _getTriangleStripIndices(dracoGeometry: Mesh) {\n    const dracoArray = new this.draco.DracoInt32Array();\n    try {\n      /* const numStrips = */ this.decoder.GetTriangleStripsFromMesh(dracoGeometry, dracoArray);\n      return getUint32Array(dracoArray);\n    } finally {\n      this.draco.destroy(dracoArray);\n    }\n  }\n\n  /**\n   *\n   * @param dracoGeometry\n   * @param dracoAttribute\n   * @param attributeName\n   */\n  _getAttributeValues(\n    dracoGeometry: Mesh | PointCloud,\n    attribute: DracoAttribute\n  ): {value: TypedArray; size: number} {\n    const TypedArrayCtor = DRACO_DATA_TYPE_TO_TYPED_ARRAY_MAP[attribute.data_type];\n    const numComponents = attribute.num_components;\n    const numPoints = dracoGeometry.num_points();\n    const numValues = numPoints * numComponents;\n\n    const byteLength = numValues * TypedArrayCtor.BYTES_PER_ELEMENT;\n    const dataType = getDracoDataType(this.draco, TypedArrayCtor);\n\n    let value: TypedArray;\n\n    const ptr = this.draco._malloc(byteLength);\n    try {\n      const dracoAttribute = this.decoder.GetAttribute(dracoGeometry, attribute.attribute_index);\n      this.decoder.GetAttributeDataArrayForAllPoints(\n        dracoGeometry,\n        dracoAttribute,\n        dataType,\n        byteLength,\n        ptr\n      );\n      value = new TypedArrayCtor(this.draco.HEAPF32.buffer, ptr, numValues).slice();\n    } finally {\n      this.draco._free(ptr);\n    }\n\n    return {value, size: numComponents};\n  }\n\n  // Attribute names\n\n  /** \n   * DRACO does not store attribute names - We need to deduce an attribute name\n   * for each attribute\n  _getAttributeNames(\n    dracoGeometry: Mesh | PointCloud,\n    options: DracoParseOptions\n  ): {[unique_id: number]: string} {\n    const attributeNames: {[unique_id: number]: string} = {};\n    for (let attributeId = 0; attributeId < dracoGeometry.num_attributes(); attributeId++) {\n      const dracoAttribute = this.decoder.GetAttribute(dracoGeometry, attributeId);\n      const attributeName = this._deduceAttributeName(dracoAttribute, options);\n      attributeNames[attributeName] = attributeName;\n    }\n    return attributeNames;\n  }\n   */\n\n  /**\n   * Deduce an attribute name.\n   * @note DRACO does not save attribute names, just general type (POSITION, COLOR)\n   * to help optimize compression. We generate GLTF compatible names for the Draco-recognized\n   * types\n   * @param attributeData\n   */\n  _deduceAttributeName(attribute: DracoAttribute, options: DracoParseOptions): string {\n    // Deduce name based on application provided map\n    const uniqueId = attribute.unique_id;\n    for (const [attributeName, attributeUniqueId] of Object.entries(\n      options.extraAttributes || {}\n    )) {\n      if (attributeUniqueId === uniqueId) {\n        return attributeName;\n      }\n    }\n\n    // Deduce name based on attribute type\n    const thisAttributeType = attribute.attribute_type;\n    for (const dracoAttributeConstant in DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP) {\n      const attributeType = this.draco[dracoAttributeConstant];\n      if (attributeType === thisAttributeType) {\n        // TODO - Return unique names if there multiple attributes per type\n        // (e.g. multiple TEX_COORDS or COLORS)\n        return DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP[dracoAttributeConstant];\n      }\n    }\n\n    // Look up in metadata\n    // TODO - shouldn't this have priority?\n    const entryName = options.attributeNameEntry || 'name';\n    if (attribute.metadata[entryName]) {\n      return attribute.metadata[entryName].string;\n    }\n\n    // Attribute of \"GENERIC\" type, we need to assign some name\n    return `CUSTOM_ATTRIBUTE_${uniqueId}`;\n  }\n\n  // METADATA EXTRACTION\n\n  /** Get top level metadata */\n  _getTopLevelMetadata(dracoGeometry: Mesh | PointCloud) {\n    const dracoMetadata = this.decoder.GetMetadata(dracoGeometry);\n    return this._getDracoMetadata(dracoMetadata);\n  }\n\n  /** Get per attribute metadata */\n  _getAttributeMetadata(dracoGeometry: Mesh | PointCloud, attributeId: number) {\n    const dracoMetadata = this.decoder.GetAttributeMetadata(dracoGeometry, attributeId);\n    return this._getDracoMetadata(dracoMetadata);\n  }\n\n  /**\n   * Extract metadata field values\n   * @param dracoMetadata\n   * @returns\n   */\n  _getDracoMetadata(dracoMetadata: Metadata): {[entry: string]: DracoMetadataEntry} {\n    // The not so wonderful world of undocumented Draco APIs :(\n    if (!dracoMetadata || !dracoMetadata.ptr) {\n      return {};\n    }\n    const result = {};\n    const numEntries = this.metadataQuerier.NumEntries(dracoMetadata);\n    for (let entryIndex = 0; entryIndex < numEntries; entryIndex++) {\n      const entryName = this.metadataQuerier.GetEntryName(dracoMetadata, entryIndex);\n      result[entryName] = this._getDracoMetadataField(dracoMetadata, entryName);\n    }\n    return result;\n  }\n\n  /**\n   * Extracts possible values for one metadata entry by name\n   * @param dracoMetadata\n   * @param entryName\n   */\n  _getDracoMetadataField(dracoMetadata: Metadata, entryName: string): DracoMetadataEntry {\n    const dracoArray = new this.draco.DracoInt32Array();\n    try {\n      // Draco metadata fields can hold int32 arrays\n      this.metadataQuerier.GetIntEntryArray(dracoMetadata, entryName, dracoArray);\n      const intArray = getInt32Array(dracoArray);\n      return {\n        int: this.metadataQuerier.GetIntEntry(dracoMetadata, entryName),\n        string: this.metadataQuerier.GetStringEntry(dracoMetadata, entryName),\n        double: this.metadataQuerier.GetDoubleEntry(dracoMetadata, entryName),\n        intArray\n      };\n    } finally {\n      this.draco.destroy(dracoArray);\n    }\n  }\n\n  // QUANTIZED ATTRIBUTE SUPPORT (NO DECOMPRESSION)\n\n  /** Skip transforms for specific attribute types */\n  _disableAttributeTransforms(options: DracoParseOptions) {\n    const {quantizedAttributes = [], octahedronAttributes = []} = options;\n    const skipAttributes = [...quantizedAttributes, ...octahedronAttributes];\n    for (const dracoAttributeName of skipAttributes) {\n      this.decoder.SkipAttributeTransform(this.draco[dracoAttributeName]);\n    }\n  }\n\n  /**\n   * Extract (and apply?) Position Transform\n   * @todo not used\n   */\n  _getQuantizationTransform(\n    dracoAttribute: PointAttribute,\n    options: DracoParseOptions\n  ): DracoQuantizationTransform | null {\n    const {quantizedAttributes = []} = options;\n    const attribute_type = dracoAttribute.attribute_type();\n    const skip = quantizedAttributes.map((type) => this.decoder[type]).includes(attribute_type);\n    if (skip) {\n      const transform = new this.draco.AttributeQuantizationTransform();\n      try {\n        if (transform.InitFromAttribute(dracoAttribute)) {\n          return {\n            quantization_bits: transform.quantization_bits(),\n            range: transform.range(),\n            min_values: new Float32Array([1, 2, 3]).map((i) => transform.min_value(i))\n          };\n        }\n      } finally {\n        this.draco.destroy(transform);\n      }\n    }\n    return null;\n  }\n\n  _getOctahedronTransform(\n    dracoAttribute: PointAttribute,\n    options: DracoParseOptions\n  ): DracoOctahedronTransform | null {\n    const {octahedronAttributes = []} = options;\n    const attribute_type = dracoAttribute.attribute_type();\n    const octahedron = octahedronAttributes\n      .map((type) => this.decoder[type])\n      .includes(attribute_type);\n    if (octahedron) {\n      const transform = new this.draco.AttributeQuantizationTransform();\n      try {\n        if (transform.InitFromAttribute(dracoAttribute)) {\n          return {\n            quantization_bits: transform.quantization_bits()\n          };\n        }\n      } finally {\n        this.draco.destroy(transform);\n      }\n    }\n    return null;\n  }\n\n  // HELPERS\n}\n\n/**\n * Get draco specific data type by TypedArray constructor type\n * @param attributeType\n * @returns draco specific data type\n */\nfunction getDracoDataType(draco: Draco3D, attributeType: any): draco_DataType {\n  switch (attributeType) {\n    case Float32Array:\n      return draco.DT_FLOAT32;\n    case Int8Array:\n      return draco.DT_INT8;\n    case Int16Array:\n      return draco.DT_INT16;\n    case Int32Array:\n      return draco.DT_INT32;\n    case Uint8Array:\n      return draco.DT_UINT8;\n    case Uint16Array:\n      return draco.DT_UINT16;\n    case Uint32Array:\n      return draco.DT_UINT32;\n    default:\n      return draco.DT_INVALID;\n  }\n}\n\n/**\n * Copy a Draco int32 array into a JS typed array\n */\nfunction getInt32Array(dracoArray: DracoInt32Array): Int32Array {\n  const numValues = dracoArray.size();\n  const intArray = new Int32Array(numValues);\n  for (let i = 0; i < numValues; i++) {\n    intArray[i] = dracoArray.GetValue(i);\n  }\n  return intArray;\n}\n\n/**\n * Copy a Draco int32 array into a JS typed array\n */\nfunction getUint32Array(dracoArray: DracoInt32Array): Int32Array {\n  const numValues = dracoArray.size();\n  const intArray = new Int32Array(numValues);\n  for (let i = 0; i < numValues; i++) {\n    intArray[i] = dracoArray.GetValue(i);\n  }\n  return intArray;\n}\n","// Mesh category utilities\n// TODO - move to mesh category module, or to math.gl/geometry module\nimport {TypedArray} from '../../types';\n\ntype Attribute = {\n  size?: number;\n  type?: number;\n  normalized?: boolean;\n  value: TypedArray;\n};\n\ntype TypedArrays = {[key: string]: TypedArray};\nexport type Attributes = {[key: string]: Attribute};\n\n/**\n * Holds an axis aligned bounding box\n * TODO - make sure AxisAlignedBoundingBox in math.gl/culling understands this format (or change this format)\n */\ntype BoundingBox = [[number, number, number], [number, number, number]];\n\n/**\n * Get number of vertices in mesh\n * @param attributes\n */\nexport function getMeshSize(attributes: TypedArrays): number {\n  let size = 0;\n  for (const attributeName in attributes) {\n    const attribute = attributes[attributeName];\n    if (ArrayBuffer.isView(attribute)) {\n      // @ts-ignore DataView doesn't have BYTES_PER_ELEMENT\n      size += attribute.byteLength * attribute.BYTES_PER_ELEMENT;\n    }\n  }\n  return size;\n}\n\n/**\n * Get the (axis aligned) bounding box of a mesh\n * @param attributes\n * @returns array of two vectors representing the axis aligned bounding box\n */\n// eslint-disable-next-line complexity\nexport function getMeshBoundingBox(attributes: Attributes): BoundingBox {\n  let minX = Infinity;\n  let minY = Infinity;\n  let minZ = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let maxZ = -Infinity;\n\n  const positions = attributes.POSITION ? attributes.POSITION.value : [];\n  const len = positions && positions.length;\n\n  for (let i = 0; i < len; i += 3) {\n    const x = positions[i];\n    const y = positions[i + 1];\n    const z = positions[i + 2];\n\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    minZ = z < minZ ? z : minZ;\n\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n    maxZ = z > maxZ ? z : maxZ;\n  }\n  return [\n    [minX, minY, minZ],\n    [maxX, maxY, maxZ]\n  ];\n}\n","/* global importScripts */\nimport {global, isBrowser, isWorker} from '../env-utils/globals';\nimport * as node from '../node/require-utils.node';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\n// TODO - unpkg.com doesn't seem to have a `latest` specifier for alpha releases...\nconst LATEST = 'beta';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : LATEST;\n\nconst loadLibraryPromises = {}; // promises\n\n/**\n * Dynamically loads a library (\"module\")\n *\n * - wasm library: Array buffer is returned\n * - js library: Parse JS is returned\n *\n * Method depends on environment\n * - browser - script element is created and installed on document\n * - worker - eval is called on global context\n * - node - file is required\n *\n * @param libraryUrl\n * @param moduleName\n * @param options\n */\nexport async function loadLibrary(\n  libraryUrl: string,\n  moduleName: string | null = null,\n  options: object = {}\n): Promise<any> {\n  if (moduleName) {\n    libraryUrl = getLibraryUrl(libraryUrl, moduleName, options);\n  }\n\n  // Ensure libraries are only loaded once\n  loadLibraryPromises[libraryUrl] =\n    loadLibraryPromises[libraryUrl] || loadLibraryFromFile(libraryUrl);\n  return await loadLibraryPromises[libraryUrl];\n}\n\n// TODO - sort out how to resolve paths for main/worker and dev/prod\nexport function getLibraryUrl(library, moduleName?: string, options?): string {\n  // Check if already a URL\n  if (library.startsWith('http')) {\n    return library;\n  }\n\n  // Allow application to import and supply libraries through `options.modules`\n  const modules = options.modules || {};\n  if (modules[library]) {\n    return modules[library];\n  }\n\n  // Load from local files, not from CDN scripts in Node.js\n  // TODO - needs to locate the modules directory when installed!\n  if (!isBrowser) {\n    return `modules/${moduleName}/dist/libs/${library}`;\n  }\n\n  // In browser, load from external scripts\n  if (options.CDN) {\n    assert(options.CDN.startsWith('http'));\n    return `${options.CDN}/${moduleName}@${VERSION}/dist/libs/${library}`;\n  }\n\n  // TODO - loading inside workers requires paths relative to worker script location...\n  if (isWorker) {\n    return `../src/libs/${library}`;\n  }\n\n  return `modules/${moduleName}/src/libs/${library}`;\n}\n\nasync function loadLibraryFromFile(libraryUrl) {\n  if (libraryUrl.endsWith('wasm')) {\n    const response = await fetch(libraryUrl);\n    return await response.arrayBuffer();\n  }\n\n  if (!isBrowser) {\n    return node.requireFromFile && (await node.requireFromFile(libraryUrl));\n  }\n  if (isWorker) {\n    return importScripts(libraryUrl);\n  }\n  // TODO - fix - should be more secure than string parsing since observes CORS\n  // if (isBrowser) {\n  //   return await loadScriptFromFile(libraryUrl);\n  // }\n\n  const response = await fetch(libraryUrl);\n  const scriptSource = await response.text();\n  return loadLibraryFromString(scriptSource, libraryUrl);\n}\n\n/*\nasync function loadScriptFromFile(libraryUrl) {\n  const script = document.createElement('script');\n  script.src = libraryUrl;\n  return await new Promise((resolve, reject) => {\n    script.onload = data => {\n      resolve(data);\n    };\n    script.onerror = reject;\n  });\n}\n*/\n\n// TODO - Needs security audit...\n//  - Raw eval call\n//  - Potentially bypasses CORS\n// Upside is that this separates fetching and parsing\n// we could create a`LibraryLoader` or`ModuleLoader`\nfunction loadLibraryFromString(scriptSource, id) {\n  if (!isBrowser) {\n    return node.requireFromString && node.requireFromString(scriptSource, id);\n  }\n\n  if (isWorker) {\n    // Use lvalue trick to make eval run in global scope\n    eval.call(global, scriptSource); // eslint-disable-line no-eval\n    // https://stackoverflow.com/questions/9107240/1-evalthis-vs-evalthis-in-javascript\n    // http://perfectionkills.com/global-eval-what-are-the-options/\n    return null;\n  }\n\n  const script = document.createElement('script');\n  script.id = id;\n  // most browsers like a separate text node but some throw an error. The second method covers those.\n  try {\n    script.appendChild(document.createTextNode(scriptSource));\n  } catch (e) {\n    script.text = scriptSource;\n  }\n  document.body.appendChild(script);\n  return null;\n}\n\n// TODO - technique for module injection into worker, from THREE.DracoLoader...\n/*\nfunction combineWorkerWithLibrary(worker, jsContent) {\n  var fn = wWorker.toString();\n  var body = [\n    '// injected',\n    jsContent,\n    '',\n    '// worker',\n    fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))\n  ].join('\\n');\n  this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n}\n*/\n","// Dynamic DRACO module loading inspired by THREE.DRACOLoader\n// https://github.com/mrdoob/three.js/blob/398c4f39ebdb8b23eefd4a7a5ec49ec0c96c7462/examples/jsm/loaders/DRACOLoader.js\n// by Don McCurdy / https://www.donmccurdy.com / MIT license\n\nimport {loadLibrary} from '@loaders.gl/worker-utils';\n\nconst DRACO_VERSION = '1.4.1';\nconst DRACO_JS_DECODER_URL = `https://www.gstatic.com/draco/versioned/decoders/${DRACO_VERSION}/draco_decoder.js`;\nconst DRACO_WASM_WRAPPER_URL = `https://www.gstatic.com/draco/versioned/decoders/${DRACO_VERSION}/draco_wasm_wrapper.js`;\nconst DRACO_WASM_DECODER_URL = `https://www.gstatic.com/draco/versioned/decoders/${DRACO_VERSION}/draco_decoder.wasm`;\n\nconst DRACO_ENCODER_URL = `https://raw.githubusercontent.com/google/draco/${DRACO_VERSION}/javascript/draco_encoder.js`;\n\nlet loadDecoderPromise;\nlet loadEncoderPromise;\n\nexport async function loadDracoDecoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    loadDecoderPromise =\n      loadDecoderPromise ||\n      modules.draco3d.createDecoderModule({}).then((draco) => {\n        return {draco};\n      });\n  } else {\n    // If not, dynamically load the WASM script from our CDN\n    loadDecoderPromise = loadDecoderPromise || loadDracoDecoder(options);\n  }\n  return await loadDecoderPromise;\n}\n\nexport async function loadDracoEncoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    loadEncoderPromise =\n      loadEncoderPromise ||\n      modules.draco3d.createEncoderModule({}).then((draco) => {\n        return {draco};\n      });\n  } else {\n    // If not, dynamically load the WASM script from our CDN\n    loadEncoderPromise = loadEncoderPromise || loadDracoEncoder(options);\n  }\n  return await loadEncoderPromise;\n}\n\n// DRACO DECODER LOADING\n\nasync function loadDracoDecoder(options) {\n  let DracoDecoderModule;\n  let wasmBinary;\n  switch (options.draco && options.draco.decoderType) {\n    case 'js':\n      DracoDecoderModule = await loadLibrary(DRACO_JS_DECODER_URL, 'draco', options);\n      break;\n\n    case 'wasm':\n    default:\n      [DracoDecoderModule, wasmBinary] = await Promise.all([\n        await loadLibrary(DRACO_WASM_WRAPPER_URL, 'draco', options),\n        await loadLibrary(DRACO_WASM_DECODER_URL, 'draco', options)\n      ]);\n  }\n  // Depends on how import happened...\n  // @ts-ignore\n  DracoDecoderModule = DracoDecoderModule || globalThis.DracoDecoderModule;\n  return await initializeDracoDecoder(DracoDecoderModule, wasmBinary);\n}\n\nfunction initializeDracoDecoder(DracoDecoderModule, wasmBinary) {\n  const options: {wasmBinary?: any} = {};\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    DracoDecoderModule({\n      ...options,\n      onModuleLoaded: (draco) => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n\n// ENCODER\n\nasync function loadDracoEncoder(options) {\n  let DracoEncoderModule = await loadLibrary(DRACO_ENCODER_URL, 'draco', options);\n  // @ts-ignore\n  DracoEncoderModule = DracoEncoderModule || globalThis.DracoEncoderModule;\n\n  return new Promise((resolve) => {\n    DracoEncoderModule({\n      onModuleLoaded: (draco) => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {DracoMeshData, DracoLoaderData} from './lib/draco-types';\nimport type {DracoLoaderOptions} from './draco-loader';\nimport {DracoLoader as DracoWorkerLoader} from './draco-loader';\nimport DracoParser from './lib/draco-parser';\nimport {loadDracoDecoderModule} from './lib/draco-module-loader';\n\n// Draco data types\n\nexport type {DracoMeshData, DracoLoaderData};\n\n// Draco Writer\n\nexport type {DracoWriterOptions} from './draco-writer';\nexport {DracoWriter} from './draco-writer';\n\n// Draco Loader\n\nexport type {DracoLoaderOptions};\nexport {DracoWorkerLoader};\n\n/**\n * Loader for Draco3D compressed geometries\n */\nexport const DracoLoader = {\n  ...DracoWorkerLoader,\n  parse\n};\n\nasync function parse(\n  arrayBuffer: ArrayBuffer,\n  options?: DracoLoaderOptions\n): Promise<DracoMeshData> {\n  const {draco} = await loadDracoDecoderModule(options);\n  const dracoParser = new DracoParser(draco);\n  try {\n    return dracoParser.parseSync(arrayBuffer, options?.draco);\n  } finally {\n    dracoParser.destroy();\n  }\n}\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckDracoLoader: LoaderWithParser = DracoLoader;\n","const t=new Uint8Array([0]),e=[171,75,84,88,32,50,48,187,13,10,26,10];var n,i,s,a,r,o,l,f;!function(t){t[t.NONE=0]=\"NONE\",t[t.BASISLZ=1]=\"BASISLZ\",t[t.ZSTD=2]=\"ZSTD\",t[t.ZLIB=3]=\"ZLIB\"}(n||(n={})),function(t){t[t.BASICFORMAT=0]=\"BASICFORMAT\"}(i||(i={})),function(t){t[t.UNSPECIFIED=0]=\"UNSPECIFIED\",t[t.ETC1S=163]=\"ETC1S\",t[t.UASTC=166]=\"UASTC\"}(s||(s={})),function(t){t[t.UNSPECIFIED=0]=\"UNSPECIFIED\",t[t.SRGB=1]=\"SRGB\"}(a||(a={})),function(t){t[t.UNSPECIFIED=0]=\"UNSPECIFIED\",t[t.LINEAR=1]=\"LINEAR\",t[t.SRGB=2]=\"SRGB\",t[t.ITU=3]=\"ITU\",t[t.NTSC=4]=\"NTSC\",t[t.SLOG=5]=\"SLOG\",t[t.SLOG2=6]=\"SLOG2\"}(r||(r={})),function(t){t[t.ALPHA_STRAIGHT=0]=\"ALPHA_STRAIGHT\",t[t.ALPHA_PREMULTIPLIED=1]=\"ALPHA_PREMULTIPLIED\"}(o||(o={})),function(t){t[t.RGB=0]=\"RGB\",t[t.RRR=3]=\"RRR\",t[t.GGG=4]=\"GGG\",t[t.AAA=15]=\"AAA\"}(l||(l={})),function(t){t[t.RGB=0]=\"RGB\",t[t.RGBA=3]=\"RGBA\",t[t.RRR=4]=\"RRR\",t[t.RRRG=5]=\"RRRG\"}(f||(f={}));class U{constructor(){this.vkFormat=0,this.typeSize=1,this.pixelWidth=0,this.pixelHeight=0,this.pixelDepth=0,this.layerCount=0,this.faceCount=1,this.supercompressionScheme=n.NONE,this.levels=[],this.dataFormatDescriptor=[{vendorId:0,descriptorType:i.BASICFORMAT,versionNumber:2,descriptorBlockSize:40,colorModel:s.UNSPECIFIED,colorPrimaries:a.SRGB,transferFunction:a.SRGB,flags:o.ALPHA_STRAIGHT,texelBlockDimension:{x:4,y:4,z:1,w:1},bytesPlane:[],samples:[]}],this.keyValue={},this.globalData=null}}class c{constructor(t,e,n,i){this._dataView=new DataView(t.buffer,t.byteOffset+e,n),this._littleEndian=i,this._offset=0}_nextUint8(){const t=this._dataView.getUint8(this._offset);return this._offset+=1,t}_nextUint16(){const t=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,t}_nextUint32(){const t=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint64(){const t=this._dataView.getUint32(this._offset,this._littleEndian)+2**32*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,t}_skip(t){return this._offset+=t,this}_scan(t,e=0){const n=this._offset;let i=0;for(;this._dataView.getUint8(this._offset)!==e&&i<t;)i++,this._offset++;return i<t&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+n,i)}}function h(t){return\"undefined\"!=typeof TextEncoder?(new TextEncoder).encode(t):Buffer.from(t)}function _(t){return\"undefined\"!=typeof TextDecoder?(new TextDecoder).decode(t):Buffer.from(t).toString(\"utf8\")}function g(t){let e=0;for(const n of t)e+=n.byteLength;const n=new Uint8Array(e);let i=0;for(const e of t)n.set(new Uint8Array(e),i),i+=e.byteLength;return n}function p(t){const n=new Uint8Array(t.buffer,t.byteOffset,e.length);if(n[0]!==e[0]||n[1]!==e[1]||n[2]!==e[2]||n[3]!==e[3]||n[4]!==e[4]||n[5]!==e[5]||n[6]!==e[6]||n[7]!==e[7]||n[8]!==e[8]||n[9]!==e[9]||n[10]!==e[10]||n[11]!==e[11])throw new Error(\"Missing KTX 2.0 identifier.\");const i=new U,s=17*Uint32Array.BYTES_PER_ELEMENT,a=new c(t,e.length,s,!0);i.vkFormat=a._nextUint32(),i.typeSize=a._nextUint32(),i.pixelWidth=a._nextUint32(),i.pixelHeight=a._nextUint32(),i.pixelDepth=a._nextUint32(),i.layerCount=a._nextUint32(),i.faceCount=a._nextUint32();const r=a._nextUint32();i.supercompressionScheme=a._nextUint32();const o=a._nextUint32(),l=a._nextUint32(),f=a._nextUint32(),h=a._nextUint32(),g=a._nextUint64(),p=a._nextUint64(),x=new c(t,e.length+s,3*r*8,!0);for(let e=0;e<r;e++)i.levels.push({levelData:new Uint8Array(t.buffer,t.byteOffset+x._nextUint64(),x._nextUint64()),uncompressedByteLength:x._nextUint64()});const u=new c(t,o,l,!0),y={vendorId:u._skip(4)._nextUint16(),descriptorType:u._nextUint16(),versionNumber:u._nextUint16(),descriptorBlockSize:u._nextUint16(),colorModel:u._nextUint8(),colorPrimaries:u._nextUint8(),transferFunction:u._nextUint8(),flags:u._nextUint8(),texelBlockDimension:{x:u._nextUint8()+1,y:u._nextUint8()+1,z:u._nextUint8()+1,w:u._nextUint8()+1},bytesPlane:[u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8()],samples:[]},D=(y.descriptorBlockSize/4-6)/4;for(let t=0;t<D;t++)y.samples[t]={bitOffset:u._nextUint16(),bitLength:u._nextUint8(),channelID:u._nextUint8(),samplePosition:[u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8()],sampleLower:u._nextUint32(),sampleUpper:u._nextUint32()};i.dataFormatDescriptor.length=0,i.dataFormatDescriptor.push(y);const b=new c(t,f,h,!0);for(;b._offset<h;){const t=b._nextUint32(),e=b._scan(t),n=_(e),s=b._scan(t-e.byteLength);i.keyValue[n]=n.match(/^ktx/i)?_(s):s,t%4&&b._skip(4-t%4)}if(p<=0)return i;const d=new c(t,g,p,!0),B=d._nextUint16(),w=d._nextUint16(),A=d._nextUint32(),S=d._nextUint32(),m=d._nextUint32(),L=d._nextUint32(),I=[];for(let t=0;t<r;t++)I.push({imageFlags:d._nextUint32(),rgbSliceByteOffset:d._nextUint32(),rgbSliceByteLength:d._nextUint32(),alphaSliceByteOffset:d._nextUint32(),alphaSliceByteLength:d._nextUint32()});const R=g+d._offset,E=R+A,T=E+S,O=T+m,P=new Uint8Array(t.buffer,t.byteOffset+R,A),C=new Uint8Array(t.buffer,t.byteOffset+E,S),F=new Uint8Array(t.buffer,t.byteOffset+T,m),G=new Uint8Array(t.buffer,t.byteOffset+O,L);return i.globalData={endpointCount:B,selectorCount:w,imageDescs:I,endpointsData:P,selectorsData:C,tablesData:F,extendedData:G},i}function x(){return(x=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}const u={keepWriter:!1};function y(n,s={}){s=x({},u,s);let a=new ArrayBuffer(0);if(n.globalData){const t=new ArrayBuffer(20+5*n.globalData.imageDescs.length*4),e=new DataView(t);e.setUint16(0,n.globalData.endpointCount,!0),e.setUint16(2,n.globalData.selectorCount,!0),e.setUint32(4,n.globalData.endpointsData.byteLength,!0),e.setUint32(8,n.globalData.selectorsData.byteLength,!0),e.setUint32(12,n.globalData.tablesData.byteLength,!0),e.setUint32(16,n.globalData.extendedData.byteLength,!0);for(let t=0;t<n.globalData.imageDescs.length;t++){const i=n.globalData.imageDescs[t];e.setUint32(20+5*t*4+0,i.imageFlags,!0),e.setUint32(20+5*t*4+4,i.rgbSliceByteOffset,!0),e.setUint32(20+5*t*4+8,i.rgbSliceByteLength,!0),e.setUint32(20+5*t*4+12,i.alphaSliceByteOffset,!0),e.setUint32(20+5*t*4+16,i.alphaSliceByteLength,!0)}a=g([t,n.globalData.endpointsData,n.globalData.selectorsData,n.globalData.tablesData,n.globalData.extendedData])}const r=[];let o=n.keyValue;s.keepWriter||(o=x({},n.keyValue,{KTXwriter:\"KTX-Parse v0.0.4\"}));for(const e in o){const n=o[e],i=h(e),s=\"string\"==typeof n?h(n):n,a=i.byteLength+1+s.byteLength+1,l=a%4?4-a%4:0;r.push(g([new Uint32Array([a]),i,t,s,t,new Uint8Array(l).fill(0)]))}const l=g(r),f=new ArrayBuffer(44),U=new DataView(f);if(1!==n.dataFormatDescriptor.length||n.dataFormatDescriptor[0].descriptorType!==i.BASICFORMAT)throw new Error(\"Only BASICFORMAT Data Format Descriptor output supported.\");const c=n.dataFormatDescriptor[0];U.setUint32(0,44,!0),U.setUint16(4,c.vendorId,!0),U.setUint16(6,c.descriptorType,!0),U.setUint16(8,c.versionNumber,!0),U.setUint16(10,c.descriptorBlockSize,!0),U.setUint8(12,c.colorModel),U.setUint8(13,c.colorPrimaries),U.setUint8(14,c.transferFunction),U.setUint8(15,c.flags),U.setUint8(16,c.texelBlockDimension.x-1),U.setUint8(17,c.texelBlockDimension.y-1),U.setUint8(18,c.texelBlockDimension.z-1),U.setUint8(19,c.texelBlockDimension.w-1);for(let t=0;t<8;t++)U.setUint8(20+t,c.bytesPlane[t]);for(let t=0;t<c.samples.length;t++){const e=c.samples[t],n=28+16*t;U.setUint16(n+0,e.bitOffset,!0),U.setUint8(n+2,e.bitLength),U.setUint8(n+3,e.channelID),U.setUint8(n+4,e.samplePosition[0]),U.setUint8(n+5,e.samplePosition[1]),U.setUint8(n+6,e.samplePosition[2]),U.setUint8(n+7,e.samplePosition[3]),U.setUint32(n+8,e.sampleLower,!0),U.setUint32(n+12,e.sampleUpper,!0)}const _=e.length+68+3*n.levels.length*8,p=_+f.byteLength;let y=p+l.byteLength;y%8&&(y+=8-y%8);const D=[],b=new DataView(new ArrayBuffer(3*n.levels.length*8));let d=y+a.byteLength;for(let t=0;t<n.levels.length;t++){const e=n.levels[t];D.push(e.levelData),b.setBigUint64(24*t+0,BigInt(d),!0),b.setBigUint64(24*t+8,BigInt(e.levelData.byteLength),!0),b.setBigUint64(24*t+16,BigInt(e.uncompressedByteLength),!0),d+=e.levelData.byteLength}const B=new ArrayBuffer(68),w=new DataView(B);return w.setUint32(0,n.vkFormat,!0),w.setUint32(4,n.typeSize,!0),w.setUint32(8,n.pixelWidth,!0),w.setUint32(12,n.pixelHeight,!0),w.setUint32(16,n.pixelDepth,!0),w.setUint32(20,n.layerCount,!0),w.setUint32(24,n.faceCount,!0),w.setUint32(28,n.levels.length,!0),w.setUint32(32,n.supercompressionScheme,!0),w.setUint32(36,_,!0),w.setUint32(40,f.byteLength,!0),w.setUint32(44,p,!0),w.setUint32(48,l.byteLength,!0),w.setBigUint64(52,BigInt(y),!0),w.setBigUint64(60,BigInt(a.byteLength),!0),new Uint8Array(g([new Uint8Array(e).buffer,B,b.buffer,f,l,new ArrayBuffer(y-(p+l.byteLength)),a,...D]))}export{U as KTX2Container,p as read,y as write};\n//# sourceMappingURL=ktx-parse.modern.js.map\n","import {CompressedTextureExtractOptions, TextureLevel} from '../../types';\n\n/**\n * Extract mipmap images from compressed texture buffer\n * @param data - binary data of compressed texture or Array of level objects\n * @param options.mipMapLevels - number of mipmap level inside image\n * @param options.width - width of 0 - level\n * @param options.height - height of 0 - level\n * @param options.sizeFunction - format-related function to calculate level size in bytes\n * @param options.internalFormat - WebGL compatible format code\n * @returns Array of the texture levels\n */\nexport function extractMipmapImages(\n  data: Uint8Array | Array<Object>,\n  options: CompressedTextureExtractOptions\n): TextureLevel[] {\n  const images = new Array(options.mipMapLevels);\n\n  let levelWidth = options.width;\n  let levelHeight = options.height;\n  let offset = 0;\n\n  for (let i = 0; i < options.mipMapLevels; ++i) {\n    const levelSize = getLevelSize(options, levelWidth, levelHeight, data, i);\n    const levelData = getLevelData(data, i, offset, levelSize);\n\n    images[i] = {\n      compressed: true,\n      format: options.internalFormat,\n      data: levelData,\n      width: levelWidth,\n      height: levelHeight,\n      levelSize\n    };\n\n    levelWidth = Math.max(1, levelWidth >> 1);\n    levelHeight = Math.max(1, levelHeight >> 1);\n\n    offset += levelSize;\n  }\n  return images;\n}\n\nfunction getLevelData(data, index, offset, levelSize) {\n  if (!Array.isArray(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset + offset, levelSize);\n  }\n\n  return data[index].levelData;\n}\n\nfunction getLevelSize(options, levelWidth, levelHeight, data, index) {\n  if (!Array.isArray(data)) {\n    return options.sizeFunction(levelWidth, levelHeight);\n  }\n  return options.sizeFunction(data[index]);\n}\n","/* eslint-disable camelcase */\nexport const GL = {\n  // WEBGL_compressed_texture_s3tc\n\n  COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83f0,\n  COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83f1,\n  COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83f2,\n  COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83f3,\n\n  // WEBGL_compressed_texture_es3\n\n  COMPRESSED_R11_EAC: 0x9270,\n  COMPRESSED_SIGNED_R11_EAC: 0x9271,\n  COMPRESSED_RG11_EAC: 0x9272,\n  COMPRESSED_SIGNED_RG11_EAC: 0x9273,\n  COMPRESSED_RGB8_ETC2: 0x9274,\n  COMPRESSED_RGBA8_ETC2_EAC: 0x9275,\n  COMPRESSED_SRGB8_ETC2: 0x9276,\n  COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9277,\n  COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9278,\n  COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9279,\n\n  // WEBGL_compressed_texture_pvrtc\n\n  COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8c00,\n  COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8c02,\n  COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8c01,\n  COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8c03,\n\n  // WEBGL_compressed_texture_etc1\n\n  COMPRESSED_RGB_ETC1_WEBGL: 0x8d64,\n\n  // WEBGL_compressed_texture_atc\n\n  COMPRESSED_RGB_ATC_WEBGL: 0x8c92,\n  COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL: 0x8c93,\n  COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL: 0x87ee,\n\n  // WEBGL_compressed_texture_astc\n\n  COMPRESSED_RGBA_ASTC_4X4_KHR: 0x93b0,\n  COMPRESSED_RGBA_ASTC_5X4_KHR: 0x93b1,\n  COMPRESSED_RGBA_ASTC_5X5_KHR: 0x93b2,\n  COMPRESSED_RGBA_ASTC_6X5_KHR: 0x93b3,\n  COMPRESSED_RGBA_ASTC_6X6_KHR: 0x93b4,\n  COMPRESSED_RGBA_ASTC_8X5_KHR: 0x93b5,\n  COMPRESSED_RGBA_ASTC_8X6_KHR: 0x93b6,\n  COMPRESSED_RGBA_ASTC_8X8_KHR: 0x93b7,\n  COMPRESSED_RGBA_ASTC_10X5_KHR: 0x93b8,\n  COMPRESSED_RGBA_ASTC_10X6_KHR: 0x93b9,\n  COMPRESSED_RGBA_ASTC_10X8_KHR: 0x93ba,\n  COMPRESSED_RGBA_ASTC_10X10_KHR: 0x93bb,\n  COMPRESSED_RGBA_ASTC_12X10_KHR: 0x93bc,\n  COMPRESSED_RGBA_ASTC_12X12_KHR: 0x93bd,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR: 0x93d0,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR: 0x93d1,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR: 0x93d2,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR: 0x93d3,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR: 0x93d4,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR: 0x93d5,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR: 0x93d6,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR: 0x93d7,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR: 0x93d8,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR: 0x93d9,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR: 0x93da,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR: 0x93db,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR: 0x93dc,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR: 0x93dd,\n\n  // EXT_texture_compression_rgtc\n\n  COMPRESSED_RED_RGTC1_EXT: 0x8dbb,\n  COMPRESSED_SIGNED_RED_RGTC1_EXT: 0x8dbc,\n  COMPRESSED_RED_GREEN_RGTC2_EXT: 0x8dbd,\n  COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: 0x8dbe,\n\n  // WEBGL_compressed_texture_s3tc_srgb\n\n  COMPRESSED_SRGB_S3TC_DXT1_EXT: 0x8c4c,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: 0x8c4d,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: 0x8c4e,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: 0x8c4f\n};\n","import {GL} from '../gl-constants';\n\nconst VULKAN_TO_WEBGL_FORMAT_MAP = {\n  131: GL.COMPRESSED_RGB_S3TC_DXT1_EXT,\n  132: GL.COMPRESSED_SRGB_S3TC_DXT1_EXT,\n  133: GL.COMPRESSED_RGBA_S3TC_DXT1_EXT,\n  134: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,\n  135: GL.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n  136: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,\n  137: GL.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n  138: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,\n  139: GL.COMPRESSED_RED_RGTC1_EXT,\n  140: GL.COMPRESSED_SIGNED_RED_RGTC1_EXT,\n  141: GL.COMPRESSED_RED_GREEN_RGTC2_EXT,\n  142: GL.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT,\n  147: GL.COMPRESSED_RGB8_ETC2,\n  148: GL.COMPRESSED_SRGB8_ETC2,\n  149: GL.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n  150: GL.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n  151: GL.COMPRESSED_RGBA8_ETC2_EAC,\n  152: GL.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,\n  153: GL.COMPRESSED_R11_EAC,\n  154: GL.COMPRESSED_SIGNED_R11_EAC,\n  155: GL.COMPRESSED_RG11_EAC,\n  156: GL.COMPRESSED_SIGNED_RG11_EAC,\n  // @ts-ignore\n  157: GL.COMPRESSED_RGBA_ASTC_4x4_KHR,\n  // @ts-ignore\n  158: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR,\n  // @ts-ignore\n  159: GL.COMPRESSED_RGBA_ASTC_5x4_KHR,\n  // @ts-ignore\n  160: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR,\n  // @ts-ignore\n  161: GL.COMPRESSED_RGBA_ASTC_5x5_KHR,\n  // @ts-ignore\n  162: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR,\n  // @ts-ignore\n  163: GL.COMPRESSED_RGBA_ASTC_6x5_KHR,\n  // @ts-ignore\n  164: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR,\n  // @ts-ignore\n  165: GL.COMPRESSED_RGBA_ASTC_6x6_KHR,\n  // @ts-ignore\n  166: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR,\n  // @ts-ignore\n  167: GL.COMPRESSED_RGBA_ASTC_8x5_KHR,\n  // @ts-ignore\n  168: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR,\n  // @ts-ignore\n  169: GL.COMPRESSED_RGBA_ASTC_8x6_KHR,\n  // @ts-ignore\n  170: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR,\n  // @ts-ignore\n  171: GL.COMPRESSED_RGBA_ASTC_8x8_KHR,\n  // @ts-ignore\n  172: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR,\n  // @ts-ignore\n  173: GL.COMPRESSED_RGBA_ASTC_10x5_KHR,\n  // @ts-ignore\n  174: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR,\n  // @ts-ignore\n  175: GL.COMPRESSED_RGBA_ASTC_10x6_KHR,\n  // @ts-ignore\n  176: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR,\n  // @ts-ignore\n  177: GL.COMPRESSED_RGBA_ASTC_10x8_KHR,\n  // @ts-ignore\n  178: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR,\n  // @ts-ignore\n  179: GL.COMPRESSED_RGBA_ASTC_10x10_KHR,\n  // @ts-ignore\n  180: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,\n  // @ts-ignore\n  181: GL.COMPRESSED_RGBA_ASTC_12x10_KHR,\n  // @ts-ignore\n  182: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR,\n  // @ts-ignore\n  183: GL.COMPRESSED_RGBA_ASTC_12x12_KHR,\n  // @ts-ignore\n  184: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR,\n  1000054000: GL.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG,\n  1000054001: GL.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n  // @ts-ignore\n  1000066000: GL.COMPRESSED_RGBA_ASTC_4x4_KHR,\n  // @ts-ignore\n  1000066001: GL.COMPRESSED_RGBA_ASTC_5x4_KHR,\n  // @ts-ignore\n  1000066002: GL.COMPRESSED_RGBA_ASTC_5x5_KHR,\n  // @ts-ignore\n  1000066003: GL.COMPRESSED_RGBA_ASTC_6x5_KHR,\n  // @ts-ignore\n  1000066004: GL.COMPRESSED_RGBA_ASTC_6x6_KHR,\n  // @ts-ignore\n  1000066005: GL.COMPRESSED_RGBA_ASTC_8x5_KHR,\n  // @ts-ignore\n  1000066006: GL.COMPRESSED_RGBA_ASTC_8x6_KHR,\n  // @ts-ignore\n  1000066007: GL.COMPRESSED_RGBA_ASTC_8x8_KHR,\n  // @ts-ignore\n  1000066008: GL.COMPRESSED_RGBA_ASTC_10x5_KHR,\n  // @ts-ignore\n  1000066009: GL.COMPRESSED_RGBA_ASTC_10x6_KHR,\n  // @ts-ignore\n  1000066010: GL.COMPRESSED_RGBA_ASTC_10x8_KHR,\n  // @ts-ignore\n  1000066011: GL.COMPRESSED_RGBA_ASTC_10x10_KHR,\n  // @ts-ignore\n  1000066012: GL.COMPRESSED_RGBA_ASTC_12x10_KHR,\n  // @ts-ignore\n  1000066013: GL.COMPRESSED_RGBA_ASTC_12x12_KHR\n};\n\n/**\n * Returns WebGl format based on Vulkan format\n * Vulkan to WebGl format mapping provided here http://github.khronos.org/KTX-Specification/#formatMapping\n * Vulkan name to format number mapping provided here: https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkFormat.html\n * @param {Number} vkFormat\n * @returns {Number}\n */\nexport function mapVkFormatToWebGL(vkFormat) {\n  return VULKAN_TO_WEBGL_FORMAT_MAP[vkFormat];\n}\n","import {read} from 'ktx-parse';\nimport {extractMipmapImages} from '../utils/extract-mipmap-images';\nimport {mapVkFormatToWebGL} from '../utils/ktx-format-helper';\n\nconst KTX2_ID = [\n  // '´', 'K', 'T', 'X', '2', '0', 'ª', '\\r', '\\n', '\\x1A', '\\n'\n  0xab, 0x4b, 0x54, 0x58, 0x20, 0x32, 0x30, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a\n];\n\n// eslint-disable-next-line complexity\nexport function isKTX(data) {\n  const id = new Uint8Array(data.buffer || data, data.byteOffset || 0, KTX2_ID.length);\n  const notKTX =\n    id[0] !== KTX2_ID[0] || // '´'\n    id[1] !== KTX2_ID[1] || // 'K'\n    id[2] !== KTX2_ID[2] || // 'T'\n    id[3] !== KTX2_ID[3] || // 'X'\n    id[4] !== KTX2_ID[4] || // ' '\n    id[5] !== KTX2_ID[5] || // '2'\n    id[6] !== KTX2_ID[6] || // '0'\n    id[7] !== KTX2_ID[7] || // 'ª'\n    id[8] !== KTX2_ID[8] || // '\\r'\n    id[9] !== KTX2_ID[9] || // '\\n'\n    id[10] !== KTX2_ID[10] || // '\\x1A'\n    id[11] !== KTX2_ID[11]; // '\\n'\n\n  return !notKTX;\n}\n\nexport function parseKTX(arrayBuffer) {\n  const uint8Array = new Uint8Array(arrayBuffer);\n  const ktx = read(uint8Array);\n  const mipMapLevels = Math.max(1, ktx.levels.length);\n  const width = ktx.pixelWidth;\n  const height = ktx.pixelHeight;\n  const internalFormat = mapVkFormatToWebGL(ktx.vkFormat);\n\n  return extractMipmapImages(ktx.levels, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction: (level) => level.uncompressedByteLength,\n    internalFormat\n  });\n}\n","import type {TextureLevel} from '../../types';\nimport {assert} from '@loaders.gl/loader-utils';\nimport {GL} from '../gl-constants';\nimport {extractMipmapImages} from '../utils/extract-mipmap-images';\n\nconst getATCLevelSize = getDxt1LevelSize;\nconst getATCALevelSize = getDxtXLevelSize;\nconst getATCILevelSize = getDxtXLevelSize;\nconst DDS_CONSTANTS = {\n  MAGIC_NUMBER: 0x20534444,\n  HEADER_LENGTH: 31,\n  MAGIC_NUMBER_INDEX: 0,\n  HEADER_SIZE_INDEX: 1,\n  HEADER_FLAGS_INDEX: 2,\n  HEADER_HEIGHT_INDEX: 3,\n  HEADER_WIDTH_INDEX: 4,\n  MIPMAPCOUNT_INDEX: 7,\n  HEADER_PF_FLAGS_INDEX: 20,\n  HEADER_PF_FOURCC_INDEX: 21,\n  DDSD_MIPMAPCOUNT: 0x20000,\n  DDPF_FOURCC: 0x4,\n  PIXEL_FORMATS: {\n    DXT1: GL.COMPRESSED_RGB_S3TC_DXT1_EXT,\n    DXT3: GL.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n    DXT5: GL.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n    'ATC ': GL.COMPRESSED_RGB_ATC_WEBGL,\n    ATCA: GL.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,\n    ATCI: GL.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\n  },\n  SIZE_FUNCTIONS: {\n    DXT1: getDxt1LevelSize,\n    DXT3: getDxtXLevelSize,\n    DXT5: getDxtXLevelSize,\n    'ATC ': getATCLevelSize,\n    ATCA: getATCALevelSize,\n    ATCI: getATCILevelSize\n  }\n};\n\n/**\n * Check if data is in \"DDS\" format by its magic number\n * @param data - binary data of compressed texture\n * @returns true - data in \"DDS\" format, else - false\n */\nexport function isDDS(data: ArrayBuffer): boolean {\n  const header = new Uint32Array(data, 0, DDS_CONSTANTS.HEADER_LENGTH);\n  const magic = header[DDS_CONSTANTS.MAGIC_NUMBER_INDEX];\n  return magic === DDS_CONSTANTS.MAGIC_NUMBER;\n}\n\n/**\n * Parse texture data as \"DDS\" format\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n */\nexport function parseDDS(data: ArrayBuffer): TextureLevel[] {\n  const header = new Int32Array(data, 0, DDS_CONSTANTS.HEADER_LENGTH);\n  const pixelFormatNumber = header[DDS_CONSTANTS.HEADER_PF_FOURCC_INDEX];\n  assert(\n    Boolean(header[DDS_CONSTANTS.HEADER_PF_FLAGS_INDEX] & DDS_CONSTANTS.DDPF_FOURCC),\n    'DDS: Unsupported format, must contain a FourCC code'\n  );\n  const fourCC = int32ToFourCC(pixelFormatNumber);\n  const internalFormat = DDS_CONSTANTS.PIXEL_FORMATS[fourCC];\n  const sizeFunction = DDS_CONSTANTS.SIZE_FUNCTIONS[fourCC];\n  assert(internalFormat && sizeFunction, `DDS: Unknown pixel format ${pixelFormatNumber}`);\n\n  let mipMapLevels = 1;\n  if (header[DDS_CONSTANTS.HEADER_FLAGS_INDEX] & DDS_CONSTANTS.DDSD_MIPMAPCOUNT) {\n    mipMapLevels = Math.max(1, header[DDS_CONSTANTS.MIPMAPCOUNT_INDEX]);\n  }\n  const width = header[DDS_CONSTANTS.HEADER_WIDTH_INDEX];\n  const height = header[DDS_CONSTANTS.HEADER_HEIGHT_INDEX];\n  const dataOffset = header[DDS_CONSTANTS.HEADER_SIZE_INDEX] + 4;\n  const image = new Uint8Array(data, dataOffset);\n\n  return extractMipmapImages(image, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction,\n    internalFormat\n  });\n}\n\n/**\n * DXT1 applicable function to calculate level size\n * @param width - level width\n * @param height - level height\n * @returns level size in bytes\n */\nexport function getDxt1LevelSize(width: number, height: number): number {\n  return ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n}\n\n/**\n * DXT3 & DXT5 applicable function to calculate level size\n * @param width - level width\n * @param height - level height\n * @returns level size in bytes\n */\nexport function getDxtXLevelSize(width: number, height: number): number {\n  return ((width + 3) >> 2) * ((height + 3) >> 2) * 16;\n}\n\n/**\n * Convert every byte of Int32 value to char\n * @param {number} value - Int32 number\n * @returns {string} string of 4 characters\n */\nfunction int32ToFourCC(value) {\n  return String.fromCharCode(\n    value & 0xff,\n    (value >> 8) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 24) & 0xff\n  );\n}\n","import {TextureLevel} from '../../types';\n/* eslint-disable camelcase */\n// Forked from PicoGL: https://github.com/tsherif/picogl.js/blob/master/examples/utils/utils.js\n// Copyright (c) 2017 Tarek Sherif, The MIT License (MIT)\nimport {GL} from '../gl-constants';\nimport {extractMipmapImages} from '../utils/extract-mipmap-images';\n\nconst PVR_CONSTANTS = {\n  MAGIC_NUMBER: 0x03525650,\n  MAGIC_NUMBER_EXTRA: 0x50565203,\n  HEADER_LENGTH: 13,\n  HEADER_SIZE: 52,\n  MAGIC_NUMBER_INDEX: 0,\n  PIXEL_FORMAT_INDEX: 2,\n  COLOUR_SPACE_INDEX: 4,\n  HEIGHT_INDEX: 6,\n  WIDTH_INDEX: 7,\n  MIPMAPCOUNT_INDEX: 11,\n  METADATA_SIZE_INDEX: 12\n};\n\nconst PVR_PIXEL_FORMATS = {\n  0: [GL.COMPRESSED_RGB_PVRTC_2BPPV1_IMG],\n  1: [GL.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG],\n  2: [GL.COMPRESSED_RGB_PVRTC_4BPPV1_IMG],\n  3: [GL.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG],\n  6: [GL.COMPRESSED_RGB_ETC1_WEBGL],\n  7: [GL.COMPRESSED_RGB_S3TC_DXT1_EXT],\n  9: [GL.COMPRESSED_RGBA_S3TC_DXT3_EXT],\n  11: [GL.COMPRESSED_RGBA_S3TC_DXT5_EXT],\n  22: [GL.COMPRESSED_RGB8_ETC2],\n  23: [GL.COMPRESSED_RGBA8_ETC2_EAC],\n  24: [GL.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2],\n  25: [GL.COMPRESSED_R11_EAC],\n  26: [GL.COMPRESSED_RG11_EAC],\n  27: [GL.COMPRESSED_RGBA_ASTC_4X4_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR],\n  28: [GL.COMPRESSED_RGBA_ASTC_5X4_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR],\n  29: [GL.COMPRESSED_RGBA_ASTC_5X5_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR],\n  30: [GL.COMPRESSED_RGBA_ASTC_6X5_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR],\n  31: [GL.COMPRESSED_RGBA_ASTC_6X6_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR],\n  32: [GL.COMPRESSED_RGBA_ASTC_8X5_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR],\n  33: [GL.COMPRESSED_RGBA_ASTC_8X6_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR],\n  34: [GL.COMPRESSED_RGBA_ASTC_8X8_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR],\n  35: [GL.COMPRESSED_RGBA_ASTC_10X5_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR],\n  36: [GL.COMPRESSED_RGBA_ASTC_10X6_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR],\n  37: [GL.COMPRESSED_RGBA_ASTC_10X8_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR],\n  38: [GL.COMPRESSED_RGBA_ASTC_10X10_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR],\n  39: [GL.COMPRESSED_RGBA_ASTC_12X10_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR],\n  40: [GL.COMPRESSED_RGBA_ASTC_12X12_KHR, GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR]\n};\n\nconst PVR_SIZE_FUNCTIONS = {\n  0: pvrtc2bppSize,\n  1: pvrtc2bppSize,\n  2: pvrtc4bppSize,\n  3: pvrtc4bppSize,\n  6: dxtEtcSmallSize,\n  7: dxtEtcSmallSize,\n  9: dxtEtcAstcBigSize,\n  11: dxtEtcAstcBigSize,\n  22: dxtEtcSmallSize,\n  23: dxtEtcAstcBigSize,\n  24: dxtEtcSmallSize,\n  25: dxtEtcSmallSize,\n  26: dxtEtcAstcBigSize,\n  27: dxtEtcAstcBigSize,\n  28: atc5x4Size,\n  29: atc5x5Size,\n  30: atc6x5Size,\n  31: atc6x6Size,\n  32: atc8x5Size,\n  33: atc8x6Size,\n  34: atc8x8Size,\n  35: atc10x5Size,\n  36: atc10x6Size,\n  37: atc10x8Size,\n  38: atc10x10Size,\n  39: atc12x10Size,\n  40: atc12x12Size\n};\n\n/**\n * Check if data is in \"PVR\" format by its magic number\n * @param data - binary data of compressed texture\n * @returns true - data in \"PVR\" format, else - false\n */\nexport function isPVR(data: ArrayBuffer): boolean {\n  const header = new Uint32Array(data, 0, PVR_CONSTANTS.HEADER_LENGTH);\n  const version = header[PVR_CONSTANTS.MAGIC_NUMBER_INDEX];\n\n  return version === PVR_CONSTANTS.MAGIC_NUMBER || version === PVR_CONSTANTS.MAGIC_NUMBER_EXTRA;\n}\n\n/**\n * Parse texture data as \"PVR\" format\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n * @see http://cdn.imgtec.com/sdk-documentation/PVR+File+Format.Specification.pdf\n */\nexport function parsePVR(data: ArrayBuffer): TextureLevel[] {\n  const header = new Uint32Array(data, 0, PVR_CONSTANTS.HEADER_LENGTH);\n\n  const pvrFormat = header[PVR_CONSTANTS.PIXEL_FORMAT_INDEX];\n  const colourSpace = header[PVR_CONSTANTS.COLOUR_SPACE_INDEX];\n  const pixelFormats = PVR_PIXEL_FORMATS[pvrFormat] || [];\n  const internalFormat = pixelFormats.length > 1 && colourSpace ? pixelFormats[1] : pixelFormats[0];\n\n  const sizeFunction = PVR_SIZE_FUNCTIONS[pvrFormat];\n\n  const mipMapLevels = header[PVR_CONSTANTS.MIPMAPCOUNT_INDEX];\n\n  const width = header[PVR_CONSTANTS.WIDTH_INDEX];\n  const height = header[PVR_CONSTANTS.HEIGHT_INDEX];\n\n  const dataOffset = PVR_CONSTANTS.HEADER_SIZE + header[PVR_CONSTANTS.METADATA_SIZE_INDEX];\n\n  const image = new Uint8Array(data, dataOffset);\n\n  return extractMipmapImages(image, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction,\n    internalFormat\n  });\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\nfunction pvrtc2bppSize(width, height) {\n  width = Math.max(width, 16);\n  height = Math.max(height, 8);\n\n  return (width * height) / 4;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\nfunction pvrtc4bppSize(width, height) {\n  width = Math.max(width, 8);\n  height = Math.max(height, 8);\n\n  return (width * height) / 2;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/\n// Size for:\n// COMPRESSED_RGB_S3TC_DXT1_EXT\n// COMPRESSED_R11_EAC\n// COMPRESSED_SIGNED_R11_EAC\n// COMPRESSED_RGB8_ETC2\n// COMPRESSED_SRGB8_ETC2\n// COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\n// COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\nfunction dxtEtcSmallSize(width, height) {\n  return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 8;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\n// Size for:\n// COMPRESSED_RGBA_S3TC_DXT3_EXT\n// COMPRESSED_RGBA_S3TC_DXT5_EXT\n// COMPRESSED_RG11_EAC\n// COMPRESSED_SIGNED_RG11_EAC\n// COMPRESSED_RGBA8_ETC2_EAC\n// COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\n// COMPRESSED_RGBA_ASTC_4x4_KHR\nfunction dxtEtcAstcBigSize(width, height) {\n  return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc5x4Size(width, height) {\n  return Math.floor((width + 4) / 5) * Math.floor((height + 3) / 4) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc5x5Size(width, height) {\n  return Math.floor((width + 4) / 5) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc6x5Size(width, height) {\n  return Math.floor((width + 5) / 6) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc6x6Size(width, height) {\n  return Math.floor((width + 5) / 6) * Math.floor((height + 5) / 6) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x5Size(width, height) {\n  return Math.floor((width + 7) / 8) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x6Size(width, height) {\n  return Math.floor((width + 7) / 8) * Math.floor((height + 5) / 6) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x8Size(width, height) {\n  return Math.floor((width + 7) / 8) * Math.floor((height + 7) / 8) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x5Size(width, height) {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x6Size(width, height) {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 5) / 6) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x8Size(width, height) {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 7) / 8) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x10Size(width, height) {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 9) / 10) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc12x10Size(width, height) {\n  return Math.floor((width + 11) / 12) * Math.floor((height + 9) / 10) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc12x12Size(width, height) {\n  return Math.floor((width + 11) / 12) * Math.floor((height + 11) / 12) * 16;\n}\n","import type {TextureLevel} from '../../types';\nimport {isKTX, parseKTX} from './parse-ktx';\nimport {isDDS, parseDDS} from './parse-dds';\nimport {isPVR, parsePVR} from './parse-pvr';\n\n/**\n * Deduces format and parses compressed texture loaded in ArrayBuffer\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n */\nexport function parseCompressedTexture(data: ArrayBuffer): TextureLevel[] {\n  if (isKTX(data)) {\n    // TODO: remove @ts-ignore when `parseKTX` output is normalized to loaders.gl texture format\n    // @ts-ignore\n    return parseKTX(data);\n  }\n  if (isDDS(data)) {\n    return parseDDS(data);\n  }\n  if (isPVR(data)) {\n    return parsePVR(data);\n  }\n  throw new Error('Texture container format not recognized');\n}\n","import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {parseCompressedTexture} from './lib/parsers/parse-compressed-texture';\n\n/**\n * Worker Loader for KTX, DDS, and PVR texture container formats\n */\nexport const CompressedTextureWorkerLoader = {\n  name: 'Texture Containers',\n  id: 'compressed-texture',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: [\n    'ktx',\n    'ktx2',\n    'dds', // WEBGL_compressed_texture_s3tc, WEBGL_compressed_texture_atc\n    'pvr' // WEBGL_compressed_texture_pvrtc\n  ],\n  mimeTypes: [\n    'image/ktx2',\n    'image/ktx',\n    'image/vnd-ms.dds',\n    'image/x-dds',\n    'application/octet-stream'\n  ],\n  binary: true,\n  options: {\n    'compressed-texture': {\n      libraryPath: 'libs/'\n    }\n  }\n};\n\n/**\n * Loader for KTX, DDS, and PVR texture container formats\n */\nexport const CompressedTextureLoader = {\n  ...CompressedTextureWorkerLoader,\n  parse: async (arrayBuffer) => parseCompressedTexture(arrayBuffer)\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckCompressedTextureWorkerLoader: Loader = CompressedTextureWorkerLoader;\nexport const _TypecheckCompressedTextureLoader: LoaderWithParser = CompressedTextureLoader;\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// TODO: use 'latest' instead of 'beta' when 3.0.0 version is released as 'latest'\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'beta';\n","import {Tile} from '../../types';\n\n/**\n * Generates url with token if it is exists.\n * @param {String} url\n * @param {any} token\n * @returns {string}\n */\nexport function getUrlWithToken(url, token = null) {\n  return token ? `${url}?token=${token}` : url;\n}\n\n/**\n * Generates attribute urls for tile.\n * @param tile\n * @returns list of attribute urls\n */\nexport function generateTileAttributeUrls(tile: Tile): string[] {\n  const {url, attributeData} = tile;\n  const attributeUrls: string[] = [];\n\n  for (let index = 0; index < attributeData.length; index++) {\n    const attributeUrl = attributeData[index].href.replace('./', '');\n    attributeUrls.push(`${url}/${attributeUrl}`);\n  }\n\n  return attributeUrls;\n}\n\n/**\n * Generates attribute urls for tileset based on tileset and resource\n * @param {Object} tileset\n * @param {number} resource\n * @returns {Array}\n */\nexport function generateTilesetAttributeUrls(tileset, resource) {\n  const attributeUrls: string[] = [];\n  const {attributeStorageInfo, url} = tileset;\n\n  for (let index = 0; index < attributeStorageInfo.length; index++) {\n    const fileName = attributeStorageInfo[index].key;\n    attributeUrls.push(`${url}/nodes/${resource}/attributes/${fileName}/0`);\n  }\n\n  return attributeUrls;\n}\n","export default {\n  DEPTH_BUFFER_BIT: 0x00000100,\n  STENCIL_BUFFER_BIT: 0x00000400,\n  COLOR_BUFFER_BIT: 0x00004000,\n  POINTS: 0x0000,\n  LINES: 0x0001,\n  LINE_LOOP: 0x0002,\n  LINE_STRIP: 0x0003,\n  TRIANGLES: 0x0004,\n  TRIANGLE_STRIP: 0x0005,\n  TRIANGLE_FAN: 0x0006,\n  ZERO: 0,\n  ONE: 1,\n  SRC_COLOR: 0x0300,\n  ONE_MINUS_SRC_COLOR: 0x0301,\n  SRC_ALPHA: 0x0302,\n  ONE_MINUS_SRC_ALPHA: 0x0303,\n  DST_ALPHA: 0x0304,\n  ONE_MINUS_DST_ALPHA: 0x0305,\n  DST_COLOR: 0x0306,\n  ONE_MINUS_DST_COLOR: 0x0307,\n  SRC_ALPHA_SATURATE: 0x0308,\n  CONSTANT_COLOR: 0x8001,\n  ONE_MINUS_CONSTANT_COLOR: 0x8002,\n  CONSTANT_ALPHA: 0x8003,\n  ONE_MINUS_CONSTANT_ALPHA: 0x8004,\n  FUNC_ADD: 0x8006,\n  FUNC_SUBTRACT: 0x800a,\n  FUNC_REVERSE_SUBTRACT: 0x800b,\n  BLEND_EQUATION: 0x8009,\n  BLEND_EQUATION_RGB: 0x8009,\n  BLEND_EQUATION_ALPHA: 0x883d,\n  BLEND_DST_RGB: 0x80c8,\n  BLEND_SRC_RGB: 0x80c9,\n  BLEND_DST_ALPHA: 0x80ca,\n  BLEND_SRC_ALPHA: 0x80cb,\n  BLEND_COLOR: 0x8005,\n  ARRAY_BUFFER_BINDING: 0x8894,\n  ELEMENT_ARRAY_BUFFER_BINDING: 0x8895,\n  LINE_WIDTH: 0x0b21,\n  ALIASED_POINT_SIZE_RANGE: 0x846d,\n  ALIASED_LINE_WIDTH_RANGE: 0x846e,\n  CULL_FACE_MODE: 0x0b45,\n  FRONT_FACE: 0x0b46,\n  DEPTH_RANGE: 0x0b70,\n  DEPTH_WRITEMASK: 0x0b72,\n  DEPTH_CLEAR_VALUE: 0x0b73,\n  DEPTH_FUNC: 0x0b74,\n  STENCIL_CLEAR_VALUE: 0x0b91,\n  STENCIL_FUNC: 0x0b92,\n  STENCIL_FAIL: 0x0b94,\n  STENCIL_PASS_DEPTH_FAIL: 0x0b95,\n  STENCIL_PASS_DEPTH_PASS: 0x0b96,\n  STENCIL_REF: 0x0b97,\n  STENCIL_VALUE_MASK: 0x0b93,\n  STENCIL_WRITEMASK: 0x0b98,\n  STENCIL_BACK_FUNC: 0x8800,\n  STENCIL_BACK_FAIL: 0x8801,\n  STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802,\n  STENCIL_BACK_PASS_DEPTH_PASS: 0x8803,\n  STENCIL_BACK_REF: 0x8ca3,\n  STENCIL_BACK_VALUE_MASK: 0x8ca4,\n  STENCIL_BACK_WRITEMASK: 0x8ca5,\n  VIEWPORT: 0x0ba2,\n  SCISSOR_BOX: 0x0c10,\n  COLOR_CLEAR_VALUE: 0x0c22,\n  COLOR_WRITEMASK: 0x0c23,\n  UNPACK_ALIGNMENT: 0x0cf5,\n  PACK_ALIGNMENT: 0x0d05,\n  MAX_TEXTURE_SIZE: 0x0d33,\n  MAX_VIEWPORT_DIMS: 0x0d3a,\n  SUBPIXEL_BITS: 0x0d50,\n  RED_BITS: 0x0d52,\n  GREEN_BITS: 0x0d53,\n  BLUE_BITS: 0x0d54,\n  ALPHA_BITS: 0x0d55,\n  DEPTH_BITS: 0x0d56,\n  STENCIL_BITS: 0x0d57,\n  POLYGON_OFFSET_UNITS: 0x2a00,\n  POLYGON_OFFSET_FACTOR: 0x8038,\n  TEXTURE_BINDING_2D: 0x8069,\n  SAMPLE_BUFFERS: 0x80a8,\n  SAMPLES: 0x80a9,\n  SAMPLE_COVERAGE_VALUE: 0x80aa,\n  SAMPLE_COVERAGE_INVERT: 0x80ab,\n  COMPRESSED_TEXTURE_FORMATS: 0x86a3,\n  VENDOR: 0x1f00,\n  RENDERER: 0x1f01,\n  VERSION: 0x1f02,\n  IMPLEMENTATION_COLOR_READ_TYPE: 0x8b9a,\n  IMPLEMENTATION_COLOR_READ_FORMAT: 0x8b9b,\n  BROWSER_DEFAULT_WEBGL: 0x9244,\n  STATIC_DRAW: 0x88e4,\n  STREAM_DRAW: 0x88e0,\n  DYNAMIC_DRAW: 0x88e8,\n  ARRAY_BUFFER: 0x8892,\n  ELEMENT_ARRAY_BUFFER: 0x8893,\n  BUFFER_SIZE: 0x8764,\n  BUFFER_USAGE: 0x8765,\n  CURRENT_VERTEX_ATTRIB: 0x8626,\n  VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622,\n  VERTEX_ATTRIB_ARRAY_SIZE: 0x8623,\n  VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624,\n  VERTEX_ATTRIB_ARRAY_TYPE: 0x8625,\n  VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886a,\n  VERTEX_ATTRIB_ARRAY_POINTER: 0x8645,\n  VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889f,\n  CULL_FACE: 0x0b44,\n  FRONT: 0x0404,\n  BACK: 0x0405,\n  FRONT_AND_BACK: 0x0408,\n  BLEND: 0x0be2,\n  DEPTH_TEST: 0x0b71,\n  DITHER: 0x0bd0,\n  POLYGON_OFFSET_FILL: 0x8037,\n  SAMPLE_ALPHA_TO_COVERAGE: 0x809e,\n  SAMPLE_COVERAGE: 0x80a0,\n  SCISSOR_TEST: 0x0c11,\n  STENCIL_TEST: 0x0b90,\n  NO_ERROR: 0,\n  INVALID_ENUM: 0x0500,\n  INVALID_VALUE: 0x0501,\n  INVALID_OPERATION: 0x0502,\n  OUT_OF_MEMORY: 0x0505,\n  CONTEXT_LOST_WEBGL: 0x9242,\n  CW: 0x0900,\n  CCW: 0x0901,\n  DONT_CARE: 0x1100,\n  FASTEST: 0x1101,\n  NICEST: 0x1102,\n  GENERATE_MIPMAP_HINT: 0x8192,\n  BYTE: 0x1400,\n  UNSIGNED_BYTE: 0x1401,\n  SHORT: 0x1402,\n  UNSIGNED_SHORT: 0x1403,\n  INT: 0x1404,\n  UNSIGNED_INT: 0x1405,\n  FLOAT: 0x1406,\n  DOUBLE: 0x140a,\n  DEPTH_COMPONENT: 0x1902,\n  ALPHA: 0x1906,\n  RGB: 0x1907,\n  RGBA: 0x1908,\n  LUMINANCE: 0x1909,\n  LUMINANCE_ALPHA: 0x190a,\n  UNSIGNED_SHORT_4_4_4_4: 0x8033,\n  UNSIGNED_SHORT_5_5_5_1: 0x8034,\n  UNSIGNED_SHORT_5_6_5: 0x8363,\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n  COMPILE_STATUS: 0x8b81,\n  DELETE_STATUS: 0x8b80,\n  LINK_STATUS: 0x8b82,\n  VALIDATE_STATUS: 0x8b83,\n  ATTACHED_SHADERS: 0x8b85,\n  ACTIVE_ATTRIBUTES: 0x8b89,\n  ACTIVE_UNIFORMS: 0x8b86,\n  MAX_VERTEX_ATTRIBS: 0x8869,\n  MAX_VERTEX_UNIFORM_VECTORS: 0x8dfb,\n  MAX_VARYING_VECTORS: 0x8dfc,\n  MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8b4d,\n  MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8b4c,\n  MAX_TEXTURE_IMAGE_UNITS: 0x8872,\n  MAX_FRAGMENT_UNIFORM_VECTORS: 0x8dfd,\n  SHADER_TYPE: 0x8b4f,\n  SHADING_LANGUAGE_VERSION: 0x8b8c,\n  CURRENT_PROGRAM: 0x8b8d,\n  NEVER: 0x0200,\n  ALWAYS: 0x0207,\n  LESS: 0x0201,\n  EQUAL: 0x0202,\n  LEQUAL: 0x0203,\n  GREATER: 0x0204,\n  GEQUAL: 0x0206,\n  NOTEQUAL: 0x0205,\n  KEEP: 0x1e00,\n  REPLACE: 0x1e01,\n  INCR: 0x1e02,\n  DECR: 0x1e03,\n  INVERT: 0x150a,\n  INCR_WRAP: 0x8507,\n  DECR_WRAP: 0x8508,\n  NEAREST: 0x2600,\n  LINEAR: 0x2601,\n  NEAREST_MIPMAP_NEAREST: 0x2700,\n  LINEAR_MIPMAP_NEAREST: 0x2701,\n  NEAREST_MIPMAP_LINEAR: 0x2702,\n  LINEAR_MIPMAP_LINEAR: 0x2703,\n  TEXTURE_MAG_FILTER: 0x2800,\n  TEXTURE_MIN_FILTER: 0x2801,\n  TEXTURE_WRAP_S: 0x2802,\n  TEXTURE_WRAP_T: 0x2803,\n  TEXTURE_2D: 0x0de1,\n  TEXTURE: 0x1702,\n  TEXTURE_CUBE_MAP: 0x8513,\n  TEXTURE_BINDING_CUBE_MAP: 0x8514,\n  TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515,\n  TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516,\n  TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517,\n  TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518,\n  TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519,\n  TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851a,\n  MAX_CUBE_MAP_TEXTURE_SIZE: 0x851c,\n  TEXTURE0: 0x84c0,\n  ACTIVE_TEXTURE: 0x84e0,\n  REPEAT: 0x2901,\n  CLAMP_TO_EDGE: 0x812f,\n  MIRRORED_REPEAT: 0x8370,\n  TEXTURE_WIDTH: 0x1000,\n  TEXTURE_HEIGHT: 0x1001,\n  FLOAT_VEC2: 0x8b50,\n  FLOAT_VEC3: 0x8b51,\n  FLOAT_VEC4: 0x8b52,\n  INT_VEC2: 0x8b53,\n  INT_VEC3: 0x8b54,\n  INT_VEC4: 0x8b55,\n  BOOL: 0x8b56,\n  BOOL_VEC2: 0x8b57,\n  BOOL_VEC3: 0x8b58,\n  BOOL_VEC4: 0x8b59,\n  FLOAT_MAT2: 0x8b5a,\n  FLOAT_MAT3: 0x8b5b,\n  FLOAT_MAT4: 0x8b5c,\n  SAMPLER_2D: 0x8b5e,\n  SAMPLER_CUBE: 0x8b60,\n  LOW_FLOAT: 0x8df0,\n  MEDIUM_FLOAT: 0x8df1,\n  HIGH_FLOAT: 0x8df2,\n  LOW_INT: 0x8df3,\n  MEDIUM_INT: 0x8df4,\n  HIGH_INT: 0x8df5,\n  FRAMEBUFFER: 0x8d40,\n  RENDERBUFFER: 0x8d41,\n  RGBA4: 0x8056,\n  RGB5_A1: 0x8057,\n  RGB565: 0x8d62,\n  DEPTH_COMPONENT16: 0x81a5,\n  STENCIL_INDEX: 0x1901,\n  STENCIL_INDEX8: 0x8d48,\n  DEPTH_STENCIL: 0x84f9,\n  RENDERBUFFER_WIDTH: 0x8d42,\n  RENDERBUFFER_HEIGHT: 0x8d43,\n  RENDERBUFFER_INTERNAL_FORMAT: 0x8d44,\n  RENDERBUFFER_RED_SIZE: 0x8d50,\n  RENDERBUFFER_GREEN_SIZE: 0x8d51,\n  RENDERBUFFER_BLUE_SIZE: 0x8d52,\n  RENDERBUFFER_ALPHA_SIZE: 0x8d53,\n  RENDERBUFFER_DEPTH_SIZE: 0x8d54,\n  RENDERBUFFER_STENCIL_SIZE: 0x8d55,\n  FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8cd0,\n  FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8cd1,\n  FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8cd2,\n  FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8cd3,\n  COLOR_ATTACHMENT0: 0x8ce0,\n  DEPTH_ATTACHMENT: 0x8d00,\n  STENCIL_ATTACHMENT: 0x8d20,\n  DEPTH_STENCIL_ATTACHMENT: 0x821a,\n  NONE: 0,\n  FRAMEBUFFER_COMPLETE: 0x8cd5,\n  FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8cd6,\n  FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8cd7,\n  FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8cd9,\n  FRAMEBUFFER_UNSUPPORTED: 0x8cdd,\n  FRAMEBUFFER_BINDING: 0x8ca6,\n  RENDERBUFFER_BINDING: 0x8ca7,\n  READ_FRAMEBUFFER: 0x8ca8,\n  DRAW_FRAMEBUFFER: 0x8ca9,\n  MAX_RENDERBUFFER_SIZE: 0x84e8,\n  INVALID_FRAMEBUFFER_OPERATION: 0x0506,\n  UNPACK_FLIP_Y_WEBGL: 0x9240,\n  UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241,\n  UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243,\n  READ_BUFFER: 0x0c02,\n  UNPACK_ROW_LENGTH: 0x0cf2,\n  UNPACK_SKIP_ROWS: 0x0cf3,\n  UNPACK_SKIP_PIXELS: 0x0cf4,\n  PACK_ROW_LENGTH: 0x0d02,\n  PACK_SKIP_ROWS: 0x0d03,\n  PACK_SKIP_PIXELS: 0x0d04,\n  TEXTURE_BINDING_3D: 0x806a,\n  UNPACK_SKIP_IMAGES: 0x806d,\n  UNPACK_IMAGE_HEIGHT: 0x806e,\n  MAX_3D_TEXTURE_SIZE: 0x8073,\n  MAX_ELEMENTS_VERTICES: 0x80e8,\n  MAX_ELEMENTS_INDICES: 0x80e9,\n  MAX_TEXTURE_LOD_BIAS: 0x84fd,\n  MAX_FRAGMENT_UNIFORM_COMPONENTS: 0x8b49,\n  MAX_VERTEX_UNIFORM_COMPONENTS: 0x8b4a,\n  MAX_ARRAY_TEXTURE_LAYERS: 0x88ff,\n  MIN_PROGRAM_TEXEL_OFFSET: 0x8904,\n  MAX_PROGRAM_TEXEL_OFFSET: 0x8905,\n  MAX_VARYING_COMPONENTS: 0x8b4b,\n  FRAGMENT_SHADER_DERIVATIVE_HINT: 0x8b8b,\n  RASTERIZER_DISCARD: 0x8c89,\n  VERTEX_ARRAY_BINDING: 0x85b5,\n  MAX_VERTEX_OUTPUT_COMPONENTS: 0x9122,\n  MAX_FRAGMENT_INPUT_COMPONENTS: 0x9125,\n  MAX_SERVER_WAIT_TIMEOUT: 0x9111,\n  MAX_ELEMENT_INDEX: 0x8d6b,\n  RED: 0x1903,\n  RGB8: 0x8051,\n  RGBA8: 0x8058,\n  RGB10_A2: 0x8059,\n  TEXTURE_3D: 0x806f,\n  TEXTURE_WRAP_R: 0x8072,\n  TEXTURE_MIN_LOD: 0x813a,\n  TEXTURE_MAX_LOD: 0x813b,\n  TEXTURE_BASE_LEVEL: 0x813c,\n  TEXTURE_MAX_LEVEL: 0x813d,\n  TEXTURE_COMPARE_MODE: 0x884c,\n  TEXTURE_COMPARE_FUNC: 0x884d,\n  SRGB: 0x8c40,\n  SRGB8: 0x8c41,\n  SRGB8_ALPHA8: 0x8c43,\n  COMPARE_REF_TO_TEXTURE: 0x884e,\n  RGBA32F: 0x8814,\n  RGB32F: 0x8815,\n  RGBA16F: 0x881a,\n  RGB16F: 0x881b,\n  TEXTURE_2D_ARRAY: 0x8c1a,\n  TEXTURE_BINDING_2D_ARRAY: 0x8c1d,\n  R11F_G11F_B10F: 0x8c3a,\n  RGB9_E5: 0x8c3d,\n  RGBA32UI: 0x8d70,\n  RGB32UI: 0x8d71,\n  RGBA16UI: 0x8d76,\n  RGB16UI: 0x8d77,\n  RGBA8UI: 0x8d7c,\n  RGB8UI: 0x8d7d,\n  RGBA32I: 0x8d82,\n  RGB32I: 0x8d83,\n  RGBA16I: 0x8d88,\n  RGB16I: 0x8d89,\n  RGBA8I: 0x8d8e,\n  RGB8I: 0x8d8f,\n  RED_INTEGER: 0x8d94,\n  RGB_INTEGER: 0x8d98,\n  RGBA_INTEGER: 0x8d99,\n  R8: 0x8229,\n  RG8: 0x822b,\n  R16F: 0x822d,\n  R32F: 0x822e,\n  RG16F: 0x822f,\n  RG32F: 0x8230,\n  R8I: 0x8231,\n  R8UI: 0x8232,\n  R16I: 0x8233,\n  R16UI: 0x8234,\n  R32I: 0x8235,\n  R32UI: 0x8236,\n  RG8I: 0x8237,\n  RG8UI: 0x8238,\n  RG16I: 0x8239,\n  RG16UI: 0x823a,\n  RG32I: 0x823b,\n  RG32UI: 0x823c,\n  R8_SNORM: 0x8f94,\n  RG8_SNORM: 0x8f95,\n  RGB8_SNORM: 0x8f96,\n  RGBA8_SNORM: 0x8f97,\n  RGB10_A2UI: 0x906f,\n  TEXTURE_IMMUTABLE_FORMAT: 0x912f,\n  TEXTURE_IMMUTABLE_LEVELS: 0x82df,\n  UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n  UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n  UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n  FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n  UNSIGNED_INT_24_8: 0x84fa,\n  HALF_FLOAT: 0x140b,\n  RG: 0x8227,\n  RG_INTEGER: 0x8228,\n  INT_2_10_10_10_REV: 0x8d9f,\n  CURRENT_QUERY: 0x8865,\n  QUERY_RESULT: 0x8866,\n  QUERY_RESULT_AVAILABLE: 0x8867,\n  ANY_SAMPLES_PASSED: 0x8c2f,\n  ANY_SAMPLES_PASSED_CONSERVATIVE: 0x8d6a,\n  MAX_DRAW_BUFFERS: 0x8824,\n  DRAW_BUFFER0: 0x8825,\n  DRAW_BUFFER1: 0x8826,\n  DRAW_BUFFER2: 0x8827,\n  DRAW_BUFFER3: 0x8828,\n  DRAW_BUFFER4: 0x8829,\n  DRAW_BUFFER5: 0x882a,\n  DRAW_BUFFER6: 0x882b,\n  DRAW_BUFFER7: 0x882c,\n  DRAW_BUFFER8: 0x882d,\n  DRAW_BUFFER9: 0x882e,\n  DRAW_BUFFER10: 0x882f,\n  DRAW_BUFFER11: 0x8830,\n  DRAW_BUFFER12: 0x8831,\n  DRAW_BUFFER13: 0x8832,\n  DRAW_BUFFER14: 0x8833,\n  DRAW_BUFFER15: 0x8834,\n  MAX_COLOR_ATTACHMENTS: 0x8cdf,\n  COLOR_ATTACHMENT1: 0x8ce1,\n  COLOR_ATTACHMENT2: 0x8ce2,\n  COLOR_ATTACHMENT3: 0x8ce3,\n  COLOR_ATTACHMENT4: 0x8ce4,\n  COLOR_ATTACHMENT5: 0x8ce5,\n  COLOR_ATTACHMENT6: 0x8ce6,\n  COLOR_ATTACHMENT7: 0x8ce7,\n  COLOR_ATTACHMENT8: 0x8ce8,\n  COLOR_ATTACHMENT9: 0x8ce9,\n  COLOR_ATTACHMENT10: 0x8cea,\n  COLOR_ATTACHMENT11: 0x8ceb,\n  COLOR_ATTACHMENT12: 0x8cec,\n  COLOR_ATTACHMENT13: 0x8ced,\n  COLOR_ATTACHMENT14: 0x8cee,\n  COLOR_ATTACHMENT15: 0x8cef,\n  SAMPLER_3D: 0x8b5f,\n  SAMPLER_2D_SHADOW: 0x8b62,\n  SAMPLER_2D_ARRAY: 0x8dc1,\n  SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n  SAMPLER_CUBE_SHADOW: 0x8dc5,\n  INT_SAMPLER_2D: 0x8dca,\n  INT_SAMPLER_3D: 0x8dcb,\n  INT_SAMPLER_CUBE: 0x8dcc,\n  INT_SAMPLER_2D_ARRAY: 0x8dcf,\n  UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n  UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n  UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n  UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n  MAX_SAMPLES: 0x8d57,\n  SAMPLER_BINDING: 0x8919,\n  PIXEL_PACK_BUFFER: 0x88eb,\n  PIXEL_UNPACK_BUFFER: 0x88ec,\n  PIXEL_PACK_BUFFER_BINDING: 0x88ed,\n  PIXEL_UNPACK_BUFFER_BINDING: 0x88ef,\n  COPY_READ_BUFFER: 0x8f36,\n  COPY_WRITE_BUFFER: 0x8f37,\n  COPY_READ_BUFFER_BINDING: 0x8f36,\n  COPY_WRITE_BUFFER_BINDING: 0x8f37,\n  FLOAT_MAT2x3: 0x8b65,\n  FLOAT_MAT2x4: 0x8b66,\n  FLOAT_MAT3x2: 0x8b67,\n  FLOAT_MAT3x4: 0x8b68,\n  FLOAT_MAT4x2: 0x8b69,\n  FLOAT_MAT4x3: 0x8b6a,\n  UNSIGNED_INT_VEC2: 0x8dc6,\n  UNSIGNED_INT_VEC3: 0x8dc7,\n  UNSIGNED_INT_VEC4: 0x8dc8,\n  UNSIGNED_NORMALIZED: 0x8c17,\n  SIGNED_NORMALIZED: 0x8f9c,\n  VERTEX_ATTRIB_ARRAY_INTEGER: 0x88fd,\n  VERTEX_ATTRIB_ARRAY_DIVISOR: 0x88fe,\n  TRANSFORM_FEEDBACK_BUFFER_MODE: 0x8c7f,\n  MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 0x8c80,\n  TRANSFORM_FEEDBACK_VARYINGS: 0x8c83,\n  TRANSFORM_FEEDBACK_BUFFER_START: 0x8c84,\n  TRANSFORM_FEEDBACK_BUFFER_SIZE: 0x8c85,\n  TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 0x8c88,\n  MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 0x8c8a,\n  MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 0x8c8b,\n  INTERLEAVED_ATTRIBS: 0x8c8c,\n  SEPARATE_ATTRIBS: 0x8c8d,\n  TRANSFORM_FEEDBACK_BUFFER: 0x8c8e,\n  TRANSFORM_FEEDBACK_BUFFER_BINDING: 0x8c8f,\n  TRANSFORM_FEEDBACK: 0x8e22,\n  TRANSFORM_FEEDBACK_PAUSED: 0x8e23,\n  TRANSFORM_FEEDBACK_ACTIVE: 0x8e24,\n  TRANSFORM_FEEDBACK_BINDING: 0x8e25,\n  FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 0x8210,\n  FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 0x8211,\n  FRAMEBUFFER_ATTACHMENT_RED_SIZE: 0x8212,\n  FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 0x8213,\n  FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 0x8214,\n  FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 0x8215,\n  FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 0x8216,\n  FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 0x8217,\n  FRAMEBUFFER_DEFAULT: 0x8218,\n  DEPTH24_STENCIL8: 0x88f0,\n  DRAW_FRAMEBUFFER_BINDING: 0x8ca6,\n  READ_FRAMEBUFFER_BINDING: 0x8caa,\n  RENDERBUFFER_SAMPLES: 0x8cab,\n  FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 0x8cd4,\n  FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 0x8d56,\n  UNIFORM_BUFFER: 0x8a11,\n  UNIFORM_BUFFER_BINDING: 0x8a28,\n  UNIFORM_BUFFER_START: 0x8a29,\n  UNIFORM_BUFFER_SIZE: 0x8a2a,\n  MAX_VERTEX_UNIFORM_BLOCKS: 0x8a2b,\n  MAX_FRAGMENT_UNIFORM_BLOCKS: 0x8a2d,\n  MAX_COMBINED_UNIFORM_BLOCKS: 0x8a2e,\n  MAX_UNIFORM_BUFFER_BINDINGS: 0x8a2f,\n  MAX_UNIFORM_BLOCK_SIZE: 0x8a30,\n  MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 0x8a31,\n  MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 0x8a33,\n  UNIFORM_BUFFER_OFFSET_ALIGNMENT: 0x8a34,\n  ACTIVE_UNIFORM_BLOCKS: 0x8a36,\n  UNIFORM_TYPE: 0x8a37,\n  UNIFORM_SIZE: 0x8a38,\n  UNIFORM_BLOCK_INDEX: 0x8a3a,\n  UNIFORM_OFFSET: 0x8a3b,\n  UNIFORM_ARRAY_STRIDE: 0x8a3c,\n  UNIFORM_MATRIX_STRIDE: 0x8a3d,\n  UNIFORM_IS_ROW_MAJOR: 0x8a3e,\n  UNIFORM_BLOCK_BINDING: 0x8a3f,\n  UNIFORM_BLOCK_DATA_SIZE: 0x8a40,\n  UNIFORM_BLOCK_ACTIVE_UNIFORMS: 0x8a42,\n  UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 0x8a43,\n  UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 0x8a44,\n  UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 0x8a46,\n  OBJECT_TYPE: 0x9112,\n  SYNC_CONDITION: 0x9113,\n  SYNC_STATUS: 0x9114,\n  SYNC_FLAGS: 0x9115,\n  SYNC_FENCE: 0x9116,\n  SYNC_GPU_COMMANDS_COMPLETE: 0x9117,\n  UNSIGNALED: 0x9118,\n  SIGNALED: 0x9119,\n  ALREADY_SIGNALED: 0x911a,\n  TIMEOUT_EXPIRED: 0x911b,\n  CONDITION_SATISFIED: 0x911c,\n  WAIT_FAILED: 0x911d,\n  SYNC_FLUSH_COMMANDS_BIT: 0x00000001,\n  COLOR: 0x1800,\n  DEPTH: 0x1801,\n  STENCIL: 0x1802,\n  MIN: 0x8007,\n  MAX: 0x8008,\n  DEPTH_COMPONENT24: 0x81a6,\n  STREAM_READ: 0x88e1,\n  STREAM_COPY: 0x88e2,\n  STATIC_READ: 0x88e5,\n  STATIC_COPY: 0x88e6,\n  DYNAMIC_READ: 0x88e9,\n  DYNAMIC_COPY: 0x88ea,\n  DEPTH_COMPONENT32F: 0x8cac,\n  DEPTH32F_STENCIL8: 0x8cad,\n  INVALID_INDEX: 0xffffffff,\n  TIMEOUT_IGNORED: -1,\n  MAX_CLIENT_WAIT_TIMEOUT_WEBGL: 0x9247,\n  VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: 0x88fe,\n  UNMASKED_VENDOR_WEBGL: 0x9245,\n  UNMASKED_RENDERER_WEBGL: 0x9246,\n  MAX_TEXTURE_MAX_ANISOTROPY_EXT: 0x84ff,\n  TEXTURE_MAX_ANISOTROPY_EXT: 0x84fe,\n  COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83f0,\n  COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83f1,\n  COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83f2,\n  COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83f3,\n  COMPRESSED_R11_EAC: 0x9270,\n  COMPRESSED_SIGNED_R11_EAC: 0x9271,\n  COMPRESSED_RG11_EAC: 0x9272,\n  COMPRESSED_SIGNED_RG11_EAC: 0x9273,\n  COMPRESSED_RGB8_ETC2: 0x9274,\n  COMPRESSED_RGBA8_ETC2_EAC: 0x9275,\n  COMPRESSED_SRGB8_ETC2: 0x9276,\n  COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9277,\n  COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9278,\n  COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9279,\n  COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8c00,\n  COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8c02,\n  COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8c01,\n  COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8c03,\n  COMPRESSED_RGB_ETC1_WEBGL: 0x8d64,\n  COMPRESSED_RGB_ATC_WEBGL: 0x8c92,\n  COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL: 0x8c92,\n  COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL: 0x87ee,\n  UNSIGNED_INT_24_8_WEBGL: 0x84fa,\n  HALF_FLOAT_OES: 0x8d61,\n  RGBA32F_EXT: 0x8814,\n  RGB32F_EXT: 0x8815,\n  FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211,\n  UNSIGNED_NORMALIZED_EXT: 0x8c17,\n  MIN_EXT: 0x8007,\n  MAX_EXT: 0x8008,\n  SRGB_EXT: 0x8c40,\n  SRGB_ALPHA_EXT: 0x8c42,\n  SRGB8_ALPHA8_EXT: 0x8c43,\n  FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: 0x8210,\n  FRAGMENT_SHADER_DERIVATIVE_HINT_OES: 0x8b8b,\n  COLOR_ATTACHMENT0_WEBGL: 0x8ce0,\n  COLOR_ATTACHMENT1_WEBGL: 0x8ce1,\n  COLOR_ATTACHMENT2_WEBGL: 0x8ce2,\n  COLOR_ATTACHMENT3_WEBGL: 0x8ce3,\n  COLOR_ATTACHMENT4_WEBGL: 0x8ce4,\n  COLOR_ATTACHMENT5_WEBGL: 0x8ce5,\n  COLOR_ATTACHMENT6_WEBGL: 0x8ce6,\n  COLOR_ATTACHMENT7_WEBGL: 0x8ce7,\n  COLOR_ATTACHMENT8_WEBGL: 0x8ce8,\n  COLOR_ATTACHMENT9_WEBGL: 0x8ce9,\n  COLOR_ATTACHMENT10_WEBGL: 0x8cea,\n  COLOR_ATTACHMENT11_WEBGL: 0x8ceb,\n  COLOR_ATTACHMENT12_WEBGL: 0x8cec,\n  COLOR_ATTACHMENT13_WEBGL: 0x8ced,\n  COLOR_ATTACHMENT14_WEBGL: 0x8cee,\n  COLOR_ATTACHMENT15_WEBGL: 0x8cef,\n  DRAW_BUFFER0_WEBGL: 0x8825,\n  DRAW_BUFFER1_WEBGL: 0x8826,\n  DRAW_BUFFER2_WEBGL: 0x8827,\n  DRAW_BUFFER3_WEBGL: 0x8828,\n  DRAW_BUFFER4_WEBGL: 0x8829,\n  DRAW_BUFFER5_WEBGL: 0x882a,\n  DRAW_BUFFER6_WEBGL: 0x882b,\n  DRAW_BUFFER7_WEBGL: 0x882c,\n  DRAW_BUFFER8_WEBGL: 0x882d,\n  DRAW_BUFFER9_WEBGL: 0x882e,\n  DRAW_BUFFER10_WEBGL: 0x882f,\n  DRAW_BUFFER11_WEBGL: 0x8830,\n  DRAW_BUFFER12_WEBGL: 0x8831,\n  DRAW_BUFFER13_WEBGL: 0x8832,\n  DRAW_BUFFER14_WEBGL: 0x8833,\n  DRAW_BUFFER15_WEBGL: 0x8834,\n  MAX_COLOR_ATTACHMENTS_WEBGL: 0x8cdf,\n  MAX_DRAW_BUFFERS_WEBGL: 0x8824,\n  VERTEX_ARRAY_BINDING_OES: 0x85b5,\n  QUERY_COUNTER_BITS_EXT: 0x8864,\n  CURRENT_QUERY_EXT: 0x8865,\n  QUERY_RESULT_EXT: 0x8866,\n  QUERY_RESULT_AVAILABLE_EXT: 0x8867,\n  TIME_ELAPSED_EXT: 0x88bf,\n  TIMESTAMP_EXT: 0x8e28,\n  GPU_DISJOINT_EXT: 0x8fbb\n};\n//# sourceMappingURL=index.js.map","import GL from '@luma.gl/constants';\n\nexport const TYPE_ARRAY_MAP = {\n  UInt8: Uint8Array,\n  UInt16: Uint16Array,\n  UInt32: Uint32Array,\n  Float32: Float32Array,\n  UInt64: Float64Array\n};\n\nexport const GL_TYPE_MAP = {\n  UInt8: GL.UNSIGNED_BYTE,\n  UInt16: GL.UNSIGNED_INT,\n  Float32: GL.FLOAT,\n  UInt32: GL.UNSIGNED_INT,\n  UInt64: GL.DOUBLE\n};\n\nexport const I3S_NAMED_VERTEX_ATTRIBUTES = {\n  position: 'position',\n  normal: 'normal',\n  uv0: 'uv0',\n  color: 'color',\n  region: 'region'\n};\n\nexport const I3S_NAMED_GEOMETRY_ATTRIBUTES = {\n  vertexAttributes: 'vertexAttributes',\n  featureAttributeOrder: 'featureAttributeOrder',\n  featureAttributes: 'featureAttributes'\n};\n\nexport const I3S_NAMED_HEADER_ATTRIBUTES = {\n  header: 'header',\n  vertexCount: 'vertexCount',\n  featureCount: 'featureCount'\n};\n\nexport const SIZEOF = {\n  UInt8: 1,\n  UInt16: 2,\n  UInt32: 4,\n  Float32: 4,\n  UInt64: 8\n};\n\nexport const STRING_ATTRIBUTE_TYPE = 'String';\nexport const OBJECT_ID_ATTRIBUTE_TYPE = 'Oid32';\nexport const FLOAT_64_TYPE = 'Float64';\n","import type {TypedArray} from '@loaders.gl/schema';\nimport {load, parse} from '@loaders.gl/core';\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport {Ellipsoid} from '@math.gl/geospatial';\n\nimport type {LoaderOptions, LoaderContext} from '@loaders.gl/loader-utils';\nimport {ImageLoader} from '@loaders.gl/images';\nimport {DracoLoader} from '@loaders.gl/draco';\nimport {CompressedTextureLoader} from '@loaders.gl/textures';\n\nimport {Tileset, Tile} from '../../types';\nimport {getUrlWithToken} from '../utils/url-utils';\n\nimport {\n  GL_TYPE_MAP,\n  TYPE_ARRAY_MAP,\n  SIZEOF,\n  I3S_NAMED_HEADER_ATTRIBUTES,\n  I3S_NAMED_VERTEX_ATTRIBUTES,\n  I3S_NAMED_GEOMETRY_ATTRIBUTES\n} from './constants';\n\nconst scratchVector = new Vector3([0, 0, 0]);\n\nconst FORMAT_LOADER_MAP = {\n  jpeg: ImageLoader,\n  png: ImageLoader,\n  'ktx-etc2': CompressedTextureLoader,\n  dds: CompressedTextureLoader\n};\n\nconst I3S_ATTRIBUTE_TYPE = 'i3s-attribute-type';\n\nexport async function parseI3STileContent(\n  arrayBuffer: ArrayBuffer,\n  tile: Tile,\n  tileset: Tileset,\n  options?: LoaderOptions,\n  context?: LoaderContext\n) {\n  tile.content = tile.content || {};\n  tile.content.featureIds = tile.content.featureIds || null;\n\n  // construct featureData from defaultGeometrySchema;\n  tile.content.featureData = constructFeatureDataStruct(tile, tileset);\n  tile.content.attributes = {};\n\n  if (tile.textureUrl) {\n    const url = getUrlWithToken(tile.textureUrl, options?.i3s?.token);\n    const loader = FORMAT_LOADER_MAP[tile.textureFormat] || ImageLoader;\n    // @ts-ignore context must be defined\n    const response = await fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n\n    if (loader === ImageLoader) {\n      const options = {image: {type: 'data'}};\n      // @ts-ignore context must be defined\n      // Image constructor is not supported in worker thread.\n      // Do parsing image data on the main thread by using context to avoid worker issues.\n      tile.content.texture = await context.parse(arrayBuffer, options);\n    } else if (loader === CompressedTextureLoader) {\n      // @ts-ignore context must be defined\n      const texture = await load(arrayBuffer, CompressedTextureLoader);\n      tile.content.texture = {\n        compressed: true,\n        mipmaps: false,\n        width: texture[0].width,\n        height: texture[0].height,\n        data: texture\n      };\n    }\n  }\n\n  tile.content.material = makePbrMaterial(tile.materialDefinition, tile.content.texture);\n  if (tile.content.material) {\n    tile.content.texture = null;\n  }\n\n  return await parseI3SNodeGeometry(arrayBuffer, tile, context);\n}\n\n/* eslint-disable max-statements */\nasync function parseI3SNodeGeometry(\n  arrayBuffer: ArrayBuffer,\n  tile: Tile = {},\n  context?: LoaderContext\n) {\n  if (!tile.content) {\n    return tile;\n  }\n\n  const content = tile.content;\n  let attributes;\n  let vertexCount;\n  let byteOffset = 0;\n  let featureCount = 0;\n\n  if (tile.isDracoGeometry) {\n    const decompressedGeometry = await parse(arrayBuffer, DracoLoader, {\n      draco: {\n        attributeNameEntry: I3S_ATTRIBUTE_TYPE\n      }\n    });\n\n    vertexCount = decompressedGeometry.header.vertexCount;\n    const indices = decompressedGeometry.indices.value;\n    const {\n      POSITION,\n      NORMAL,\n      COLOR_0,\n      TEXCOORD_0,\n      ['feature-index']: featureIndex,\n      ['uv-region']: uvRegion\n    } = decompressedGeometry.attributes;\n\n    attributes = {\n      position: POSITION,\n      normal: NORMAL,\n      color: COLOR_0,\n      uv0: TEXCOORD_0,\n      uvRegion,\n      id: featureIndex,\n      indices\n    };\n\n    updateAttributesMetadata(attributes, decompressedGeometry);\n\n    const featureIds = getFeatureIdsFromFeatureIndexMetadata(featureIndex);\n\n    if (featureIds) {\n      flattenFeatureIdsByFeatureIndices(attributes, featureIds);\n    }\n  } else {\n    const {vertexAttributes, attributesOrder, featureAttributes, featureAttributeOrder} =\n      content.featureData;\n    // First 8 bytes reserved for header (vertexCount and featureCount)\n    const headers = parseHeaders(content, arrayBuffer);\n    byteOffset = headers.byteOffset;\n    vertexCount = headers.vertexCount;\n    featureCount = headers.featureCount;\n    // Getting vertex attributes such as positions, normals, colors, etc...\n    const {attributes: normalizedVertexAttributes, byteOffset: offset} = normalizeAttributes(\n      arrayBuffer,\n      byteOffset,\n      vertexAttributes,\n      vertexCount,\n      attributesOrder\n    );\n\n    // Getting feature attributes such as featureIds and faceRange\n    const {attributes: normalizedFeatureAttributes} = normalizeAttributes(\n      arrayBuffer,\n      offset,\n      featureAttributes,\n      featureCount,\n      featureAttributeOrder\n    );\n\n    flattenFeatureIdsByFaceRanges(normalizedFeatureAttributes);\n    attributes = concatAttributes(normalizedVertexAttributes, normalizedFeatureAttributes);\n  }\n\n  const {enuMatrix, cartographicOrigin, cartesianOrigin} = parsePositions(\n    attributes.position,\n    tile\n  );\n\n  const matrix = new Matrix4().multiplyRight(enuMatrix);\n\n  content.attributes = {\n    positions: attributes.position,\n    normals: attributes.normal,\n    colors: normalizeAttribute(attributes.color), // Normalize from UInt8\n    texCoords: attributes.uv0,\n    uvRegions: normalizeAttribute(attributes.uvRegion) // Normalize from UInt16\n  };\n  content.indices = attributes.indices || null;\n\n  if (attributes.id && attributes.id.value) {\n    tile.content.featureIds = attributes.id.value;\n  }\n\n  // Remove undefined attributes\n  for (const attributeIndex in content.attributes) {\n    if (!content.attributes[attributeIndex]) {\n      delete content.attributes[attributeIndex];\n    }\n  }\n\n  content.vertexCount = vertexCount;\n  content.cartographicCenter = cartographicOrigin;\n  content.cartesianOrigin = cartesianOrigin;\n  content.modelMatrix = matrix.invert();\n  content.byteLength = arrayBuffer.byteLength;\n\n  return tile;\n}\n\n/**\n * Update attributes with metadata from decompressed geometry.\n * @param decompressedGeometry\n * @param attributes\n */\nfunction updateAttributesMetadata(attributes, decompressedGeometry) {\n  for (const key in decompressedGeometry.loaderData.attributes) {\n    const dracoAttribute = decompressedGeometry.loaderData.attributes[key];\n\n    switch (dracoAttribute.name) {\n      case 'POSITION':\n        attributes.position.metadata = dracoAttribute.metadata;\n        break;\n      case 'feature-index':\n        attributes.id.metadata = dracoAttribute.metadata;\n        break;\n      default:\n        break;\n    }\n  }\n}\n\n/**\n * Do concatenation of attribute objects.\n * Done as separate fucntion to avoid ts errors.\n * @param {Object} normalizedVertexAttributes\n * @param {Object} normalizedFeatureAttributes\n * @returns {object} - result of attributes concatenation.\n */\nfunction concatAttributes(normalizedVertexAttributes, normalizedFeatureAttributes) {\n  return {...normalizedVertexAttributes, ...normalizedFeatureAttributes};\n}\n\n/**\n * Normalize attribute to range [0..1] . Eg. convert colors buffer from [255,255,255,255] to [1,1,1,1]\n * @param {Object} attribute - geometry attribute\n * @returns {Object} - geometry attribute in right format\n */\nfunction normalizeAttribute(attribute) {\n  if (!attribute) {\n    return attribute;\n  }\n  attribute.normalized = true;\n  return attribute;\n}\n\nfunction constructFeatureDataStruct(tile, tileset) {\n  // seed featureData from defaultGeometrySchema\n  const defaultGeometrySchema = tileset.store.defaultGeometrySchema;\n  const featureData = defaultGeometrySchema;\n  // populate the vertex attributes value types and values per element\n  for (const geometryAttribute in I3S_NAMED_GEOMETRY_ATTRIBUTES) {\n    for (const namedAttribute in I3S_NAMED_VERTEX_ATTRIBUTES) {\n      const attribute = defaultGeometrySchema[geometryAttribute][namedAttribute];\n      if (attribute) {\n        const {byteOffset = 0, count = 0, valueType, valuesPerElement} = attribute;\n\n        featureData[geometryAttribute][namedAttribute] = {\n          valueType,\n          valuesPerElement,\n          byteOffset,\n          count\n        };\n      }\n    }\n  }\n\n  featureData.attributesOrder = defaultGeometrySchema.ordering;\n  return featureData;\n}\n\nfunction parseHeaders(content, buffer) {\n  let byteOffset = 0;\n  // First 8 bytes reserved for header (vertexCount and featurecount)\n  let vertexCount = 0;\n  let featureCount = 0;\n  const headers = content.featureData[I3S_NAMED_HEADER_ATTRIBUTES.header];\n  for (const header in headers) {\n    const {property, type} = headers[header];\n    const TypedArrayTypeHeader = TYPE_ARRAY_MAP[type];\n    if (property === I3S_NAMED_HEADER_ATTRIBUTES.vertexCount) {\n      vertexCount = new TypedArrayTypeHeader(buffer, 0, 4)[0];\n      byteOffset += SIZEOF[type];\n    }\n    if (property === I3S_NAMED_HEADER_ATTRIBUTES.featureCount) {\n      featureCount = new TypedArrayTypeHeader(buffer, 4, 4)[0];\n      byteOffset += SIZEOF[type];\n    }\n  }\n  return {\n    vertexCount,\n    featureCount,\n    byteOffset\n  };\n}\n\n/* eslint-enable max-statements */\n\nfunction normalizeAttributes(\n  arrayBuffer,\n  byteOffset,\n  vertexAttributes,\n  vertexCount,\n  attributesOrder\n) {\n  const attributes = {};\n\n  // the order of attributes depend on the order being added to the vertexAttributes object\n  for (const attribute of attributesOrder) {\n    if (vertexAttributes[attribute]) {\n      const {valueType, valuesPerElement} = vertexAttributes[attribute];\n      // update count and byteOffset count by calculating from defaultGeometrySchema + binnary content\n      const count = vertexCount;\n      // protect from arrayBuffer read overunns by NOT assuming node has regions always even though its declared in defaultGeometrySchema.\n      // In i3s 1.6: client is required to decide that based on ./shared resource of the node (materialDefinitions.[Mat_id].params.vertexRegions == true)\n      // In i3s 1.7 the property has been rolled into the 3d scene layer json/node pages.\n      // Code below does not account when the bytelength is actually bigger than\n      // the calculated value (b\\c the tile potentially could have mesh segmentation information).\n      // In those cases tiles without regions could fail or have garbage values.\n      if (byteOffset + count * valuesPerElement > arrayBuffer.byteLength) {\n        break;\n      }\n      const buffer = arrayBuffer.slice(byteOffset);\n      let value: number[] | TypedArray = [];\n\n      if (valueType === 'UInt64') {\n        value = parseUint64Values(buffer, count * valuesPerElement, SIZEOF[valueType]);\n      } else {\n        const TypedArrayType = TYPE_ARRAY_MAP[valueType];\n        value = new TypedArrayType(buffer, 0, count * valuesPerElement);\n      }\n\n      attributes[attribute] = {\n        value,\n        type: GL_TYPE_MAP[valueType],\n        size: valuesPerElement\n      };\n\n      switch (attribute) {\n        case 'color':\n          // @ts-ignore\n          attributes.color.normalized = true;\n          break;\n        case 'position':\n        case 'region':\n        case 'normal':\n        default:\n      }\n\n      byteOffset = byteOffset + count * valuesPerElement * SIZEOF[valueType];\n    }\n  }\n\n  return {attributes, byteOffset};\n}\n\n/**\n * Parse buffer to return array of uint64 values\n *\n * @param buffer\n * @param elementsCount\n * @returns 64-bit array of values until precision is lost after Number.MAX_SAFE_INTEGER\n */\nfunction parseUint64Values(\n  buffer: ArrayBuffer,\n  elementsCount: number,\n  attributeSize: number\n): number[] {\n  const values: number[] = [];\n  const dataView = new DataView(buffer);\n  let offset = 0;\n\n  for (let index = 0; index < elementsCount; index++) {\n    // split 64-bit number into two 32-bit parts\n    const left = dataView.getUint32(offset, true);\n    const right = dataView.getUint32(offset + 4, true);\n    // combine the two 32-bit values\n    const value = left + 2 ** 32 * right;\n\n    values.push(value);\n    offset += attributeSize;\n  }\n\n  return values;\n}\n\nfunction parsePositions(attribute, tile) {\n  const mbs = tile.mbs;\n  const value = attribute.value;\n  const metadata = attribute.metadata;\n  const enuMatrix = new Matrix4();\n  const cartographicOrigin = new Vector3(mbs[0], mbs[1], mbs[2]);\n  const cartesianOrigin = new Vector3();\n  Ellipsoid.WGS84.cartographicToCartesian(cartographicOrigin, cartesianOrigin);\n  Ellipsoid.WGS84.eastNorthUpToFixedFrame(cartesianOrigin, enuMatrix);\n  attribute.value = offsetsToCartesians(value, metadata, cartographicOrigin);\n\n  return {\n    enuMatrix,\n    fixedFrameToENUMatrix: enuMatrix.invert(),\n    cartographicOrigin,\n    cartesianOrigin\n  };\n}\n\n/**\n * Converts position coordinates to absolute cartesian coordinates\n * @param {Float32Array} vertices - \"position\" attribute data\n * @param {Object} metadata - When the geometry is DRACO compressed, contain position attribute's metadata\n *  https://github.com/Esri/i3s-spec/blob/master/docs/1.7/compressedAttributes.cmn.md\n * @param {Vector3} cartographicOrigin - Cartographic origin coordinates\n * @returns {Float64Array} - converted \"position\" data\n */\nfunction offsetsToCartesians(vertices, metadata = {}, cartographicOrigin) {\n  const positions = new Float64Array(vertices.length);\n  const scaleX = (metadata['i3s-scale_x'] && metadata['i3s-scale_x'].double) || 1;\n  const scaleY = (metadata['i3s-scale_y'] && metadata['i3s-scale_y'].double) || 1;\n  for (let i = 0; i < positions.length; i += 3) {\n    positions[i] = vertices[i] * scaleX + cartographicOrigin.x;\n    positions[i + 1] = vertices[i + 1] * scaleY + cartographicOrigin.y;\n    positions[i + 2] = vertices[i + 2] + cartographicOrigin.z;\n  }\n\n  for (let i = 0; i < positions.length; i += 3) {\n    // @ts-ignore\n    Ellipsoid.WGS84.cartographicToCartesian(positions.subarray(i, i + 3), scratchVector);\n    positions[i] = scratchVector.x;\n    positions[i + 1] = scratchVector.y;\n    positions[i + 2] = scratchVector.z;\n  }\n\n  return positions;\n}\n\n/**\n * Makes a glTF-compatible PBR material from an I3S material definition\n * @param {object} materialDefinition - i3s material definition\n *  https://github.com/Esri/i3s-spec/blob/master/docs/1.7/materialDefinitions.cmn.md\n * @param {object} texture - texture image\n * @returns {object}\n */\nfunction makePbrMaterial(materialDefinition, texture) {\n  let pbrMaterial;\n  if (materialDefinition) {\n    pbrMaterial = {\n      ...materialDefinition,\n      pbrMetallicRoughness: materialDefinition.pbrMetallicRoughness\n        ? {...materialDefinition.pbrMetallicRoughness}\n        : {baseColorFactor: [255, 255, 255, 255]}\n    };\n  } else {\n    pbrMaterial = {\n      pbrMetallicRoughness: {}\n    };\n    if (texture) {\n      pbrMaterial.pbrMetallicRoughness.baseColorTexture = {texCoord: 0};\n    } else {\n      pbrMaterial.pbrMetallicRoughness.baseColorFactor = [255, 255, 255, 255];\n    }\n  }\n\n  // Set default 0.25 per spec https://github.com/Esri/i3s-spec/blob/master/docs/1.7/materialDefinitions.cmn.md\n  pbrMaterial.alphaCutoff = pbrMaterial.alphaCutoff || 0.25;\n\n  if (pbrMaterial.alphaMode) {\n    // I3S contain alphaMode in lowerCase\n    pbrMaterial.alphaMode = pbrMaterial.alphaMode.toUpperCase();\n  }\n\n  // Convert colors from [255,255,255,255] to [1,1,1,1]\n  if (pbrMaterial.emissiveFactor) {\n    pbrMaterial.emissiveFactor = convertColorFormat(pbrMaterial.emissiveFactor);\n  }\n  if (pbrMaterial.pbrMetallicRoughness && pbrMaterial.pbrMetallicRoughness.baseColorFactor) {\n    pbrMaterial.pbrMetallicRoughness.baseColorFactor = convertColorFormat(\n      pbrMaterial.pbrMetallicRoughness.baseColorFactor\n    );\n  }\n\n  setMaterialTexture(pbrMaterial, texture);\n\n  return pbrMaterial;\n}\n\n/**\n * Convert color from [255,255,255,255] to [1,1,1,1]\n * @param {Array} colorFactor - color array\n * @returns {Array} - new color array\n */\nfunction convertColorFormat(colorFactor) {\n  const normalizedColor = [...colorFactor];\n  for (let index = 0; index < colorFactor.length; index++) {\n    normalizedColor[index] = colorFactor[index] / 255;\n  }\n  return normalizedColor;\n}\n\n/**\n * Set texture in PBR material\n * @param {object} material - i3s material definition\n * @param {object} image - texture image\n * @returns {void}\n */\nfunction setMaterialTexture(material, image) {\n  const texture = {source: {image}};\n  // I3SLoader now support loading only one texture. This elseif sequence will assign this texture to one of\n  // properties defined in materialDefinition\n  if (material.pbrMetallicRoughness && material.pbrMetallicRoughness.baseColorTexture) {\n    material.pbrMetallicRoughness.baseColorTexture = {\n      ...material.pbrMetallicRoughness.baseColorTexture,\n      texture\n    };\n  } else if (material.emissiveTexture) {\n    material.emissiveTexture = {...material.emissiveTexture, texture};\n  } else if (\n    material.pbrMetallicRoughness &&\n    material.pbrMetallicRoughness.metallicRoughnessTexture\n  ) {\n    material.pbrMetallicRoughness.metallicRoughnessTexture = {\n      ...material.pbrMetallicRoughness.metallicRoughnessTexture,\n      texture\n    };\n  } else if (material.normalTexture) {\n    material.normalTexture = {...material.normalTexture, texture};\n  } else if (material.occlusionTexture) {\n    material.occlusionTexture = {...material.occlusionTexture, texture};\n  }\n}\n\n/**\n * Flatten feature ids using face ranges\n * @param {object} normalizedFeatureAttributes\n * @returns {void}\n */\nfunction flattenFeatureIdsByFaceRanges(normalizedFeatureAttributes) {\n  const {id, faceRange} = normalizedFeatureAttributes;\n\n  if (!id || !faceRange) {\n    return;\n  }\n\n  const featureIds = id.value;\n  const range = faceRange.value;\n  const featureIdsLength = range[range.length - 1] + 1;\n  const orderedFeatureIndices = new Uint32Array(featureIdsLength * 3);\n\n  let featureIndex = 0;\n  let startIndex = 0;\n\n  for (let index = 1; index < range.length; index += 2) {\n    const fillId = Number(featureIds[featureIndex]);\n    const endValue = range[index];\n    const prevValue = range[index - 1];\n    const trianglesCount = endValue - prevValue + 1;\n    const endIndex = startIndex + trianglesCount * 3;\n\n    orderedFeatureIndices.fill(fillId, startIndex, endIndex);\n\n    featureIndex++;\n    startIndex = endIndex;\n  }\n\n  normalizedFeatureAttributes.id.value = orderedFeatureIndices;\n}\n\n/**\n * Flatten feature ids using featureIndices\n * @param {object} attributes\n * @param {any} featureIds\n * @returns {void}\n */\nfunction flattenFeatureIdsByFeatureIndices(attributes, featureIds) {\n  const featureIndices = attributes.id.value;\n  const result = new Float32Array(featureIndices.length);\n\n  for (let index = 0; index < featureIndices.length; index++) {\n    result[index] = featureIds[featureIndices[index]];\n  }\n\n  attributes.id.value = result;\n}\n\n/**\n * Flatten feature ids using featureIndices\n * @param {object} featureIndex\n * @returns {Int32Array}\n */\nfunction getFeatureIdsFromFeatureIndexMetadata(featureIndex) {\n  return (\n    featureIndex &&\n    featureIndex.metadata &&\n    featureIndex.metadata['i3s-feature-ids'] &&\n    featureIndex.metadata['i3s-feature-ids'].intArray\n  );\n}\n","import type {LoaderWithParser, LoaderOptions, LoaderContext} from '@loaders.gl/loader-utils';\nimport {parseI3STileContent} from './lib/parsers/parse-i3s-tile-content';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\n\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n/**\n * Loader for I3S - Indexed 3D Scene Layer\n */\nexport const I3SContentLoader: LoaderWithParser = {\n  name: 'I3S Content (Indexed Scene Layers)',\n  id: 'i3s-content',\n  module: 'i3s',\n  worker: true,\n  version: VERSION,\n  mimeTypes: ['application/octet-stream'],\n  parse,\n  extensions: ['bin'],\n  options: {\n    'i3s-content': {}\n  }\n};\n\nasync function parse(data, options?: LoaderOptions, context?: LoaderContext) {\n  const {tile, tileset} = options?.i3s || {};\n  await parseI3STileContent(data, tile, tileset, options, context);\n  return tile.content;\n}\n","export const INTERSECTION = Object.freeze({\n  OUTSIDE: -1,\n  INTERSECTING: 0,\n  INSIDE: 1\n});\n//# sourceMappingURL=constants.js.map","import { Vector3 } from '@math.gl/core';\nimport { INTERSECTION } from '../../constants';\nconst scratchVector = new Vector3();\nconst scratchNormal = new Vector3();\nexport default class AxisAlignedBoundingBox {\n  constructor(minimum = [0, 0, 0], maximum = [0, 0, 0], center = null) {\n    center = center || scratchVector.copy(minimum).add(maximum).scale(0.5);\n    this.center = new Vector3(center);\n    this.halfDiagonal = new Vector3(maximum).subtract(this.center);\n    this.minimum = new Vector3(minimum);\n    this.maximum = new Vector3(maximum);\n  }\n\n  clone() {\n    return new AxisAlignedBoundingBox(this.minimum, this.maximum, this.center);\n  }\n\n  equals(right) {\n    return this === right || Boolean(right) && this.minimum.equals(right.minimum) && this.maximum.equals(right.maximum);\n  }\n\n  transform(transformation) {\n    this.center.transformAsPoint(transformation);\n    this.halfDiagonal.transform(transformation);\n    this.minimum.transform(transformation);\n    this.maximum.transform(transformation);\n    return this;\n  }\n\n  intersectPlane(plane) {\n    const {\n      halfDiagonal\n    } = this;\n    const normal = scratchNormal.from(plane.normal);\n    const e = halfDiagonal.x * Math.abs(normal.x) + halfDiagonal.y * Math.abs(normal.y) + halfDiagonal.z * Math.abs(normal.z);\n    const s = this.center.dot(normal) + plane.distance;\n\n    if (s - e > 0) {\n      return INTERSECTION.INSIDE;\n    }\n\n    if (s + e < 0) {\n      return INTERSECTION.OUTSIDE;\n    }\n\n    return INTERSECTION.INTERSECTING;\n  }\n\n  distanceTo(point) {\n    return Math.sqrt(this.distanceSquaredTo(point));\n  }\n\n  distanceSquaredTo(point) {\n    const offset = scratchVector.from(point).subtract(this.center);\n    const {\n      halfDiagonal\n    } = this;\n    let distanceSquared = 0.0;\n    let d;\n    d = Math.abs(offset.x) - halfDiagonal.x;\n\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.y) - halfDiagonal.y;\n\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.z) - halfDiagonal.z;\n\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    return distanceSquared;\n  }\n\n}\n//# sourceMappingURL=axis-aligned-bounding-box.js.map","import { Vector3 } from '@math.gl/core';\nimport * as mat4 from 'gl-matrix/mat4';\nimport { INTERSECTION } from '../../constants';\nconst scratchVector = new Vector3();\nconst scratchVector2 = new Vector3();\nexport default class BoundingSphere {\n  constructor(center = [0, 0, 0], radius = 0.0) {\n    this.radius = -0;\n    this.center = new Vector3();\n    this.fromCenterRadius(center, radius);\n  }\n\n  fromCenterRadius(center, radius) {\n    this.center.from(center);\n    this.radius = radius;\n    return this;\n  }\n\n  fromCornerPoints(corner, oppositeCorner) {\n    oppositeCorner = scratchVector.from(oppositeCorner);\n    this.center = new Vector3().from(corner).add(oppositeCorner).scale(0.5);\n    this.radius = this.center.distance(oppositeCorner);\n    return this;\n  }\n\n  equals(right) {\n    return this === right || Boolean(right) && this.center.equals(right.center) && this.radius === right.radius;\n  }\n\n  clone() {\n    return new BoundingSphere(this.center, this.radius);\n  }\n\n  union(boundingSphere) {\n    const leftCenter = this.center;\n    const leftRadius = this.radius;\n    const rightCenter = boundingSphere.center;\n    const rightRadius = boundingSphere.radius;\n    const toRightCenter = scratchVector.copy(rightCenter).subtract(leftCenter);\n    const centerSeparation = toRightCenter.magnitude();\n\n    if (leftRadius >= centerSeparation + rightRadius) {\n      return this.clone();\n    }\n\n    if (rightRadius >= centerSeparation + leftRadius) {\n      return boundingSphere.clone();\n    }\n\n    const halfDistanceBetweenTangentPoints = (leftRadius + centerSeparation + rightRadius) * 0.5;\n    scratchVector2.copy(toRightCenter).scale((-leftRadius + halfDistanceBetweenTangentPoints) / centerSeparation).add(leftCenter);\n    this.center.copy(scratchVector2);\n    this.radius = halfDistanceBetweenTangentPoints;\n    return this;\n  }\n\n  expand(point) {\n    point = scratchVector.from(point);\n    const radius = point.subtract(this.center).magnitude();\n\n    if (radius > this.radius) {\n      this.radius = radius;\n    }\n\n    return this;\n  }\n\n  transform(transform) {\n    this.center.transform(transform);\n    const scale = mat4.getScaling(scratchVector, transform);\n    this.radius = Math.max(scale[0], Math.max(scale[1], scale[2])) * this.radius;\n    return this;\n  }\n\n  distanceSquaredTo(point) {\n    point = scratchVector.from(point);\n    const delta = point.subtract(this.center);\n    return delta.lengthSquared() - this.radius * this.radius;\n  }\n\n  distanceTo(point) {\n    return Math.sqrt(this.distanceSquaredTo(point));\n  }\n\n  intersectPlane(plane) {\n    const center = this.center;\n    const radius = this.radius;\n    const normal = plane.normal;\n    const distanceToPlane = normal.dot(center) + plane.distance;\n\n    if (distanceToPlane < -radius) {\n      return INTERSECTION.OUTSIDE;\n    }\n\n    if (distanceToPlane < radius) {\n      return INTERSECTION.INTERSECTING;\n    }\n\n    return INTERSECTION.INSIDE;\n  }\n\n}\n//# sourceMappingURL=bounding-sphere.js.map","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import Matrix from './base/matrix';\nimport { checkVector, deprecated } from '../lib/validators';\nimport { vec4_transformMat3 } from '../lib/gl-matrix-extras';\nimport * as mat3 from 'gl-matrix/mat3';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0]);\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL1ROW0: 3,\n  COL1ROW1: 4,\n  COL1ROW2: 5,\n  COL2ROW0: 6,\n  COL2ROW1: 7,\n  COL2ROW2: 8\n});\nconst constants = {};\nexport default class Matrix3 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix3(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix3(ZERO));\n    return constants.ZERO;\n  }\n\n  get ELEMENTS() {\n    return 9;\n  }\n\n  get RANK() {\n    return 3;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  constructor(array) {\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0);\n\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    return this.check();\n  }\n\n  set(m00, m10, m20, m01, m11, m21, m02, m12, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  setRowMajor(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  determinant() {\n    return mat3.determinant(this);\n  }\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  fromQuaternion(q) {\n    mat3.fromQuat(this, q);\n    return this.check();\n  }\n\n  transpose() {\n    mat3.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat3.invert(this, this);\n    return this.check();\n  }\n\n  multiplyLeft(a) {\n    mat3.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat3.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotate(radians) {\n    mat3.rotate(this, this, radians);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat3.scale(this, this, factor);\n    } else {\n      mat3.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat3.translate(this, this, vec);\n    return this.check();\n  }\n\n  transform(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2.transformMat3(result || [-0, -0], vector, this);\n        break;\n\n      case 3:\n        result = vec3.transformMat3(result || [-0, -0, -0], vector, this);\n        break;\n\n      case 4:\n        result = vec4_transformMat3(result || [-0, -0, -0, -0], vector, this);\n        break;\n\n      default:\n        throw new Error('Illegal vector');\n    }\n\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  transformVector(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector2(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector3(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n}\n//# sourceMappingURL=matrix3.js.map","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import MathArray from './base/math-array';\nimport { checkNumber, checkVector } from '../lib/validators';\nimport assert from '../lib/assert';\nimport * as quat from 'gl-matrix/quat';\nimport * as vec4 from 'gl-matrix/vec4';\nconst IDENTITY_QUATERNION = [0, 0, 0, 1];\nexport default class Quaternion extends MathArray {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    super(-0, -0, -0, -0);\n\n    if (Array.isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      this.set(x, y, z, w);\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n\n  set(x, y, z, w) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n\n  fromMatrix3(m) {\n    quat.fromMat3(this, m);\n    return this.check();\n  }\n\n  identity() {\n    quat.identity(this);\n    return this.check();\n  }\n\n  fromAxisRotation(axis, rad) {\n    quat.setAxisAngle(this, axis, rad);\n    return this.check();\n  }\n\n  setAxisAngle(axis, rad) {\n    return this.fromAxisRotation(axis, rad);\n  }\n\n  get ELEMENTS() {\n    return 4;\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  set x(value) {\n    this[0] = checkNumber(value);\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  set y(value) {\n    this[1] = checkNumber(value);\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  get w() {\n    return this[3];\n  }\n\n  set w(value) {\n    this[3] = checkNumber(value);\n  }\n\n  len() {\n    return quat.length(this);\n  }\n\n  lengthSquared() {\n    return quat.squaredLength(this);\n  }\n\n  dot(a, b) {\n    if (b !== undefined) {\n      throw new Error('Quaternion.dot only takes one argument');\n    }\n\n    return quat.dot(this, a);\n  }\n\n  rotationTo(vectorA, vectorB) {\n    quat.rotationTo(this, vectorA, vectorB);\n    return this.check();\n  }\n\n  add(a, b) {\n    if (b !== undefined) {\n      throw new Error('Quaternion.add only takes one argument');\n    }\n\n    quat.add(this, this, a);\n    return this.check();\n  }\n\n  calculateW() {\n    quat.calculateW(this, this);\n    return this.check();\n  }\n\n  conjugate() {\n    quat.conjugate(this, this);\n    return this.check();\n  }\n\n  invert() {\n    quat.invert(this, this);\n    return this.check();\n  }\n\n  lerp(a, b, t) {\n    quat.lerp(this, a, b, t);\n    return this.check();\n  }\n\n  multiplyRight(a, b) {\n    assert(!b);\n    quat.multiply(this, this, a);\n    return this.check();\n  }\n\n  multiplyLeft(a, b) {\n    assert(!b);\n    quat.multiply(this, a, this);\n    return this.check();\n  }\n\n  normalize() {\n    const length = this.len();\n    const l = length > 0 ? 1 / length : 0;\n    this[0] = this[0] * l;\n    this[1] = this[1] * l;\n    this[2] = this[2] * l;\n    this[3] = this[3] * l;\n\n    if (length === 0) {\n      this[3] = 1;\n    }\n\n    return this.check();\n  }\n\n  rotateX(rad) {\n    quat.rotateX(this, this, rad);\n    return this.check();\n  }\n\n  rotateY(rad) {\n    quat.rotateY(this, this, rad);\n    return this.check();\n  }\n\n  rotateZ(rad) {\n    quat.rotateZ(this, this, rad);\n    return this.check();\n  }\n\n  scale(b) {\n    quat.scale(this, this, b);\n    return this.check();\n  }\n\n  slerp(start, target, ratio) {\n    switch (arguments.length) {\n      case 1:\n        ({\n          start = IDENTITY_QUATERNION,\n          target,\n          ratio\n        } = arguments[0]);\n        break;\n\n      case 2:\n        [target, ratio] = arguments;\n        start = this;\n        break;\n\n      default:\n    }\n\n    quat.slerp(this, start, target, ratio);\n    return this.check();\n  }\n\n  transformVector4(vector, result = vector) {\n    vec4.transformQuat(result, vector, this);\n    return checkVector(result, 4);\n  }\n\n  lengthSq() {\n    return this.lengthSquared();\n  }\n\n  setFromAxisAngle(axis, rad) {\n    return this.setAxisAngle(axis, rad);\n  }\n\n  premultiply(a, b) {\n    return this.multiplyLeft(a, b);\n  }\n\n  multiply(a, b) {\n    return this.multiplyRight(a, b);\n  }\n\n}\n//# sourceMappingURL=quaternion.js.map","import { Vector3, Matrix3, Quaternion } from '@math.gl/core';\nimport BoundingSphere from './bounding-sphere';\nimport { INTERSECTION } from '../../constants';\nconst scratchVector3 = new Vector3();\nconst scratchOffset = new Vector3();\nconst scratchVectorU = new Vector3();\nconst scratchVectorV = new Vector3();\nconst scratchVectorW = new Vector3();\nconst scratchCorner = new Vector3();\nconst scratchToCenter = new Vector3();\nconst MATRIX3 = {\n  COLUMN0ROW0: 0,\n  COLUMN0ROW1: 1,\n  COLUMN0ROW2: 2,\n  COLUMN1ROW0: 3,\n  COLUMN1ROW1: 4,\n  COLUMN1ROW2: 5,\n  COLUMN2ROW0: 6,\n  COLUMN2ROW1: 7,\n  COLUMN2ROW2: 8\n};\nexport default class OrientedBoundingBox {\n  constructor(center = [0, 0, 0], halfAxes = [0, 0, 0, 0, 0, 0, 0, 0, 0]) {\n    this.center = new Vector3().from(center);\n    this.halfAxes = new Matrix3(halfAxes);\n  }\n\n  get halfSize() {\n    const xAxis = this.halfAxes.getColumn(0);\n    const yAxis = this.halfAxes.getColumn(1);\n    const zAxis = this.halfAxes.getColumn(2);\n    return [new Vector3(xAxis).len(), new Vector3(yAxis).len(), new Vector3(zAxis).len()];\n  }\n\n  get quaternion() {\n    const xAxis = this.halfAxes.getColumn(0);\n    const yAxis = this.halfAxes.getColumn(1);\n    const zAxis = this.halfAxes.getColumn(2);\n    const normXAxis = new Vector3(xAxis).normalize();\n    const normYAxis = new Vector3(yAxis).normalize();\n    const normZAxis = new Vector3(zAxis).normalize();\n    return new Quaternion().fromMatrix3(new Matrix3([...normXAxis, ...normYAxis, ...normZAxis]));\n  }\n\n  fromCenterHalfSizeQuaternion(center, halfSize, quaternion) {\n    const quaternionObject = new Quaternion(quaternion);\n    const directionsMatrix = new Matrix3().fromQuaternion(quaternionObject);\n    directionsMatrix[0] = directionsMatrix[0] * halfSize[0];\n    directionsMatrix[1] = directionsMatrix[1] * halfSize[0];\n    directionsMatrix[2] = directionsMatrix[2] * halfSize[0];\n    directionsMatrix[3] = directionsMatrix[3] * halfSize[1];\n    directionsMatrix[4] = directionsMatrix[4] * halfSize[1];\n    directionsMatrix[5] = directionsMatrix[5] * halfSize[1];\n    directionsMatrix[6] = directionsMatrix[6] * halfSize[2];\n    directionsMatrix[7] = directionsMatrix[7] * halfSize[2];\n    directionsMatrix[8] = directionsMatrix[8] * halfSize[2];\n    this.center = new Vector3().from(center);\n    this.halfAxes = directionsMatrix;\n    return this;\n  }\n\n  clone() {\n    return new OrientedBoundingBox(this.center, this.halfAxes);\n  }\n\n  equals(right) {\n    return this === right || Boolean(right) && this.center.equals(right.center) && this.halfAxes.equals(right.halfAxes);\n  }\n\n  getBoundingSphere(result = new BoundingSphere()) {\n    const halfAxes = this.halfAxes;\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n    const cornerVector = scratchVector3.copy(u).add(v).add(w);\n    result.center.copy(this.center);\n    result.radius = cornerVector.magnitude();\n    return result;\n  }\n\n  intersectPlane(plane) {\n    const center = this.center;\n    const normal = plane.normal;\n    const halfAxes = this.halfAxes;\n    const normalX = normal.x;\n    const normalY = normal.y;\n    const normalZ = normal.z;\n    const radEffective = Math.abs(normalX * halfAxes[MATRIX3.COLUMN0ROW0] + normalY * halfAxes[MATRIX3.COLUMN0ROW1] + normalZ * halfAxes[MATRIX3.COLUMN0ROW2]) + Math.abs(normalX * halfAxes[MATRIX3.COLUMN1ROW0] + normalY * halfAxes[MATRIX3.COLUMN1ROW1] + normalZ * halfAxes[MATRIX3.COLUMN1ROW2]) + Math.abs(normalX * halfAxes[MATRIX3.COLUMN2ROW0] + normalY * halfAxes[MATRIX3.COLUMN2ROW1] + normalZ * halfAxes[MATRIX3.COLUMN2ROW2]);\n    const distanceToPlane = normal.dot(center) + plane.distance;\n\n    if (distanceToPlane <= -radEffective) {\n      return INTERSECTION.OUTSIDE;\n    } else if (distanceToPlane >= radEffective) {\n      return INTERSECTION.INSIDE;\n    }\n\n    return INTERSECTION.INTERSECTING;\n  }\n\n  distanceTo(point) {\n    return Math.sqrt(this.distanceSquaredTo(point));\n  }\n\n  distanceSquaredTo(point) {\n    const offset = scratchOffset.from(point).subtract(this.center);\n    const halfAxes = this.halfAxes;\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n    const uHalf = u.magnitude();\n    const vHalf = v.magnitude();\n    const wHalf = w.magnitude();\n    u.normalize();\n    v.normalize();\n    w.normalize();\n    let distanceSquared = 0.0;\n    let d;\n    d = Math.abs(offset.dot(u)) - uHalf;\n\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.dot(v)) - vHalf;\n\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.dot(w)) - wHalf;\n\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    return distanceSquared;\n  }\n\n  computePlaneDistances(position, direction, result = [-0, -0]) {\n    let minDist = Number.POSITIVE_INFINITY;\n    let maxDist = Number.NEGATIVE_INFINITY;\n    const center = this.center;\n    const halfAxes = this.halfAxes;\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n    const corner = scratchCorner.copy(u).add(v).add(w).add(center);\n    const toCenter = scratchToCenter.copy(corner).subtract(position);\n    let mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    corner.copy(center).add(u).add(v).subtract(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    corner.copy(center).add(u).subtract(v).add(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    corner.copy(center).add(u).subtract(v).subtract(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    center.copy(corner).subtract(u).add(v).add(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    center.copy(corner).subtract(u).add(v).subtract(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    center.copy(corner).subtract(u).subtract(v).add(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    center.copy(corner).subtract(u).subtract(v).subtract(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    result[0] = minDist;\n    result[1] = maxDist;\n    return result;\n  }\n\n  transform(transformation) {\n    this.center.transformAsPoint(transformation);\n    const xAxis = this.halfAxes.getColumn(0, scratchVectorU);\n    xAxis.transformAsPoint(transformation);\n    const yAxis = this.halfAxes.getColumn(1, scratchVectorV);\n    yAxis.transformAsPoint(transformation);\n    const zAxis = this.halfAxes.getColumn(2, scratchVectorW);\n    zAxis.transformAsPoint(transformation);\n    this.halfAxes = new Matrix3([...xAxis, ...yAxis, ...zAxis]);\n    return this;\n  }\n\n  getTransform() {\n    throw new Error('not implemented');\n  }\n\n}\n//# sourceMappingURL=oriented-bounding-box.js.map","import { Vector3, equals, assert } from '@math.gl/core';\nconst scratchPosition = new Vector3();\nconst scratchNormal = new Vector3();\nexport default class Plane {\n  constructor(normal = [0, 0, 1], distance = 0) {\n    this.normal = new Vector3();\n    this.distance = -0;\n    this.fromNormalDistance(normal, distance);\n  }\n\n  fromNormalDistance(normal, distance) {\n    assert(Number.isFinite(distance));\n    this.normal.from(normal).normalize();\n    this.distance = distance;\n    return this;\n  }\n\n  fromPointNormal(point, normal) {\n    point = scratchPosition.from(point);\n    this.normal.from(normal).normalize();\n    const distance = -this.normal.dot(point);\n    this.distance = distance;\n    return this;\n  }\n\n  fromCoefficients(a, b, c, d) {\n    this.normal.set(a, b, c);\n    assert(equals(this.normal.len(), 1));\n    this.distance = d;\n    return this;\n  }\n\n  clone(plane) {\n    return new Plane(this.normal, this.distance);\n  }\n\n  equals(right) {\n    return equals(this.distance, right.distance) && equals(this.normal, right.normal);\n  }\n\n  getPointDistance(point) {\n    return this.normal.dot(point) + this.distance;\n  }\n\n  transform(matrix4) {\n    const normal = scratchNormal.copy(this.normal).transformAsVector(matrix4).normalize();\n    const point = this.normal.scale(-this.distance).transform(matrix4);\n    return this.fromPointNormal(point, normal);\n  }\n\n  projectPointOntoPlane(point, result = [0, 0, 0]) {\n    point = scratchPosition.from(point);\n    const pointDistance = this.getPointDistance(point);\n    const scaledNormal = scratchNormal.copy(this.normal).scale(pointDistance);\n    return point.subtract(scaledNormal).to(result);\n  }\n\n}\n//# sourceMappingURL=plane.js.map","import { Vector3, Vector4, assert } from '@math.gl/core';\nimport { INTERSECTION } from '../constants';\nimport Plane from './plane';\nconst faces = [new Vector3([1, 0, 0]), new Vector3([0, 1, 0]), new Vector3([0, 0, 1])];\nconst scratchPlaneCenter = new Vector3();\nconst scratchPlaneNormal = new Vector3();\nconst scratchPlane = new Plane(new Vector3(1.0, 0.0, 0.0), 0.0);\nexport default class CullingVolume {\n  static get MASK_OUTSIDE() {\n    return 0xffffffff;\n  }\n\n  static get MASK_INSIDE() {\n    return 0x00000000;\n  }\n\n  static get MASK_INDETERMINATE() {\n    return 0x7fffffff;\n  }\n\n  constructor(planes = []) {\n    this.planes = planes;\n    assert(this.planes.every(plane => plane instanceof Plane));\n  }\n\n  fromBoundingSphere(boundingSphere) {\n    this.planes.length = 2 * faces.length;\n    const center = boundingSphere.center;\n    const radius = boundingSphere.radius;\n    let planeIndex = 0;\n\n    for (const faceNormal of faces) {\n      let plane0 = this.planes[planeIndex];\n      let plane1 = this.planes[planeIndex + 1];\n\n      if (!plane0) {\n        plane0 = this.planes[planeIndex] = new Plane();\n      }\n\n      if (!plane1) {\n        plane1 = this.planes[planeIndex + 1] = new Plane();\n      }\n\n      const plane0Center = scratchPlaneCenter.copy(faceNormal).scale(-radius).add(center);\n      const plane0Distance = -faceNormal.dot(plane0Center);\n      plane0.fromPointNormal(plane0Center, faceNormal);\n      const plane1Center = scratchPlaneCenter.copy(faceNormal).scale(radius).add(center);\n      const negatedFaceNormal = scratchPlaneNormal.copy(faceNormal).negate();\n      const plane1Distance = -negatedFaceNormal.dot(plane1Center);\n      plane1.fromPointNormal(plane1Center, negatedFaceNormal);\n      planeIndex += 2;\n    }\n\n    return this;\n  }\n\n  computeVisibility(boundingVolume) {\n    assert(boundingVolume);\n    let intersect = INTERSECTION.INSIDE;\n\n    for (const plane of this.planes) {\n      const result = boundingVolume.intersectPlane(plane);\n\n      switch (result) {\n        case INTERSECTION.OUTSIDE:\n          return INTERSECTION.OUTSIDE;\n\n        case INTERSECTION.INTERSECTING:\n          intersect = INTERSECTION.INTERSECTING;\n          break;\n\n        default:\n      }\n    }\n\n    return intersect;\n  }\n\n  computeVisibilityWithPlaneMask(boundingVolume, parentPlaneMask) {\n    assert(boundingVolume, 'boundingVolume is required.');\n    assert(Number.isFinite(parentPlaneMask), 'parentPlaneMask is required.');\n\n    if (parentPlaneMask === CullingVolume.MASK_OUTSIDE || parentPlaneMask === CullingVolume.MASK_INSIDE) {\n      return parentPlaneMask;\n    }\n\n    let mask = CullingVolume.MASK_INSIDE;\n    const planes = this.planes;\n\n    for (let k = 0; k < this.planes.length; ++k) {\n      const flag = k < 31 ? 1 << k : 0;\n\n      if (k < 31 && (parentPlaneMask & flag) === 0) {\n        continue;\n      }\n\n      const plane = planes[k];\n      const result = boundingVolume.intersectPlane(plane);\n\n      if (result === INTERSECTION.OUTSIDE) {\n        return CullingVolume.MASK_OUTSIDE;\n      } else if (result === INTERSECTION.INTERSECTING) {\n        mask |= flag;\n      }\n    }\n\n    return mask;\n  }\n\n}\n//# sourceMappingURL=culling-volume.js.map","import { Vector3, Matrix4, assert } from '@math.gl/core';\nimport CullingVolume from './culling-volume';\nimport Plane from './plane';\nconst scratchPlaneUpVector = new Vector3();\nconst scratchPlaneRightVector = new Vector3();\nconst scratchPlaneNearCenter = new Vector3();\nconst scratchPlaneFarCenter = new Vector3();\nconst scratchPlaneNormal = new Vector3();\nexport default class PerspectiveOffCenterFrustum {\n  constructor(options = {}) {\n    options = {\n      near: 1.0,\n      far: 500000000.0,\n      ...options\n    };\n    this.left = options.left;\n    this._left = undefined;\n    this.right = options.right;\n    this._right = undefined;\n    this.top = options.top;\n    this._top = undefined;\n    this.bottom = options.bottom;\n    this._bottom = undefined;\n    this.near = options.near;\n    this._near = this.near;\n    this.far = options.far;\n    this._far = this.far;\n    this._cullingVolume = new CullingVolume([new Plane(), new Plane(), new Plane(), new Plane(), new Plane(), new Plane()]);\n    this._perspectiveMatrix = new Matrix4();\n    this._infinitePerspective = new Matrix4();\n  }\n\n  clone() {\n    return new PerspectiveOffCenterFrustum({\n      right: this.right,\n      left: this.left,\n      top: this.top,\n      bottom: this.bottom,\n      near: this.near,\n      far: this.far\n    });\n  }\n\n  equals(other) {\n    return other && other instanceof PerspectiveOffCenterFrustum && this.right === other.right && this.left === other.left && this.top === other.top && this.bottom === other.bottom && this.near === other.near && this.far === other.far;\n  }\n\n  get projectionMatrix() {\n    update(this);\n    return this._perspectiveMatrix;\n  }\n\n  get infiniteProjectionMatrix() {\n    update(this);\n    return this._infinitePerspective;\n  }\n\n  computeCullingVolume(position, direction, up) {\n    assert(position, 'position is required.');\n    assert(direction, 'direction is required.');\n    assert(up, 'up is required.');\n    const planes = this._cullingVolume.planes;\n    up = scratchPlaneUpVector.copy(up).normalize();\n    const right = scratchPlaneRightVector.copy(direction).cross(up).normalize();\n    const nearCenter = scratchPlaneNearCenter.copy(direction).multiplyByScalar(this.near).add(position);\n    const farCenter = scratchPlaneFarCenter.copy(direction).multiplyByScalar(this.far).add(position);\n    let normal = scratchPlaneNormal;\n    normal.copy(right).multiplyByScalar(this.left).add(nearCenter).subtract(position).cross(up);\n    planes[0].fromPointNormal(position, normal);\n    normal.copy(right).multiplyByScalar(this.right).add(nearCenter).subtract(position).cross(up).negate();\n    planes[1].fromPointNormal(position, normal);\n    normal.copy(up).multiplyByScalar(this.bottom).add(nearCenter).subtract(position).cross(right).negate();\n    planes[2].fromPointNormal(position, normal);\n    normal.copy(up).multiplyByScalar(this.top).add(nearCenter).subtract(position).cross(right);\n    planes[3].fromPointNormal(position, normal);\n    normal = new Vector3().copy(direction);\n    planes[4].fromPointNormal(nearCenter, normal);\n    normal.negate();\n    planes[5].fromPointNormal(farCenter, normal);\n    return this._cullingVolume;\n  }\n\n  getPixelDimensions(drawingBufferWidth, drawingBufferHeight, distance, result) {\n    update(this);\n    assert(Number.isFinite(drawingBufferWidth) && Number.isFinite(drawingBufferHeight));\n    assert(drawingBufferWidth > 0);\n    assert(drawingBufferHeight > 0);\n    assert(distance > 0);\n    assert(result);\n    const inverseNear = 1.0 / this.near;\n    let tanTheta = this.top * inverseNear;\n    const pixelHeight = 2.0 * distance * tanTheta / drawingBufferHeight;\n    tanTheta = this.right * inverseNear;\n    const pixelWidth = 2.0 * distance * tanTheta / drawingBufferWidth;\n    result.x = pixelWidth;\n    result.y = pixelHeight;\n    return result;\n  }\n\n}\n\nfunction update(frustum) {\n  assert(Number.isFinite(frustum.right) && Number.isFinite(frustum.left) && Number.isFinite(frustum.top) && Number.isFinite(frustum.bottom) && Number.isFinite(frustum.near) && Number.isFinite(frustum.far));\n  const {\n    top,\n    bottom,\n    right,\n    left,\n    near,\n    far\n  } = frustum;\n\n  if (top !== frustum._top || bottom !== frustum._bottom || left !== frustum._left || right !== frustum._right || near !== frustum._near || far !== frustum._far) {\n    assert(frustum.near > 0 && frustum.near < frustum.far, 'near must be greater than zero and less than far.');\n    frustum._left = left;\n    frustum._right = right;\n    frustum._top = top;\n    frustum._bottom = bottom;\n    frustum._near = near;\n    frustum._far = far;\n    frustum._perspectiveMatrix = new Matrix4().frustum({\n      left,\n      right,\n      bottom,\n      top,\n      near,\n      far\n    });\n    frustum._infinitePerspective = new Matrix4().frustum({\n      left,\n      right,\n      bottom,\n      top,\n      near,\n      far: Infinity\n    });\n  }\n}\n//# sourceMappingURL=perspective-off-center-frustum.js.map","import { Vector3 } from '@math.gl/core';\nimport BoundingSphere from '../bounding-volumes/bounding-sphere';\nconst fromPointsXMin = new Vector3();\nconst fromPointsYMin = new Vector3();\nconst fromPointsZMin = new Vector3();\nconst fromPointsXMax = new Vector3();\nconst fromPointsYMax = new Vector3();\nconst fromPointsZMax = new Vector3();\nconst fromPointsCurrentPos = new Vector3();\nconst fromPointsScratch = new Vector3();\nconst fromPointsRitterCenter = new Vector3();\nconst fromPointsMinBoxPt = new Vector3();\nconst fromPointsMaxBoxPt = new Vector3();\nconst fromPointsNaiveCenterScratch = new Vector3();\nconst volumeConstant = 4.0 / 3.0 * Math.PI;\nexport default function makeBoundingSphereFromPoints(positions, result = new BoundingSphere()) {\n  if (!positions || positions.length === 0) {\n    return result.fromCenterRadius([0, 0, 0], 0);\n  }\n\n  const currentPos = fromPointsCurrentPos.copy(positions[0]);\n  const xMin = fromPointsXMin.copy(currentPos);\n  const yMin = fromPointsYMin.copy(currentPos);\n  const zMin = fromPointsZMin.copy(currentPos);\n  const xMax = fromPointsXMax.copy(currentPos);\n  const yMax = fromPointsYMax.copy(currentPos);\n  const zMax = fromPointsZMax.copy(currentPos);\n\n  for (const position of positions) {\n    currentPos.copy(position);\n    const x = currentPos.x;\n    const y = currentPos.y;\n    const z = currentPos.z;\n\n    if (x < xMin.x) {\n      currentPos.copy(xMin);\n    }\n\n    if (x > xMax.x) {\n      currentPos.copy(xMax);\n    }\n\n    if (y < yMin.y) {\n      currentPos.copy(yMin);\n    }\n\n    if (y > yMax.y) {\n      currentPos.copy(yMax);\n    }\n\n    if (z < zMin.z) {\n      currentPos.copy(zMin);\n    }\n\n    if (z > zMax.z) {\n      currentPos.copy(zMax);\n    }\n  }\n\n  const xSpan = fromPointsScratch.copy(xMax).subtract(xMin).magnitudeSquared();\n  const ySpan = fromPointsScratch.copy(yMax).subtract(yMin).magnitudeSquared();\n  const zSpan = fromPointsScratch.copy(zMax).subtract(zMin).magnitudeSquared();\n  let diameter1 = xMin;\n  let diameter2 = xMax;\n  let maxSpan = xSpan;\n\n  if (ySpan > maxSpan) {\n    maxSpan = ySpan;\n    diameter1 = yMin;\n    diameter2 = yMax;\n  }\n\n  if (zSpan > maxSpan) {\n    maxSpan = zSpan;\n    diameter1 = zMin;\n    diameter2 = zMax;\n  }\n\n  const ritterCenter = fromPointsRitterCenter;\n  ritterCenter.x = (diameter1.x + diameter2.x) * 0.5;\n  ritterCenter.y = (diameter1.y + diameter2.y) * 0.5;\n  ritterCenter.z = (diameter1.z + diameter2.z) * 0.5;\n  let radiusSquared = fromPointsScratch.copy(diameter2).subtract(ritterCenter).magnitudeSquared();\n  let ritterRadius = Math.sqrt(radiusSquared);\n  const minBoxPt = fromPointsMinBoxPt;\n  minBoxPt.x = xMin.x;\n  minBoxPt.y = yMin.y;\n  minBoxPt.z = zMin.z;\n  const maxBoxPt = fromPointsMaxBoxPt;\n  maxBoxPt.x = xMax.x;\n  maxBoxPt.y = yMax.y;\n  maxBoxPt.z = zMax.z;\n  const naiveCenter = fromPointsNaiveCenterScratch.copy(minBoxPt).add(maxBoxPt).multiplyByScalar(0.5);\n  let naiveRadius = 0;\n\n  for (const position of positions) {\n    currentPos.copy(position);\n    const r = fromPointsScratch.copy(currentPos).subtract(naiveCenter).magnitude();\n\n    if (r > naiveRadius) {\n      naiveRadius = r;\n    }\n\n    const oldCenterToPointSquared = fromPointsScratch.copy(currentPos).subtract(ritterCenter).magnitudeSquared();\n\n    if (oldCenterToPointSquared > radiusSquared) {\n      const oldCenterToPoint = Math.sqrt(oldCenterToPointSquared);\n      ritterRadius = (ritterRadius + oldCenterToPoint) * 0.5;\n      radiusSquared = ritterRadius * ritterRadius;\n      const oldToNew = oldCenterToPoint - ritterRadius;\n      ritterCenter.x = (ritterRadius * ritterCenter.x + oldToNew * currentPos.x) / oldCenterToPoint;\n      ritterCenter.y = (ritterRadius * ritterCenter.y + oldToNew * currentPos.y) / oldCenterToPoint;\n      ritterCenter.z = (ritterRadius * ritterCenter.z + oldToNew * currentPos.z) / oldCenterToPoint;\n    }\n  }\n\n  if (ritterRadius < naiveRadius) {\n    ritterCenter.to(result.center);\n    result.radius = ritterRadius;\n  } else {\n    naiveCenter.to(result.center);\n    result.radius = naiveRadius;\n  }\n\n  return result;\n}\n//# sourceMappingURL=bounding-sphere-from-points.js.map","import { Matrix3, _MathUtils } from '@math.gl/core';\nconst scratchMatrix = new Matrix3();\nconst scratchUnitary = new Matrix3();\nconst scratchDiagonal = new Matrix3();\nconst jMatrix = new Matrix3();\nconst jMatrixTranspose = new Matrix3();\nexport default function computeEigenDecomposition(matrix, result = {}) {\n  const EIGEN_TOLERANCE = _MathUtils.EPSILON20;\n  const EIGEN_MAX_SWEEPS = 10;\n  let count = 0;\n  let sweep = 0;\n  const unitaryMatrix = scratchUnitary;\n  const diagonalMatrix = scratchDiagonal;\n  unitaryMatrix.identity();\n  diagonalMatrix.copy(matrix);\n  const epsilon = EIGEN_TOLERANCE * computeFrobeniusNorm(diagonalMatrix);\n\n  while (sweep < EIGEN_MAX_SWEEPS && offDiagonalFrobeniusNorm(diagonalMatrix) > epsilon) {\n    shurDecomposition(diagonalMatrix, jMatrix);\n    jMatrixTranspose.copy(jMatrix).transpose();\n    diagonalMatrix.multiplyRight(jMatrix);\n    diagonalMatrix.multiplyLeft(jMatrixTranspose);\n    unitaryMatrix.multiplyRight(jMatrix);\n\n    if (++count > 2) {\n      ++sweep;\n      count = 0;\n    }\n  }\n\n  result.unitary = unitaryMatrix.toTarget(result.unitary);\n  result.diagonal = diagonalMatrix.toTarget(result.diagonal);\n  return result;\n}\n\nfunction computeFrobeniusNorm(matrix) {\n  let norm = 0.0;\n\n  for (let i = 0; i < 9; ++i) {\n    const temp = matrix[i];\n    norm += temp * temp;\n  }\n\n  return Math.sqrt(norm);\n}\n\nconst rowVal = [1, 0, 0];\nconst colVal = [2, 2, 1];\n\nfunction offDiagonalFrobeniusNorm(matrix) {\n  let norm = 0.0;\n\n  for (let i = 0; i < 3; ++i) {\n    const temp = matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])];\n    norm += 2.0 * temp * temp;\n  }\n\n  return Math.sqrt(norm);\n}\n\nfunction shurDecomposition(matrix, result) {\n  const tolerance = _MathUtils.EPSILON15;\n  let maxDiagonal = 0.0;\n  let rotAxis = 1;\n\n  for (let i = 0; i < 3; ++i) {\n    const temp = Math.abs(matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])]);\n\n    if (temp > maxDiagonal) {\n      rotAxis = i;\n      maxDiagonal = temp;\n    }\n  }\n\n  const p = rowVal[rotAxis];\n  const q = colVal[rotAxis];\n  let c = 1.0;\n  let s = 0.0;\n\n  if (Math.abs(matrix[scratchMatrix.getElementIndex(q, p)]) > tolerance) {\n    const qq = matrix[scratchMatrix.getElementIndex(q, q)];\n    const pp = matrix[scratchMatrix.getElementIndex(p, p)];\n    const qp = matrix[scratchMatrix.getElementIndex(q, p)];\n    const tau = (qq - pp) / 2.0 / qp;\n    let t;\n\n    if (tau < 0.0) {\n      t = -1.0 / (-tau + Math.sqrt(1.0 + tau * tau));\n    } else {\n      t = 1.0 / (tau + Math.sqrt(1.0 + tau * tau));\n    }\n\n    c = 1.0 / Math.sqrt(1.0 + t * t);\n    s = t * c;\n  }\n\n  Matrix3.IDENTITY.to(result);\n  result[scratchMatrix.getElementIndex(p, p)] = result[scratchMatrix.getElementIndex(q, q)] = c;\n  result[scratchMatrix.getElementIndex(q, p)] = s;\n  result[scratchMatrix.getElementIndex(p, q)] = -s;\n  return result;\n}\n//# sourceMappingURL=compute-eigen-decomposition.js.map","import { Vector3, Matrix3 } from '@math.gl/core';\nimport computeEigenDecomposition from './compute-eigen-decomposition';\nimport OrientedBoundingBox from '../bounding-volumes/oriented-bounding-box';\nimport AxisAlignedBoundingBox from '../bounding-volumes/axis-aligned-bounding-box';\nconst scratchVector2 = new Vector3();\nconst scratchVector3 = new Vector3();\nconst scratchVector4 = new Vector3();\nconst scratchVector5 = new Vector3();\nconst scratchVector6 = new Vector3();\nconst scratchCovarianceResult = new Matrix3();\nconst scratchEigenResult = {\n  diagonal: new Matrix3(),\n  unitary: new Matrix3()\n};\nexport function makeOrientedBoundingBoxFromPoints(positions, result = new OrientedBoundingBox()) {\n  if (!positions || positions.length === 0) {\n    result.halfAxes = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    result.center = new Vector3();\n    return result;\n  }\n\n  const length = positions.length;\n  const meanPoint = new Vector3(0, 0, 0);\n\n  for (const position of positions) {\n    meanPoint.add(position);\n  }\n\n  const invLength = 1.0 / length;\n  meanPoint.multiplyByScalar(invLength);\n  let exx = 0.0;\n  let exy = 0.0;\n  let exz = 0.0;\n  let eyy = 0.0;\n  let eyz = 0.0;\n  let ezz = 0.0;\n\n  for (const position of positions) {\n    const p = scratchVector2.copy(position).subtract(meanPoint);\n    exx += p.x * p.x;\n    exy += p.x * p.y;\n    exz += p.x * p.z;\n    eyy += p.y * p.y;\n    eyz += p.y * p.z;\n    ezz += p.z * p.z;\n  }\n\n  exx *= invLength;\n  exy *= invLength;\n  exz *= invLength;\n  eyy *= invLength;\n  eyz *= invLength;\n  ezz *= invLength;\n  const covarianceMatrix = scratchCovarianceResult;\n  covarianceMatrix[0] = exx;\n  covarianceMatrix[1] = exy;\n  covarianceMatrix[2] = exz;\n  covarianceMatrix[3] = exy;\n  covarianceMatrix[4] = eyy;\n  covarianceMatrix[5] = eyz;\n  covarianceMatrix[6] = exz;\n  covarianceMatrix[7] = eyz;\n  covarianceMatrix[8] = ezz;\n  const {\n    unitary\n  } = computeEigenDecomposition(covarianceMatrix, scratchEigenResult);\n  const rotation = result.halfAxes.copy(unitary);\n  let v1 = rotation.getColumn(0, scratchVector4);\n  let v2 = rotation.getColumn(1, scratchVector5);\n  let v3 = rotation.getColumn(2, scratchVector6);\n  let u1 = -Number.MAX_VALUE;\n  let u2 = -Number.MAX_VALUE;\n  let u3 = -Number.MAX_VALUE;\n  let l1 = Number.MAX_VALUE;\n  let l2 = Number.MAX_VALUE;\n  let l3 = Number.MAX_VALUE;\n\n  for (const position of positions) {\n    u1 = Math.max(position.dot(v1), u1);\n    u2 = Math.max(position.dot(v2), u2);\n    u3 = Math.max(position.dot(v3), u3);\n    l1 = Math.min(position.dot(v1), l1);\n    l2 = Math.min(position.dot(v2), l2);\n    l3 = Math.min(position.dot(v3), l3);\n  }\n\n  v1 = v1.multiplyByScalar(0.5 * (l1 + u1));\n  v2 = v2.multiplyByScalar(0.5 * (l2 + u2));\n  v3 = v3.multiplyByScalar(0.5 * (l3 + u3));\n  result.center.copy(v1).add(v2).add(v3);\n  const scale = scratchVector3.set(u1 - l1, u2 - l2, u3 - l3).multiplyByScalar(0.5);\n  const scaleMatrix = new Matrix3([scale[0], 0, 0, 0, scale[1], 0, 0, 0, scale[2]]);\n  result.halfAxes.multiplyRight(scaleMatrix);\n  return result;\n}\nexport function makeAxisAlignedBoundingBoxFromPoints(positions, result = new AxisAlignedBoundingBox()) {\n  if (!positions || positions.length === 0) {\n    result.minimum.set(0, 0, 0);\n    result.maximum.set(0, 0, 0);\n    result.center.set(0, 0, 0);\n    result.halfDiagonal.set(0, 0, 0);\n    return result;\n  }\n\n  let minimumX = positions[0][0];\n  let minimumY = positions[0][1];\n  let minimumZ = positions[0][2];\n  let maximumX = positions[0][0];\n  let maximumY = positions[0][1];\n  let maximumZ = positions[0][2];\n\n  for (const p of positions) {\n    const x = p[0];\n    const y = p[1];\n    const z = p[2];\n    minimumX = Math.min(x, minimumX);\n    maximumX = Math.max(x, maximumX);\n    minimumY = Math.min(y, minimumY);\n    maximumY = Math.max(y, maximumY);\n    minimumZ = Math.min(z, minimumZ);\n    maximumZ = Math.max(z, maximumZ);\n  }\n\n  result.minimum.set(minimumX, minimumY, minimumZ);\n  result.maximum.set(maximumX, maximumY, maximumZ);\n  result.center.copy(result.minimum).add(result.maximum).scale(0.5);\n  result.halfDiagonal.copy(result.maximum).subtract(result.center);\n  return result;\n}\n//# sourceMappingURL=bounding-box-from-points.js.map","export const TILE_CONTENT_STATE = {\n  UNLOADED: 0, // Has never been requested\n  LOADING: 1, // Is waiting on a pending request\n  PROCESSING: 2, // Request received.  Contents are being processed for rendering.  Depending on the content, it might make its own requests for external data.\n  READY: 3, // Ready to render.\n  EXPIRED: 4, // Is expired and will be unloaded once new content is loaded.\n  FAILED: 5 // Request failed.\n};\n\nexport const TILE_REFINEMENT = {\n  ADD: 1, // Render tile and, if screen space error exceeded, also refine to its children.\n  REPLACE: 2 // Render tile or, if screen space error exceeded, refine to its descendants instead.\n};\n\nexport const TILE_TYPE = {\n  EMPTY: 'empty',\n  SCENEGRAPH: 'scenegraph',\n  POINTCLOUD: 'pointcloud',\n  MESH: 'mesh'\n};\n\nexport const TILESET_TYPE = {\n  I3S: 'I3S',\n  TILES3D: 'TILES3D'\n};\n\nexport const LOD_METRIC_TYPE = {\n  GEOMETRIC_ERROR: 'geometricError',\n  MAX_SCREEN_THRESHOLD: 'maxScreenThreshold'\n};\n\n// Cesium 3D Tiles Specific\nexport const TILE3D_OPTIMIZATION_HINT = {\n  NOT_COMPUTED: -1,\n  USE_OPTIMIZATION: 1,\n  SKIP_OPTIMIZATION: 0\n};\n","import type {GPUTextureFormat} from '../../types';\n\nconst BROWSER_PREFIXES = ['', 'WEBKIT_', 'MOZ_'];\n\nconst WEBGL_EXTENSIONS: {[key: string]: GPUTextureFormat} = {\n  /* eslint-disable camelcase */\n  WEBGL_compressed_texture_s3tc: 'dxt',\n  WEBGL_compressed_texture_s3tc_srgb: 'dxt-srgb',\n  WEBGL_compressed_texture_etc1: 'etc1',\n  WEBGL_compressed_texture_etc: 'etc2',\n  WEBGL_compressed_texture_pvrtc: 'pvrtc',\n  WEBGL_compressed_texture_atc: 'atc',\n  WEBGL_compressed_texture_astc: 'astc',\n  EXT_texture_compression_rgtc: 'rgtc'\n  /* eslint-enable camelcase */\n};\n\nlet formats: Set<GPUTextureFormat> | null = null;\n\n/**\n * Returns a list of formats.\n * Creates a temporary WebGLRenderingContext if none is provided.\n *\n * @param gl - Optional context.\n */\nexport function getSupportedGPUTextureFormats(gl?: WebGLRenderingContext): Set<string> {\n  if (!formats) {\n    gl = gl || getWebGLContext() || undefined;\n\n    formats = new Set<GPUTextureFormat>();\n\n    for (const prefix of BROWSER_PREFIXES) {\n      for (const extension in WEBGL_EXTENSIONS) {\n        // eslint-disable-next-line max-depth\n        if (gl && gl.getExtension(`${prefix}${extension}`)) {\n          const gpuTextureFormat = WEBGL_EXTENSIONS[extension];\n          formats.add(gpuTextureFormat);\n        }\n      }\n    }\n  }\n\n  return formats;\n}\n\n/**\n * @returns {WebGLRenderingContext?}\n */\nfunction getWebGLContext() {\n  try {\n    const canvas = document.createElement('canvas');\n    return canvas.getContext('webgl');\n  } catch (error) {\n    return null;\n  }\n}\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nasync function parseNodePage(data) {\n  return JSON.parse(new TextDecoder().decode(data));\n}\n\n/**\n * Loader for I3S node pages\n */\nexport const I3SNodePageLoader: LoaderWithParser = {\n  name: 'I3S Node Page',\n  id: 'i3s-node-page',\n  module: 'i3s',\n  version: VERSION,\n  mimeTypes: ['application/json'],\n  parse,\n  extensions: ['json'],\n  options: {}\n};\n\nasync function parse(data) {\n  data = parseNodePage(data);\n  return data;\n}\n","import {load} from '@loaders.gl/core';\nimport {getSupportedGPUTextureFormats} from '@loaders.gl/textures';\nimport {Tileset, NodePage} from '../../types';\nimport {I3SNodePageLoader} from '../../i3s-node-page-loader';\nimport {normalizeTileNonUrlData} from '../parsers/parse-i3s';\nimport {getUrlWithToken, generateTilesetAttributeUrls} from '../utils/url-utils';\n\n/**\n * class I3SNodePagesTiles - loads nodePages and form i3s tiles from them\n */\nexport default class I3SNodePagesTiles {\n  tileset: Tileset;\n  nodePages: NodePage[];\n  nodesPerPage: number;\n  options: {[key: string]: any};\n  lodSelectionMetricType: any;\n  textureDefinitionsSelectedFormats: any[];\n\n  /**\n   * @constructs\n   * Create a I3SNodePagesTiles instance.\n   * @param tileset - i3s tileset header ('layers/0')\n   * @param options - i3s loader options\n   */\n  constructor(tileset: Tileset, options: object) {\n    this.tileset = {...tileset}; // spread the tileset to avoid circular reference\n    this.nodesPerPage = tileset.nodePages.nodesPerPage;\n    this.lodSelectionMetricType = tileset.nodePages.lodSelectionMetricType;\n    this.options = options;\n    this.nodePages = [];\n    this.textureDefinitionsSelectedFormats = [];\n\n    this._initSelectedFormatsForTextureDefinitions(tileset);\n  }\n\n  /**\n   * Loads some nodePage and return a particular node from it\n   * @param id - id of node through all node pages\n   */\n  async getNodeById(id: number) {\n    const pageIndex = Math.floor(id / this.nodesPerPage);\n    if (!this.nodePages[pageIndex]) {\n      const nodePageUrl = getUrlWithToken(\n        `${this.tileset.url}/nodepages/${pageIndex}`,\n        this.options.i3s?.token\n      );\n      this.nodePages[pageIndex] = load(nodePageUrl, I3SNodePageLoader, this.options);\n      this.nodePages[pageIndex] = await this.nodePages[pageIndex];\n    }\n    if (this.nodePages[pageIndex] instanceof Promise) {\n      this.nodePages[pageIndex] = await this.nodePages[pageIndex];\n    }\n    const nodeIndex = id % this.nodesPerPage;\n    return this.nodePages[pageIndex].nodes[nodeIndex];\n  }\n\n  /**\n   * Forms tile header using node and tileset data\n   * @param id - id of node through all node pages\n   */\n  // eslint-disable-next-line complexity\n  async formTileFromNodePages(id: number) {\n    const node = await this.getNodeById(id);\n    const children: any[] = [];\n    for (const child of node.children || []) {\n      const childNode = await this.getNodeById(child);\n      children.push({\n        id: child,\n        obb: childNode.obb\n      });\n    }\n\n    let contentUrl = null;\n    let textureUrl: string | null = null;\n    let materialDefinition = null;\n    let textureFormat = 'jpeg';\n    let attributeUrls: string[] = [];\n    let isDracoGeometry = false;\n\n    if (node && node.mesh) {\n      // Get geometry resource URL and type (compressed / non-compressed)\n      const {url, isDracoGeometry: isDracoGeometryResult} = (node.mesh.geometry &&\n        this._getContentUrl(node.mesh.geometry)) || {url: null, isDracoGeometry: null};\n      contentUrl = url;\n      isDracoGeometry = isDracoGeometryResult;\n\n      const [textureData, nodeMaterialDefinition] = this._getInformationFromMaterial(\n        node.mesh.material\n      );\n      materialDefinition = nodeMaterialDefinition;\n      textureFormat = textureData.format || textureFormat;\n      if (textureData.name) {\n        textureUrl = `${this.tileset.url}/nodes/${node.mesh.material.resource}/textures/${textureData.name}`;\n      }\n\n      if (this.tileset.attributeStorageInfo) {\n        attributeUrls = generateTilesetAttributeUrls(this.tileset, node.mesh.attribute.resource);\n      }\n    }\n\n    const lodSelection = this._getLodSelection(node);\n\n    return normalizeTileNonUrlData({\n      id,\n      lodSelection,\n      obb: node.obb,\n      contentUrl,\n      textureUrl,\n      attributeUrls,\n      materialDefinition,\n      textureFormat,\n      children,\n      isDracoGeometry\n    });\n  }\n\n  /**\n   * Forms url and type of geometry resource by nodepage's data and `geometryDefinitions` in the tileset\n   * @param {Object} meshGeometryData - data about the node's mesh from the nodepage\n   * @returns {Object} -\n   *   {string} url - url to the geometry resource\n   *   {boolean} isDracoGeometry - whether the geometry resource contain DRACO compressed geometry\n   */\n  _getContentUrl(meshGeometryData) {\n    let result = {};\n    const geometryDefinition = this.tileset.geometryDefinitions[meshGeometryData.definition];\n    let geometryIndex = -1;\n    // Try to find DRACO geometryDefinition of `useDracoGeometry` option is set\n    if (this.options.i3s && this.options.i3s.useDracoGeometry) {\n      geometryIndex = geometryDefinition.geometryBuffers.findIndex(\n        (buffer) => buffer.compressedAttributes && buffer.compressedAttributes.encoding === 'draco'\n      );\n    }\n    // If DRACO geometry is not applicable try to select non-compressed geometry\n    if (geometryIndex === -1) {\n      geometryIndex = geometryDefinition.geometryBuffers.findIndex(\n        (buffer) => !buffer.compressedAttributes\n      );\n    }\n    if (geometryIndex !== -1) {\n      const isDracoGeometry = Boolean(\n        geometryDefinition.geometryBuffers[geometryIndex].compressedAttributes\n      );\n      result = {\n        url: `${this.tileset.url}/nodes/${meshGeometryData.resource}/geometries/${geometryIndex}`,\n        isDracoGeometry\n      };\n    }\n    return result;\n  }\n\n  /**\n   * Forms 1.6 compatible LOD selection object from a nodepage's node data\n   * @param {Object} node - a node from nodepage\n   * @returns {Object[]} - Array of object of following properties:\n   *   {string} metricType - the label of the LOD metric\n   *   {number} maxError - the value of the metric\n   */\n  _getLodSelection(node): object[] {\n    const lodSelection: object[] = [];\n    if (this.lodSelectionMetricType === 'maxScreenThresholdSQ') {\n      lodSelection.push({\n        metricType: 'maxScreenThreshold',\n        maxError: Math.sqrt(node.lodThreshold / (Math.PI * 0.25))\n      });\n    }\n    lodSelection.push({\n      metricType: this.lodSelectionMetricType,\n      maxError: node.lodThreshold\n    });\n    return lodSelection;\n  }\n\n  /**\n   * Returns information about texture and material from `materialDefinitions`\n   * @param {Object} material - material data from nodepage\n   * @returns {Object[]} - Couple [textureData, materialDefinition]\n   * {string} textureData.name - path name of the texture\n   * {string} textureData.format - format of the texture\n   * materialDefinition - PBR-like material definition from `materialDefinitions`\n   */\n  _getInformationFromMaterial(material) {\n    const textureDataDefault = {name: null, format: null};\n    if (material) {\n      const materialDefinition = this.tileset.materialDefinitions[material.definition];\n      const textureSetDefinitionIndex =\n        materialDefinition &&\n        materialDefinition.pbrMetallicRoughness &&\n        materialDefinition.pbrMetallicRoughness.baseColorTexture &&\n        materialDefinition.pbrMetallicRoughness.baseColorTexture.textureSetDefinitionId;\n      if (textureSetDefinitionIndex || textureSetDefinitionIndex === 0) {\n        const textureData =\n          this.textureDefinitionsSelectedFormats[textureSetDefinitionIndex] || textureDataDefault;\n        return [textureData, materialDefinition];\n      }\n      return [textureDataDefault, materialDefinition];\n    }\n    return [textureDataDefault, null];\n  }\n\n  /**\n   * Sets preferable and supported format for each textureDefinition of the tileset\n   * @param {Object} tileset - I3S layer data\n   * @returns {void}\n   */\n  _initSelectedFormatsForTextureDefinitions(tileset) {\n    this.textureDefinitionsSelectedFormats = [];\n    const possibleI3sFormats = this._getSupportedTextureFormats();\n    const textureSetDefinitions = tileset.textureSetDefinitions || [];\n    for (const textureSetDefinition of textureSetDefinitions) {\n      const formats = (textureSetDefinition && textureSetDefinition.formats) || [];\n      let selectedFormat = null;\n      for (const i3sFormat of possibleI3sFormats) {\n        const format = formats.find((value) => value.format === i3sFormat);\n        if (format) {\n          selectedFormat = format;\n          break;\n        }\n      }\n      this.textureDefinitionsSelectedFormats.push(selectedFormat);\n    }\n  }\n\n  /**\n   * Returns the array of supported texture format\n   * @returns list of format strings\n   */\n  _getSupportedTextureFormats(): string[] {\n    const formats: string[] = [];\n    if (!this.options.i3s || this.options.i3s.useCompressedTextures) {\n      const supportedCompressedFormats = getSupportedGPUTextureFormats();\n      // List of possible in i3s formats:\n      // https://github.com/Esri/i3s-spec/blob/master/docs/1.7/textureSetDefinitionFormat.cmn.md\n      if (supportedCompressedFormats.has('etc2')) {\n        formats.push('ktx-etc2');\n      }\n      if (supportedCompressedFormats.has('dxt')) {\n        formats.push('dds');\n      }\n    }\n\n    formats.push('jpg');\n    formats.push('png');\n    return formats;\n  }\n}\n","import {OrientedBoundingBox} from '@math.gl/culling';\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {load} from '@loaders.gl/core';\nimport {TILE_TYPE, TILE_REFINEMENT, TILESET_TYPE} from '@loaders.gl/tiles';\nimport I3SNodePagesTiles from '../helpers/i3s-nodepages-tiles';\nimport {generateTileAttributeUrls, getUrlWithToken} from '../utils/url-utils';\n\nexport function normalizeTileData(tile, options, context) {\n  tile.url = context.url;\n\n  if (tile.featureData) {\n    tile.featureUrl = `${tile.url}/${tile.featureData[0].href}`;\n  }\n\n  if (tile.geometryData) {\n    tile.contentUrl = `${tile.url}/${tile.geometryData[0].href}`;\n  }\n\n  if (tile.textureData) {\n    tile.textureUrl = `${tile.url}/${tile.textureData[0].href}`;\n  }\n\n  if (tile.attributeData) {\n    tile.attributeUrls = generateTileAttributeUrls(tile);\n  }\n\n  return normalizeTileNonUrlData(tile);\n}\n\nexport function normalizeTileNonUrlData(tile) {\n  const box = tile.obb\n    ? [\n      ...Ellipsoid.WGS84.cartographicToCartesian(tile.obb.center), // cartesian center of box\n      ...tile.obb.halfSize, // halfSize\n      ...tile.obb.quaternion // quaternion\n    ]\n    : undefined;\n  let sphere;\n  if (tile.mbs) {\n    sphere = [\n      ...Ellipsoid.WGS84.cartographicToCartesian(tile.mbs.slice(0, 3)), // cartesian center of sphere\n      tile.mbs[3] // radius of sphere\n    ];\n  } else if (box) {\n    const obb = new OrientedBoundingBox().fromCenterHalfSizeQuaternion(\n      box.slice(0, 3),\n      tile.obb.halfSize,\n      tile.obb.quaternion\n    );\n    const boundingSphere = obb.getBoundingSphere();\n    sphere = [...boundingSphere.center, boundingSphere.radius];\n    tile.mbs = [...tile.obb.center, boundingSphere.radius];\n  }\n\n  tile.boundingVolume = {\n    sphere,\n    box\n  };\n  tile.lodMetricType = tile.lodSelection[0].metricType;\n  tile.lodMetricValue = tile.lodSelection[0].maxError;\n  tile.transformMatrix = tile.transform;\n  tile.type = TILE_TYPE.MESH;\n  // TODO only support replacement for now\n  tile.refine = TILE_REFINEMENT.REPLACE;\n\n  return tile;\n}\n\nexport async function normalizeTilesetData(tileset, options, context) {\n  tileset.url = context.url;\n\n  if (tileset.nodePages) {\n    tileset.nodePagesTile = new I3SNodePagesTiles(tileset, options);\n    tileset.root = await tileset.nodePagesTile.formTileFromNodePages(0);\n  } else {\n    const rootNodeUrl = getUrlWithToken(`${tileset.url}/nodes/root`, options.i3s?.token);\n    // eslint-disable-next-line no-use-before-define\n    tileset.root = await load(rootNodeUrl, tileset.loader, {\n      i3s: {loadContent: false, isTileHeader: true, isTileset: false}\n    });\n  }\n\n  // base path that non-absolute paths in tileset are relative to.\n  tileset.basePath = tileset.url;\n  tileset.type = TILESET_TYPE.I3S;\n\n  // populate from root node\n  tileset.lodMetricType = tileset.root.lodMetricType;\n  tileset.lodMetricValue = tileset.root.lodMetricValue;\n}\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {load, parse} from '@loaders.gl/core';\nimport {I3SContentLoader} from './i3s-content-loader';\nimport {normalizeTileData, normalizeTilesetData} from './lib/parsers/parse-i3s';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nconst TILESET_REGEX = /layers\\/[0-9]+$/;\nconst TILE_HEADER_REGEX = /nodes\\/([0-9-]+|root)$/;\nconst SLPK_HEX = '504b0304';\n\n/**\n * Loader for I3S - Indexed 3D Scene Layer\n */\nexport const I3SLoader: LoaderWithParser = {\n  name: 'I3S (Indexed Scene Layers)',\n  id: 'i3s',\n  module: 'i3s',\n  version: VERSION,\n  mimeTypes: ['application/octet-stream'],\n  parse: parseI3S,\n  extensions: ['bin'],\n  options: {\n    i3s: {\n      loadContent: true,\n      token: null,\n      isTileset: 'auto',\n      isTileHeader: 'auto',\n      tile: null,\n      tileset: null,\n      useDracoGeometry: true,\n      useCompressedTextures: true\n    }\n  }\n};\n\nasync function parseI3S(data, options, context) {\n  const url = context.url;\n  options.i3s = options.i3s || {};\n  const magicNumber = getMagicNumber(data);\n\n  // check if file is slpk\n  if (magicNumber === SLPK_HEX) {\n    throw new Error('Files with .slpk extention currently are not supported by I3SLoader');\n  }\n\n  // auto detect file type based on url\n  let isTileset;\n  if (options.i3s.isTileset === 'auto') {\n    isTileset = TILESET_REGEX.test(url);\n  } else {\n    isTileset = options.i3s.isTileset;\n  }\n\n  let isTileHeader;\n  if (options.isTileHeader === 'auto') {\n    isTileHeader = TILE_HEADER_REGEX.test(url);\n  } else {\n    isTileHeader = options.i3s.isTileHeader;\n  }\n\n  if (isTileset) {\n    data = await parseTileset(data, options, context);\n  } else if (isTileHeader) {\n    data = await parseTile(data, options, context);\n    if (options.i3s.loadContent) {\n      options.i3s.tile = data;\n      await load(data.contentUrl, I3SLoader, options);\n    }\n  } else {\n    data = await parseTileContent(data, options);\n  }\n\n  return data;\n}\n\nasync function parseTileContent(arrayBuffer, options) {\n  return await parse(arrayBuffer, I3SContentLoader, options);\n}\n\nasync function parseTileset(data, options, context) {\n  const tilesetJson = JSON.parse(new TextDecoder().decode(data));\n  // eslint-disable-next-line no-use-before-define\n  tilesetJson.loader = I3SLoader;\n  await normalizeTilesetData(tilesetJson, options, context);\n\n  return tilesetJson;\n}\n\nasync function parseTile(data, options, context) {\n  data = JSON.parse(new TextDecoder().decode(data));\n  return normalizeTileData(data, options, context);\n}\n\nfunction getMagicNumber(data) {\n  if (data instanceof ArrayBuffer) {\n    // slice binary data (4 bytes from the beginning) and transform it to hexadecimal numeral system\n    return [...new Uint8Array(data, 0, 4)]\n      .map((value) => value.toString(16).padStart(2, '0'))\n      .join('');\n  }\n  return null;\n}\n","import {STRING_ATTRIBUTE_TYPE, OBJECT_ID_ATTRIBUTE_TYPE, FLOAT_64_TYPE} from './constants';\n\n/**\n * Get particular tile and creates attribute object inside.\n * @param {ArrayBuffer} arrayBuffer\n * @param {Object} options\n * @returns {Promise<object>}\n */\nexport async function parseI3STileAttribute(arrayBuffer, options) {\n  const {attributeName, attributeType} = options;\n\n  if (!attributeName) {\n    return {};\n  }\n  return {\n    [attributeName]: attributeType ? parseAttribute(attributeType, arrayBuffer) : null\n  };\n}\n\n/**\n * Parse attributes based on attribute type.\n * @param {String} attributeType\n * @param {ArrayBuffer} arrayBuffer\n * @returns {any}\n */\nfunction parseAttribute(attributeType, arrayBuffer) {\n  switch (attributeType) {\n    case STRING_ATTRIBUTE_TYPE:\n      return parseStringsAttribute(arrayBuffer);\n    case OBJECT_ID_ATTRIBUTE_TYPE:\n      return parseShortNumberAttribute(arrayBuffer);\n    case FLOAT_64_TYPE:\n      return parseFloatAttribute(arrayBuffer);\n    default:\n      return parseShortNumberAttribute(arrayBuffer);\n  }\n}\n\n/**\n * Parse short number attribute.\n * Short Integer spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.7/attributeStorageInfo.cmn.md\n * @param {ArrayBuffer} arrayBuffer\n * @returns {Uint32Array}\n */\nfunction parseShortNumberAttribute(arrayBuffer) {\n  const countOffset = 4;\n  return new Uint32Array(arrayBuffer, countOffset);\n}\n\n/**\n * Parse float attribute.\n * Double Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.7/attributeStorageInfo.cmn.md\n * @param {ArrayBuffer} arrayBuffer\n * @returns {Float64Array}\n */\nfunction parseFloatAttribute(arrayBuffer) {\n  const countOffset = 8;\n  return new Float64Array(arrayBuffer, countOffset);\n}\n\n/**\n * Parse string attribute.\n * String spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.7/attributeStorageInfo.cmn.md\n * @param arrayBuffer\n * @returns list of strings\n */\nfunction parseStringsAttribute(arrayBuffer: ArrayBuffer): string[] {\n  const stringsCountOffset = 0;\n  const dataOffset = 8;\n  const bytesPerStringSize = 4;\n  const stringsArray: string[] = [];\n\n  try {\n    // Use DataView to avoid multiple of 4 error on Uint32Array constructor\n    const stringsCount = new DataView(\n      arrayBuffer,\n      stringsCountOffset,\n      bytesPerStringSize\n    ).getUint32(stringsCountOffset, true);\n    const stringSizes = new Uint32Array(arrayBuffer, dataOffset, stringsCount);\n    let stringOffset = dataOffset + stringsCount * bytesPerStringSize;\n\n    for (const stringByteSize of stringSizes) {\n      const textDecoder = new TextDecoder('utf-8');\n      const stringAttribute = new Uint8Array(arrayBuffer, stringOffset, stringByteSize);\n      stringsArray.push(textDecoder.decode(stringAttribute));\n      stringOffset += stringByteSize;\n    }\n  } catch (error) {\n    console.error('Parse string attribute error: ', (error as Error).message); // eslint-disable-line\n  }\n\n  return stringsArray;\n}\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {load} from '@loaders.gl/core';\nimport {parseI3STileAttribute} from './lib/parsers/parse-i3s-attribute';\nimport {getUrlWithToken} from './lib/utils/url-utils';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\nconst EMPTY_VALUE = '';\nconst REJECTED_STATUS = 'rejected';\n/**\n * Loader for I3S attributes\n */\nexport const I3SAttributeLoader: LoaderWithParser = {\n  name: 'I3S Attribute',\n  id: 'i3s-attribute',\n  module: 'i3s',\n  version: VERSION,\n  mimeTypes: ['application/binary'],\n  parse,\n  extensions: ['bin'],\n  options: {},\n  binary: true\n};\n\nasync function parse(data, options) {\n  data = parseI3STileAttribute(data, options);\n  return data;\n}\n\n/**\n * Load attributes based on feature id\n * @param {Object} tile\n * @param {number} featureId\n * @param {Object} options\n * @returns {Promise}\n */\n// eslint-disable-next-line complexity\nexport async function loadFeatureAttributes(tile, featureId, options = {}) {\n  const {attributeStorageInfo, attributeUrls} = getAttributesData(tile);\n\n  if (!attributeStorageInfo || !attributeUrls || !featureId) {\n    return null;\n  }\n\n  let attributes: object[] = [];\n  const attributeLoadPromises: Promise<object>[] = [];\n\n  for (let index = 0; index < attributeStorageInfo.length; index++) {\n    // @ts-ignore\n    const url = getUrlWithToken(attributeUrls[index], options.i3s?.token);\n    const attributeName = attributeStorageInfo[index].name;\n    const attributeType = getAttributeValueType(attributeStorageInfo[index]);\n    const loadOptions = {...options, attributeName, attributeType};\n    const promise = load(url, I3SAttributeLoader, loadOptions);\n\n    attributeLoadPromises.push(promise);\n  }\n  try {\n    attributes = await Promise.allSettled(attributeLoadPromises);\n  } catch (error) {\n    // do nothing\n  }\n\n  if (!attributes.length) {\n    return null;\n  }\n\n  return generateAttributesByFeatureId(attributes, attributeStorageInfo, featureId);\n}\n\nfunction getAttributesData(tile) {\n  const attributeStorageInfo =\n    tile && tile.tileset && tile.tileset.tileset && tile.tileset.tileset.attributeStorageInfo;\n  const attributeUrls = tile && tile.header && tile.header.attributeUrls;\n\n  return {attributeStorageInfo, attributeUrls};\n}\n\n/**\n * Get attribute value type based on property names\n * @param {Object} attribute\n * @returns {String}\n */\nfunction getAttributeValueType(attribute) {\n  if (attribute.hasOwnProperty('objectIds')) {\n    return 'Oid32';\n  } else if (attribute.hasOwnProperty('attributeValues')) {\n    return attribute.attributeValues.valueType;\n  }\n  return '';\n}\n\n/**\n * Generates mapping featureId to feature attributes\n * @param {Array} attributes\n * @param {Object} attributeStorageInfo\n * @param {number} featureId\n * @returns {Object}\n */\nfunction generateAttributesByFeatureId(attributes, attributeStorageInfo, featureId) {\n  const objectIds = attributes.find((attribute) => attribute.value.OBJECTID);\n\n  if (!objectIds) {\n    return null;\n  }\n\n  const attributeIndex = objectIds.value.OBJECTID.indexOf(featureId);\n\n  if (attributeIndex < 0) {\n    return null;\n  }\n\n  return getFeatureAttributesByIndex(attributes, attributeIndex, attributeStorageInfo);\n}\n\n/**\n * Generates attribute object for feature mapping by feature id\n * @param {Array} attributes\n * @param {Number} featureIdIndex\n * @param {Object} attributeStorageInfo\n * @returns {Object}\n */\nfunction getFeatureAttributesByIndex(attributes, featureIdIndex, attributeStorageInfo) {\n  const attributesObject = {};\n\n  for (let index = 0; index < attributeStorageInfo.length; index++) {\n    const attributeName = attributeStorageInfo[index].name;\n    const attribute = getAttributeByIndexAndAttributeName(attributes, index, attributeName);\n    attributesObject[attributeName] = formatAttributeValue(attribute, featureIdIndex);\n  }\n\n  return attributesObject;\n}\n\n/**\n * Return attribute value if it presents in atrributes list\n * @param {array} attributes\n * @param {number} index\n * @param {string} attributesName\n */\nfunction getAttributeByIndexAndAttributeName(attributes, index, attributesName) {\n  const attributeObject = attributes[index];\n\n  if (attributeObject.status === REJECTED_STATUS) {\n    return null;\n  }\n\n  return attributeObject.value[attributesName];\n}\n\n/**\n * Do formatting of attribute values or return empty string.\n * @param {Array} attribute\n * @param {Number} featureIdIndex\n * @returns {String}\n */\nfunction formatAttributeValue(attribute, featureIdIndex) {\n  return attribute && attribute[featureIdIndex]\n    ? attribute[featureIdIndex]\n      .toString()\n    // eslint-disable-next-line no-control-regex\n      .replace(/\\u0000/g, '')\n      .trim()\n    : EMPTY_VALUE;\n}\n","// Purpose: include this in your module to avoid\n// dependencies on micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\ntype obj = {[key: string]: any};\nconst self_: obj = globals.self || globals.window || globals.global || {};\nconst window_: obj = globals.window || globals.self || globals.global || {};\nconst global_: obj = globals.global || globals.self || globals.window || {};\nconst document_: obj = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in a browser */\nexport const isBrowser: boolean =\n  // @ts-ignore process does not exist on browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running in a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n/** Major Node version (as a number) */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n"],"sourceRoot":""}